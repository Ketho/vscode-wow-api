interface CVarInterface {
	[key: string]: {
		name: string,
		default: string,
		category: number,
		scope?: string,
		secure?: boolean,
		help?: string,
	}
}

// match case insensitive
export const data: CVarInterface = {
	aibrain: {
		name: "AIBrain",
		default: "0",
		category: 5,
	},
	aicontroller: {
		name: "AIController",
		default: "0",
		category: 5,
	},
	aicontrollereventlog: {
		name: "AIControllerEventLog",
		default: "0",
		category: 5,
	},
	aieventlog: {
		name: "AIEventLog",
		default: "0",
		category: 5,
	},
	actionbuttonusekeydown: {
		name: "ActionButtonUseKeyDown",
		default: "1",
		category: 4,
		scope: "Character",
		help: "Activate the action button on a keydown",
	},
	actionbuttonusekeyheldspell: {
		name: "ActionButtonUseKeyHeldSpell",
		default: "0",
		category: 4,
		scope: "Character",
		help: "Activate the press and hold cast option on a keydown",
	},
	advflyingdynamicfovenabled: {
		name: "AdvFlyingDynamicFOVEnabled",
		default: "1",
		category: 4,
		help: "Enables adjustment of camera field of view based on gliding speed",
	},
	allowsoftwarerenderer: {
		name: "AllowSoftwareRenderer",
		default: "0",
		category: 1,
		help: "Allows WoW to run without a GPU. Performance will be very bad",
	},
	allowsoftwarerendererdx12: {
		name: "AllowSoftwareRendererDX12",
		default: "0",
		category: 1,
		help: "DX11 software render is used by default, due to issues with the DX12 software renderer",
	},
	allowwinrt: {
		name: "AllowWinRT",
		default: "0",
		category: 5,
		help: "Disable if WoW is crashing due to issues with the Windows GameBar",
	},
	areatriggereventlog: {
		name: "AreaTriggerEventLog",
		default: "0",
		category: 5,
	},
	areatriggers: {
		name: "AreaTriggers",
		default: "0",
		category: 5,
	},
	auradebugger: {
		name: "AuraDebugger",
		default: "0",
		category: 5,
	},
	auraeventlog: {
		name: "AuraEventLog",
		default: "0",
		category: 5,
	},
	autopushspelltoactionbar: {
		name: "AutoPushSpellToActionBar",
		default: "1",
		category: 4,
		scope: "Account",
		help: "Determines if spells are automatically pushed to the Action Bar. 0: No, 1: Yes (default).",
	},
	beckontriggereventlog: {
		name: "BeckonTriggerEventlog",
		default: "0",
		category: 5,
	},
	behaviortree: {
		name: "BehaviorTree",
		default: "0",
		category: 5,
	},
	brightness: {
		name: "Brightness",
		default: "50.000000",
		category: 1,
		help: "Brightness adjustment. Range: [0 - 100]",
	},
	cmaa2extrasharpness: {
		name: "CMAA2ExtraSharpness",
		default: "0",
		category: 1,
		help: "Set to 1 to preserve even more text and shape clarity at the expense of less AA",
	},
	cmaa2halffloat: {
		name: "CMAA2HalfFloat",
		default: "0",
		category: 1,
		help: "0: 32-bit Float. 1: 16-bit Float.",
	},
	cmaa2quality: {
		name: "CMAA2Quality",
		default: "3",
		category: 1,
		help: "CMAA2 Quality Level. 0 - LOW, 1 - MEDIUM, 2 - HIGH, 3 - ULTRA",
	},
	camerafollowgamepadadjustdelay: {
		name: "CameraFollowGamepadAdjustDelay",
		default: "1.000000",
		category: 4,
		scope: "Character",
		help: "Delay before follow resuming after manually adjusting the camera with Gamepad input",
	},
	camerafollowgamepadadjusteasein: {
		name: "CameraFollowGamepadAdjustEaseIn",
		default: "1.000000",
		category: 4,
		scope: "Character",
		help: "Ease-in time for follow resuming after manually adjusting the camera with Gamepad input",
	},
	camerafollowonstick: {
		name: "CameraFollowOnStick",
		default: "0",
		category: 4,
		scope: "Character",
		help: "Enable camera to follow target as though being pushed/pulled along on a stick",
	},
	camerafollowpitchdeadzone: {
		name: "CameraFollowPitchDeadZone",
		default: "5.000000",
		category: 4,
		scope: "Character",
		help: "Controls pitch follow deadzone size",
	},
	camerafollowpitchspeed: {
		name: "CameraFollowPitchSpeed",
		default: "1.000000",
		category: 4,
		scope: "Character",
		help: "Controls speed of pitch following",
	},
	camerafollowpitchstrength: {
		name: "CameraFollowPitchStrength",
		default: "0.700000",
		category: 4,
		scope: "Character",
		help: "Controls strength of pitch following",
	},
	camerafollowsnapcharacterangle: {
		name: "CameraFollowSnapCharacterAngle",
		default: "45.000000",
		category: 4,
		scope: "Character",
		help: "Angle beyond which character will snap to camera's facing when moving",
	},
	camerafollowtargetcombat: {
		name: "CameraFollowTargetCombat",
		default: "1",
		category: 4,
		scope: "Character",
		help: "Camera follow the locked target only during combat.",
	},
	camerafollowyawspeed: {
		name: "CameraFollowYawSpeed",
		default: "1.000000",
		category: 4,
		scope: "Character",
		help: "Controls speed of yaw following",
	},
	camerakeepcharactercentered: {
		name: "CameraKeepCharacterCentered",
		default: "1",
		category: 4,
		scope: "Character",
		help: "Motion sickness control to keep character's head at center of screen to act as motion reference point. Can override other cvar settings.",
	},
	camerareduceunexpectedmovement: {
		name: "CameraReduceUnexpectedMovement",
		default: "0",
		category: 4,
		scope: "Character",
		help: "Motion sickness control to reduce camera movement without player input. Can override other cvar settings.",
	},
	chatambiencevolume: {
		name: "ChatAmbienceVolume",
		default: "0.3",
		category: 7,
		help: "Ambience Volume (0.0 to 1.0)",
	},
	chatmusicvolume: {
		name: "ChatMusicVolume",
		default: "0.3",
		category: 7,
		help: "Music volume (0.0 to 1.0)",
	},
	chatsoundvolume: {
		name: "ChatSoundVolume",
		default: "0.4",
		category: 7,
		help: "Sound volume (0.0 to 1.0)",
	},
	chromaeffectsenable: {
		name: "ChromaEffectsEnable",
		default: "1",
		category: 5,
		help: "Enable chroma effects on supported peripherals",
	},
	chromaeffectsfactioncolor: {
		name: "ChromaEffectsFactionColor",
		default: "1",
		category: 5,
		help: "Enable setting chroma base layer color to match current faction",
	},
	clientcastdebug: {
		name: "ClientCastDebug",
		default: "0",
		category: 0,
		help: "debug client cast allocation",
	},
	clientcastlimitdebug: {
		name: "ClientCastLimitDebug",
		default: "100",
		category: 0,
		help: "Limits the maximum allowed initiated casts in progress.",
	},
	clientmessageeventlog: {
		name: "ClientMessageEventLog",
		default: "0",
		category: 5,
	},
	clipcursor: {
		name: "ClipCursor",
		default: "0",
		category: 1,
		help: "Lock the cursor to the game window",
	},
	collision: {
		name: "Collision",
		default: "0",
		category: 5,
	},
	consolekey: {
		name: "ConsoleKey",
		default: "`",
		category: 2,
		help: "Set key that opens the console",
	},
	contenttuning: {
		name: "ContentTuning",
		default: "0",
		category: 5,
	},
	contrast: {
		name: "Contrast",
		default: "50.000000",
		category: 1,
		help: "Contrast adjustment. Range: [0 - 100]",
	},
	cursorcenteredypos: {
		name: "CursorCenteredYPos",
		default: "0.6",
		category: 5,
		help: "0-1 vertical position of centered cursor/targeting (0 at bottom)",
	},
	cursorfreelookcentering: {
		name: "CursorFreelookCentering",
		default: "0",
		category: 5,
		help: "Center the cursor when using Mouse freelook",
	},
	cursorfreelookstartdelta: {
		name: "CursorFreelookStartDelta",
		default: "0.001",
		category: 5,
		help: "Fraction of the screen the cursor must move to start freelook after mouse button goes down",
	},
	cursorstickycentering: {
		name: "CursorStickyCentering",
		default: "0",
		category: 5,
		help: "Make the centered position stick after freelook; Don't restore previous cursor position",
	},
	customdesigneventlog: {
		name: "CustomDesignEventLog",
		default: "0",
		category: 5,
	},
	customwindoweventlog: {
		name: "CustomWindowEventLog",
		default: "0",
		category: 5,
	},
	damagecalculator: {
		name: "DamageCalculator",
		default: "0",
		category: 5,
	},
	debugtorsotwist: {
		name: "DebugTorsoTwist",
		default: "0",
		category: 0,
		help: "Debug visualization for Torso Twist: 1 = Player, 2 = Target, 3 = All",
	},
	depthbasedopacity: {
		name: "DepthBasedOpacity",
		default: "1",
		category: 1,
		help: "Enable/Disable Soft Edge Effect",
	},
	disableadvancedflyingfullscreeneffects: {
		name: "DisableAdvancedFlyingFullScreenEffects",
		default: "0",
		category: 4,
		scope: "Character",
		help: "Disable the advanced flying full screen effects",
	},
	disableadvancedflyingvelocityvfx: {
		name: "DisableAdvancedFlyingVelocityVFX",
		default: "0",
		category: 4,
		scope: "Character",
		help: "Disable the advanced flying velocity VFX",
	},
	driverversioncheck: {
		name: "DriverVersionCheck",
		default: "1",
		category: 1,
		help: "Set 0 to disable driver version based workarounds",
	},
	dynamicrenderscale: {
		name: "DynamicRenderScale",
		default: "0",
		category: 1,
		help: "Lowers render scale if GPU bound to hit Target FPS. Note this feature is in BETA. Known issues: May cause hitching. May behave poorly with vsync on.",
	},
	dynamicrenderscalemin: {
		name: "DynamicRenderScaleMin",
		default: "0.333333",
		category: 1,
		help: "Lowest render scale DynamicRenderScale can use",
	},
	ejdungeondifficulty: {
		name: "EJDungeonDifficulty",
		default: "0",
		category: 4,
		scope: "Account",
		help: "Stores the last dungeon difficulty viewed in the encounter journal",
	},
	ejlootclass: {
		name: "EJLootClass",
		default: "-1",
		category: 4,
		scope: "Account",
		help: "Stores the last class that loot was filtered by in the encounter journal",
	},
	ejlootspec: {
		name: "EJLootSpec",
		default: "0",
		category: 4,
		scope: "Account",
		help: "Stores the last spec that loot was filtered by in the encounter journal",
	},
	ejraiddifficulty: {
		name: "EJRaidDifficulty",
		default: "0",
		category: 4,
		scope: "Account",
		help: "Stores the last raid difficulty viewed in the encounter journal",
	},
	ejselectedtier: {
		name: "EJSelectedTier",
		default: "0",
		category: 4,
		scope: "Account",
		help: "Stores the last manually selected journal tier in the encounter journal",
	},
	emittercombatrange: {
		name: "EmitterCombatRange",
		default: "900",
		category: 4,
		scope: "Character",
		help: "Range to stop shoulder/weapon emissions during combat",
	},
	empowerminholdstagepercent: {
		name: "EmpowerMinHoldStagePercent",
		default: "1.000000",
		category: 4,
		scope: "Character",
		help: "Sets a percentage of the first empower stage [0.0,1.0]. Before this point, the spell will be auto-held. After it, releases will be accepted.",
	},
	empowertapcontrolsreleasethreshold: {
		name: "EmpowerTapControlsReleaseThreshold",
		default: "300",
		category: 4,
		scope: "Character",
		help: "Sets the time in milliseconds after which release/re-hold requests will be registered for press-and-tap empowers. Begins when the cast is sent from the client.",
	},
	enableblinkapplicationicon: {
		name: "EnableBlinkApplicationIcon",
		default: "1",
		category: 4,
		help: "Allows the client to blink the application icon in the taskbar in Windows, or bounce the application icon in the dock on macOS",
	},
	errorfilter: {
		name: "ErrorFilter",
		default: "all",
		category: 0,
	},
	errorlevelmax: {
		name: "ErrorLevelMax",
		default: "3",
		category: 0,
	},
	errorlevelmin: {
		name: "ErrorLevelMin",
		default: "2",
		category: 0,
	},
	errors: {
		name: "Errors",
		default: "0",
		category: 0,
	},
	exclusivewindowmode: {
		name: "ExclusiveWindowMode",
		default: "0",
		category: 5,
		help: "Accessibility option for preventing the game window from losing focus",
	},
	footstepsounds: {
		name: "FootstepSounds",
		default: "1",
		category: 7,
		help: "play footstep sounds",
	},
	forceallowaero: {
		name: "ForceAllowAero",
		default: "0",
		category: 1,
		help: "Force Direct X 12 on Windows 7 to not disable Aero theme. You are opting into crashing in some edge cases",
	},
	forcegenerateslug: {
		name: "ForceGenerateSlug",
		default: "0",
		category: 0,
		help: "Generate .slug files for all loaded fonts before they are actually used rather than deferred load.",
	},
	forceresolutiondefaulttomaxsize: {
		name: "ForceResolutionDefaultToMaxSize",
		default: "0",
		category: 1,
		help: "Force default resolution to the maximum supported size rather than the auto-detected size",
	},
	framebuffercacheforcenoheaps: {
		name: "FrameBufferCacheForceNoHeaps",
		default: "0",
		category: 1,
		help: "Disable use of texture heaps and force the fallback path",
	},
	gamedatavisualizer: {
		name: "GameDataVisualizer",
		default: "0",
		category: 5,
	},
	gamepadanalogmovement: {
		name: "GamePadAnalogMovement",
		default: "1",
		category: 5,
		help: "Enable analog movement in any direction, rather than just the 8 cardinal directions",
	},
	gamepadcameralookmaxpitch: {
		name: "GamePadCameraLookMaxPitch",
		default: "0",
		category: 5,
		help: "Max pitch 'Look' stick can adjust camera angle",
	},
	gamepadcameralookmaxyaw: {
		name: "GamePadCameraLookMaxYaw",
		default: "0",
		category: 5,
		help: "Max yaw 'Look' stick can adjust camera angle",
	},
	gamepadcamerapitchspeed: {
		name: "GamePadCameraPitchSpeed",
		default: "1",
		category: 5,
		help: "Pitch speed of GamePad camera moving up/down",
	},
	gamepadcamerayawspeed: {
		name: "GamePadCameraYawSpeed",
		default: "1",
		category: 5,
		help: "Yaw speed of GamePad camera turning left/right",
	},
	gamepadcursorautodisablejump: {
		name: "GamePadCursorAutoDisableJump",
		default: "1",
		category: 5,
		help: "GamePad cursor control will auto-disable when you jump",
	},
	gamepadcursorautodisablesticks: {
		name: "GamePadCursorAutoDisableSticks",
		default: "2",
		category: 5,
		help: "GamePad cursor control will auto-disable on stick input (0=none, 1=movement, 2=movement+cursor)",
	},
	gamepadcursorautoenable: {
		name: "GamePadCursorAutoEnable",
		default: "1",
		category: 5,
		help: "Auto enable GamePad cursor control when opening UIs that may need it",
	},
	gamepadcursorcenteredemulation: {
		name: "GamePadCursorCenteredEmulation",
		default: "1",
		category: 5,
		help: "When cursor is centered for GamePad movement, also emulate mouse clicks",
	},
	gamepadcursorcentering: {
		name: "GamePadCursorCentering",
		default: "0",
		category: 5,
		help: "When using GamePad, center the cursor",
	},
	gamepadcursorfortargeting: {
		name: "GamePadCursorForTargeting",
		default: "1",
		category: 5,
		help: "Enable GamePad controlled cursor for spell targeting (1=enable, 2=start-at-target)",
	},
	gamepadcursorleftclick: {
		name: "GamePadCursorLeftClick",
		default: "PADRTRIGGER",
		category: 5,
		help: "GamePad button that should emulate mouse Left Click while controlling the mouse cursor",
	},
	gamepadcursoronlogin: {
		name: "GamePadCursorOnLogin",
		default: "1",
		category: 5,
		help: "Enable GamePad cursor control on login and character screens",
	},
	gamepadcursorpushcamera: {
		name: "GamePadCursorPushCamera",
		default: "1",
		category: 5,
		help: "Rate for GamePad controlled cursor to push/turn camera when at edge of window",
	},
	gamepadcursorrightclick: {
		name: "GamePadCursorRightClick",
		default: "PADRSHOULDER",
		category: 5,
		help: "GamePad button that should emulate mouse Right Click while controlling the mouse cursor",
	},
	gamepadcursorspeedaccel: {
		name: "GamePadCursorSpeedAccel",
		default: "2",
		category: 5,
		help: "Acceleration of GamePad cursor per second as it continues to move",
	},
	gamepadcursorspeedmax: {
		name: "GamePadCursorSpeedMax",
		default: "1",
		category: 5,
		help: "Top speed of GamePad cursor movement",
	},
	gamepadcursorspeedstart: {
		name: "GamePadCursorSpeedStart",
		default: "0.1",
		category: 5,
		help: "Speed of GamePad cursor when it starts moving",
	},
	gamepademulatealt: {
		name: "GamePadEmulateAlt",
		default: "none",
		category: 5,
		help: "GamePad button that should emulate the Alt key",
	},
	gamepademulatectrl: {
		name: "GamePadEmulateCtrl",
		default: "PADLSHOULDER",
		category: 5,
		help: "GamePad button that should emulate the Ctrl key",
	},
	gamepademulateshift: {
		name: "GamePadEmulateShift",
		default: "PADLTRIGGER",
		category: 5,
		help: "GamePad button that should emulate the Shift key",
	},
	gamepademulatetapwindowms: {
		name: "GamePadEmulateTapWindowMs",
		default: "350",
		category: 5,
		help: "GamePad buttons emulating Ctrl/Alt/Shift will be 'tapped' if released withing this time in MS",
	},
	gamepadenable: {
		name: "GamePadEnable",
		default: "0",
		category: 5,
		help: "Whether GamePad input should be enabled",
	},
	gamepadfacemovementmaxangle: {
		name: "GamePadFaceMovementMaxAngle",
		default: "0",
		category: 5,
		help: "Max movement to camera angle to face movement direction instead of camera direction. 0 = always, 180 = never (115 allows using strafe with quick turn around)",
	},
	gamepadfacemovementmaxanglecombat: {
		name: "GamePadFaceMovementMaxAngleCombat",
		default: "180",
		category: 5,
		help: "Max movement to camera angle to face movement direction instead of camera direction, in combat. 0 = always, 180 = never (115 allows using strafe with quick turn around)",
	},
	gamepadfactioncolor: {
		name: "GamePadFactionColor",
		default: "1",
		category: 5,
		help: "Enable setting GamePad's led color to match current faction",
	},
	gamepadoverlapmousems: {
		name: "GamePadOverlapMouseMs",
		default: "2000",
		category: 5,
		help: "Duration after gamepad+mouse input to switch to just one or the other.",
	},
	gamepadrunthreshold: {
		name: "GamePadRunThreshold",
		default: "0.5",
		category: 5,
		help: "0-1 Amount of stick movement before character transitions from walk to run",
	},
	gamepadsingleactiveid: {
		name: "GamePadSingleActiveID",
		default: "0",
		category: 5,
		help: "ID of single GamePad device to use. 0 = Use all devices' combined input",
	},
	gamepadstickaxisbuttons: {
		name: "GamePadStickAxisButtons",
		default: "0",
		category: 5,
		help: "Enables virtual buttons for the GamePad stick cardinal directions",
	},
	gamepadtankturnspeed: {
		name: "GamePadTankTurnSpeed",
		default: "0",
		category: 5,
		help: "If non-zero, character turns like a tank from GamePad movement",
	},
	gamepadtouchcursorenable: {
		name: "GamePadTouchCursorEnable",
		default: "1",
		category: 5,
		help: "Enable cursor control with GamePad's touch pad",
	},
	gamepadturnwithcamera: {
		name: "GamePadTurnWithCamera",
		default: "1",
		category: 5,
		help: "Turn character to match when camera facing is changed (1=in-combat, 2=always)",
	},
	gamepadvibrationstrength: {
		name: "GamePadVibrationStrength",
		default: "1",
		category: 5,
		help: "GamePad vibration effect strength",
	},
	gameplaycontext: {
		name: "GameplayContext",
		default: "0",
		category: 5,
	},
	gamma: {
		name: "Gamma",
		default: "1.000000",
		category: 1,
		help: "Gamma correction. Range: [0.3 - 2.8]",
	},
	gxafrdevicescount: {
		name: "GxAFRDevicesCount",
		default: "0",
		category: 1,
		help: "Force to set number of AFR devices",
	},
	gxadapter: {
		name: "GxAdapter",
		default: "",
		category: 1,
		help: "Set which GPU to use. See GxListGPUs for valid names (empty string to let client choose)",
	},
	gxallowcachelessshadermode: {
		name: "GxAllowCachelessShaderMode",
		default: "0",
		category: 1,
		help: "CPU memory saving mode, if supported by backend. When enabled, shaders are fetched from disk as needed instead of being kept resident. This mode may slightly increase the time objects take to appear the first time they are encountered. Computers without solid state drives may want to disable this feature",
	},
	gxapi: {
		name: "GxApi",
		default: "auto",
		category: 1,
		help: "graphics api",
	},
	gxcompatasyncframeend: {
		name: "GxCompatAsyncFrameEnd",
		default: "1",
		category: 5,
		help: "Disables rendering and submit of frame N to overlap with frame N+1",
	},
	gxcompatcommandlistmultithreading: {
		name: "GxCompatCommandListMultiThreading",
		default: "1",
		category: 5,
		help: "Allow multi-threaded rendering. Disabling this will significantly reduce framerate",
	},
	gxcompatdevicemultithreading: {
		name: "GxCompatDeviceMultiThreading",
		default: "1",
		category: 5,
		help: "Async resource creation such as texture and shader loading. Disabling this may cause hitching",
	},
	gxcompatoptionalgpufeatures: {
		name: "GxCompatOptionalGpuFeatures",
		default: "1",
		category: 5,
		help: "When disabled, makes the engine act as if the GPU only supports the minimum supported feature set",
	},
	gxcompatworksubmitoptimizations: {
		name: "GxCompatWorkSubmitOptimizations",
		default: "1",
		category: 5,
		help: "Disables DX11 submission thread. Disables Metal from submitting work more frequently than once per frame",
	},
	gxframeendmode: {
		name: "GxFrameEndMode",
		default: "1",
		category: 1,
		help: "Allow GxFrameEnd to overlap next frame",
	},
	gxfullscreenresolution: {
		name: "GxFullscreenResolution",
		default: "auto",
		category: 5,
		help: "resolution",
	},
	gxmaxframelatency: {
		name: "GxMaxFrameLatency",
		default: "3",
		category: 1,
		help: "maximum number of frames ahead of GPU the CPU can be",
	},
	gxmonitor: {
		name: "GxMonitor",
		default: "0",
		category: 1,
		help: "Monitor index. 0 means use the primary monitor",
	},
	gxnewresolution: {
		name: "GxNewResolution",
		default: "0x0",
		category: 1,
		help: "resolution to be set",
	},
	gxprismenabled: {
		name: "GxPrismEnabled",
		default: "1",
		category: 1,
		help: "0: Prism backends Disabled. 1: Default Prism backends Enabled. 2: Experimental Prism backends Enabled.",
	},
	gxslowshaderwarnthreshold: {
		name: "GxSlowShaderWarnThreshold",
		default: "30000",
		category: 1,
		help: "Max time (in milliseconds) the shader compile can take before warning via a popup message",
	},
	gxwindowedresolution: {
		name: "GxWindowedResolution",
		default: "1920x1080",
		category: 5,
		help: "windowed resolution",
	},
	hardwarecursor: {
		name: "HardwareCursor",
		default: "1",
		category: 1,
	},
	healhandler: {
		name: "HealHandler",
		default: "0",
		category: 5,
	},
	hotfixeventlog: {
		name: "HotfixEventLog",
		default: "0",
		category: 5,
	},
	impactmodelcollisionmelee: {
		name: "ImpactModelCollisionMelee",
		default: "1",
		category: 4,
		help: "Enable model collision checks for melee impact effects",
	},
	impactmodelcollisionmissile: {
		name: "ImpactModelCollisionMissile",
		default: "1",
		category: 4,
		help: "Enable model collision checks for missile impact effects",
	},
	impactmodelcollisionranged: {
		name: "ImpactModelCollisionRanged",
		default: "1",
		category: 4,
		help: "Enable model collision checks for ranged attack impact effects",
	},
	kioskcansessionexpire: {
		name: "KioskCanSessionExpire",
		default: "",
		category: 5,
		secure: true,
	},
	kioskcharactertemplateset: {
		name: "KioskCharacterTemplateSet",
		default: "",
		category: 5,
		secure: true,
	},
	kiosklobbykickseconds: {
		name: "KioskLobbyKickSeconds",
		default: "",
		category: 5,
		secure: true,
	},
	lowlatencymode: {
		name: "LowLatencyMode",
		default: "0",
		category: 1,
		help: "0=None, 1=BuiltIn, 2=Reflex",
	},
	m2forceadditiveparticlesort: {
		name: "M2ForceAdditiveParticleSort",
		default: "0",
		category: 1,
		help: "force all particles to sort as though they were additive",
	},
	m2useinstancing: {
		name: "M2UseInstancing",
		default: "1",
		category: 1,
		help: "use hardware instancing",
	},
	m2usethreads: {
		name: "M2UseThreads",
		default: "1",
		category: 1,
		help: "multithread model animations",
	},
	msaaalphatest: {
		name: "MSAAAlphaTest",
		default: "1",
		category: 1,
		help: "Enable MSAA for alpha-tested geometry",
	},
	msaaquality: {
		name: "MSAAQuality",
		default: "0",
		category: 1,
		help: "Multisampling AA quality",
	},
	maxcharactercomponentloadstartsperframe: {
		name: "MaxCharacterComponentLoadStartsPerFrame",
		default: "4",
		category: 1,
		help: "Maximum number of character component textures to composit per frame - range 1-8",
	},
	maxobservedpetbattles: {
		name: "MaxObservedPetBattles",
		default: "4",
		category: 5,
		help: "Maximum number of observed pet battles",
	},
	mousehiddeninrelativemode: {
		name: "MouseHiddenInRelativeMode",
		default: "1",
		category: 4,
		help: "Disabling may work around issues in relative mode in some rare cases",
	},
	movehistoryeventlog: {
		name: "MoveHistoryEventLog",
		default: "0",
		category: 5,
	},
	nameplateclassificationscale: {
		name: "NamePlateClassificationScale",
		default: "1.0",
		category: 4,
		scope: "Account",
		secure: true,
		help: "Applied to the classification icon for nameplates.",
	},
	nameplatehorizontalscale: {
		name: "NamePlateHorizontalScale",
		default: "1.0",
		category: 4,
		scope: "Account",
		secure: true,
		help: "Applied to horizontal size of all nameplates.",
	},
	nameplatemaximumclassificationscale: {
		name: "NamePlateMaximumClassificationScale",
		default: "1.25",
		category: 4,
		scope: "Account",
		secure: true,
		help: "This is the maximum effective scale of the classification icon for nameplates.",
	},
	nameplateverticalscale: {
		name: "NamePlateVerticalScale",
		default: "1.0",
		category: 4,
		scope: "Account",
		secure: true,
		help: "Applied to vertical size of all nameplates.",
	},
	nameplatepersonalclickthrough: {
		name: "NameplatePersonalClickThrough",
		default: "1",
		category: 4,
		scope: "Account",
		help: "When enabled, the personal nameplate is transparent to mouse clicks.",
	},
	nameplatepersonalhidedelayalpha: {
		name: "NameplatePersonalHideDelayAlpha",
		default: "0.45",
		category: 4,
		scope: "Account",
		secure: true,
		help: "Determines the alpha of the personal nameplate after no visibility conditions are met (during the period of time specified by NameplatePersonalHideDelaySeconds).",
	},
	nameplatepersonalhidedelayseconds: {
		name: "NameplatePersonalHideDelaySeconds",
		default: "3.0",
		category: 4,
		scope: "Account",
		secure: true,
		help: "Determines the length of time in seconds that the personal nameplate will be visible after no visibility conditions are met.",
	},
	nameplatepersonalshowalways: {
		name: "NameplatePersonalShowAlways",
		default: "0",
		category: 4,
		scope: "Account",
		secure: true,
		help: "Determines if the the personal nameplate is always shown.",
	},
	nameplatepersonalshowincombat: {
		name: "NameplatePersonalShowInCombat",
		default: "1",
		category: 4,
		scope: "Account",
		secure: true,
		help: "Determines if the the personal nameplate is shown when you enter combat.",
	},
	nameplatepersonalshowwithtarget: {
		name: "NameplatePersonalShowWithTarget",
		default: "0",
		category: 4,
		scope: "Account",
		secure: true,
		help: "Determines if the personal nameplate is shown when selecting a target. 0 = targeting has no effect, 1 = show on hostile target, 2 = show on any target",
	},
	nonemittercombatrange: {
		name: "NonEmitterCombatRange",
		default: "6400",
		category: 4,
		scope: "Character",
		help: "Range to stop shoulder/weapon emissions outside combat",
	},
	notcheddisplaymode: {
		name: "NotchedDisplayMode",
		default: "1",
		category: 1,
		help: "Do nothing = 0. Shift UI down = 1. Shift everything down = 2.",
	},
	objectselectioncircle: {
		name: "ObjectSelectionCircle",
		default: "1",
		category: 4,
	},
	outline: {
		name: "Outline",
		default: "2",
		category: 4,
		scope: "Character",
		help: "Outline Mode",
	},
	outlineenginemode: {
		name: "OutlineEngineMode",
		default: "0",
		category: 5,
	},
	poishiftcomplete: {
		name: "POIShiftComplete",
		default: "0.3",
		category: 0,
	},
	pathing: {
		name: "Pathing",
		default: "0",
		category: 5,
	},
	phasehistory: {
		name: "PhaseHistory",
		default: "0",
		category: 5,
	},
	playerspawntracking: {
		name: "PlayerSpawnTracking",
		default: "0",
		category: 5,
	},
	praisethesun: {
		name: "PraiseTheSun",
		default: "0",
		category: 4,
	},
	preemptivecastenable: {
		name: "PreemptiveCastEnable",
		default: "0",
		category: 5,
		help: "Enable preemptive triggering of cast visuals based on spell release timing",
	},
	preventosidlesleep: {
		name: "PreventOsIdleSleep",
		default: "0",
		category: 5,
		help: "Enable this to prevent the computer from idle sleeping while the game is running",
	},
	procdebugeventlog: {
		name: "ProcDebugEventLog",
		default: "0",
		category: 5,
	},
	pushtotalksound: {
		name: "PushToTalkSound",
		default: "0",
		category: 7,
		scope: "Character",
		help: "Play a sound when voice recording activates and deactivates",
	},
	questeventlog: {
		name: "QuestEventLog",
		default: "0",
		category: 5,
	},
	raiddepthbasedopacity: {
		name: "RAIDDepthBasedOpacity",
		default: "1",
		category: 1,
		help: "Raid Enable/Disable Soft Edge Effect",
	},
	raidoutlineenginemode: {
		name: "RAIDOutlineEngineMode",
		default: "0",
		category: 1,
		help: "Mode for the OutlineBuffer",
	},
	raidparticulatesenabled: {
		name: "RAIDParticulatesEnabled",
		default: "1",
		category: 1,
		help: "Enabling particulates (0-1)",
	},
	raidssao: {
		name: "RAIDSSAO",
		default: "0",
		category: 1,
		help: "Raid Screen-Space Ambient Occlusion",
	},
	raidterrainloddiv: {
		name: "RAIDTerrainLodDiv",
		default: "768",
		category: 1,
		help: "Raid Terrain lod divisor",
	},
	raidvolumefog: {
		name: "RAIDVolumeFog",
		default: "0",
		category: 1,
		help: "Volume Fog",
	},
	raidvolumefoglevel: {
		name: "RAIDVolumeFogLevel",
		default: "2",
		category: 1,
		help: "Volume Fog Level (0-3)",
	},
	raidwaterdetail: {
		name: "RAIDWaterDetail",
		default: "0",
		category: 5,
		help: "Raid Water surface detail",
	},
	raidclusteredshading: {
		name: "RAIDclusteredShading",
		default: "1",
		category: 1,
		help: "Allow forward transparent lighting",
	},
	raidcomponenttexturelevel: {
		name: "RAIDcomponentTextureLevel",
		default: "0",
		category: 1,
		help: "Level of detail for character component textures. 0 means full detail.",
	},
	raiddoodadlodscale: {
		name: "RAIDdoodadLodScale",
		default: "100",
		category: 1,
		help: "Raid doodad level of detail scale",
	},
	raidentityloddist: {
		name: "RAIDentityLodDist",
		default: "10",
		category: 1,
		help: "Raid Entity level of detail distance",
	},
	raidentityshadowfadescale: {
		name: "RAIDentityShadowFadeScale",
		default: "10",
		category: 1,
		help: "Raid Entity shadow fade scale",
	},
	raidfarclip: {
		name: "RAIDfarclip",
		default: "1000",
		category: 1,
		help: "Raid Far clip plane distance",
	},
	raidgraphicsquality: {
		name: "RAIDgraphicsQuality",
		default: "6",
		category: 5,
		help: "save for Raid Graphics Quality Selection",
	},
	raidgroundeffectdensity: {
		name: "RAIDgroundEffectDensity",
		default: "16",
		category: 1,
		help: "Raid Ground effect density",
	},
	raidgroundeffectdist: {
		name: "RAIDgroundEffectDist",
		default: "70",
		category: 5,
		help: "Raid Ground effect dist",
	},
	raidgroundeffectfade: {
		name: "RAIDgroundEffectFade",
		default: "70",
		category: 1,
		help: "Raid Ground effect fade",
	},
	raidhorizonclip: {
		name: "RAIDhorizonClip",
		default: "1600",
		category: 1,
		help: "Raid Horizon end distance",
	},
	raidhorizonstart: {
		name: "RAIDhorizonStart",
		default: "800",
		category: 1,
		help: "Raid Horizon start distance",
	},
	raidlodobjectculldist: {
		name: "RAIDlodObjectCullDist",
		default: "30",
		category: 1,
		help: "Lod object culling dist minimum",
	},
	raidlodobjectcullsize: {
		name: "RAIDlodObjectCullSize",
		default: "15",
		category: 1,
		help: "Lod object culling size",
	},
	raidlodobjectfadescale: {
		name: "RAIDlodObjectFadeScale",
		default: "100",
		category: 1,
		help: "Lod object fade scale",
	},
	raidlodobjectminsize: {
		name: "RAIDlodObjectMinSize",
		default: "20",
		category: 1,
		help: "Lod object min size",
	},
	raidparticledensity: {
		name: "RAIDparticleDensity",
		default: "100",
		category: 5,
		help: "Particle density",
	},
	raidparticlemtdensity: {
		name: "RAIDparticleMTDensity",
		default: "100",
		category: 1,
		help: "Multi-Tex particle density",
	},
	raidprojectedtextures: {
		name: "RAIDprojectedTextures",
		default: "0",
		category: 1,
		help: "Projected Textures",
	},
	raidreflectionmode: {
		name: "RAIDreflectionMode",
		default: "3",
		category: 5,
		help: "Reflection mode",
	},
	raidrefraction: {
		name: "RAIDrefraction",
		default: "0",
		category: 1,
		help: "Refraction",
	},
	raidrippledetail: {
		name: "RAIDrippleDetail",
		default: "2",
		category: 1,
		help: "Ripple surface detail",
	},
	raidsettingsenabled: {
		name: "RAIDsettingsEnabled",
		default: "0",
		category: 1,
		help: "Raid graphic settings are available",
	},
	raidshadowblendcascades: {
		name: "RAIDshadowBlendCascades",
		default: "0",
		category: 1,
		help: "Blend between shadow cascades (0/1)",
	},
	raidshadowmode: {
		name: "RAIDshadowMode",
		default: "0",
		category: 5,
		help: "Raid Quality of shadows (0-3)",
	},
	raidshadowrt: {
		name: "RAIDshadowRt",
		default: "0",
		category: 1,
		help: "Raid Raytraced shadows (0-2)",
	},
	raidshadowsoft: {
		name: "RAIDshadowSoft",
		default: "0",
		category: 1,
		help: "Soft shadows (0/1)",
	},
	raidshadowtexturesize: {
		name: "RAIDshadowTextureSize",
		default: "1024",
		category: 1,
		help: "Shadow texture size (1024-2048)",
	},
	raidspellclutter: {
		name: "RAIDspellClutter",
		default: "-1",
		category: 1,
		help: "Cull unimportant spell effects. -1 means auto based on targetFPS otherwise [0-100], 0 means cull nothing for perf reasons, 100 means cull as much as you can",
	},
	raidsunshafts: {
		name: "RAIDsunShafts",
		default: "0",
		category: 5,
		help: "SunShafts",
	},
	raidterrainloddist: {
		name: "RAIDterrainLodDist",
		default: "400",
		category: 1,
		help: "Raid Terrain level of detail distance",
	},
	raidterrainmiplevel: {
		name: "RAIDterrainMipLevel",
		default: "0",
		category: 1,
		help: "Terrain blend map mip level",
	},
	raidweatherdensity: {
		name: "RAIDweatherDensity",
		default: "2",
		category: 1,
	},
	raidwmoloddist: {
		name: "RAIDwmoLodDist",
		default: "650",
		category: 1,
		help: "Raid Wmo level of detail distance",
	},
	raidworldbasemip: {
		name: "RAIDworldBaseMip",
		default: "0",
		category: 1,
		help: "World texture base mip",
	},
	renderscale: {
		name: "RenderScale",
		default: "1.000000",
		category: 1,
		help: "Render scale (for supersampling or undersampling)",
	},
	replacemyplayerportrait: {
		name: "ReplaceMyPlayerPortrait",
		default: "0",
		category: 4,
		scope: "Character",
		help: "Replaces local player's unit frame portrait with their class icon",
	},
	replaceotherplayerportraits: {
		name: "ReplaceOtherPlayerPortraits",
		default: "0",
		category: 4,
		scope: "Character",
		help: "Replaces other player unit frame portraits with their class icon",
	},
	resamplealwayssharpen: {
		name: "ResampleAlwaysSharpen",
		default: "0",
		category: 1,
		help: "Run sharpness pass, even if not using AMD FSR Upscale [0,1]",
	},
	resamplequality: {
		name: "ResampleQuality",
		default: "3",
		category: 1,
		help: "Resample quality",
	},
	resamplesharpness: {
		name: "ResampleSharpness",
		default: "0.2",
		category: 1,
		help: "FSR sharpness strength [0.0-2.0]. 0 is full strength. -1 to disable.",
	},
	resizeconstraints: {
		name: "ResizeConstraints",
		default: "1",
		category: 1,
		help: "0=None,1=AspectRatioLocked,2=DisableResizing",
	},
	resolvedssaotype: {
		name: "ResolvedSSAOType",
		default: "0",
		category: 1,
	},
	ssao: {
		name: "SSAO",
		default: "0",
		category: 5,
		help: "Screen-Space Ambient Occlusion",
	},
	ssaotype: {
		name: "SSAOType",
		default: "0",
		category: 1,
		help: "Screen-Space Ambient Occlusion Type",
	},
	servermessageeventlog: {
		name: "ServerMessageEventLog",
		default: "0",
		category: 5,
	},
	shakestrengthcamera: {
		name: "ShakeStrengthCamera",
		default: "1.000000",
		category: 4,
		scope: "Character",
		help: "Motion sickness control for how much effects can shake the camera",
	},
	shakestrengthui: {
		name: "ShakeStrengthUI",
		default: "1.000000",
		category: 4,
		scope: "Character",
		help: "Motion sickness control for how much effects can shake in 2D UI",
	},
	showclasscolorinfriendlynameplate: {
		name: "ShowClassColorInFriendlyNameplate",
		default: "1",
		category: 4,
		scope: "Account",
		help: "use this to display the class color in friendly nameplate health bars",
	},
	showclasscolorinnameplate: {
		name: "ShowClassColorInNameplate",
		default: "1",
		category: 4,
		scope: "Account",
		help: "use this to display the class color in enemy nameplate health bars",
	},
	shownameplateloseaggroflash: {
		name: "ShowNamePlateLoseAggroFlash",
		default: "1",
		category: 4,
		scope: "Account",
		help: "When enabled, if you are a tank role and lose aggro, the nameplate with briefly flash.",
	},
	showquestunitcircles: {
		name: "ShowQuestUnitCircles",
		default: "1",
		category: 4,
		scope: "Character",
		help: "Determines if units related to a quest display an indicator on the ground.",
	},
	skycloudlod: {
		name: "SkyCloudLOD",
		default: "0",
		category: 1,
		help: "Texture resolution for clouds",
	},
	slugopticalweight: {
		name: "SlugOpticalWeight",
		default: "0",
		category: 0,
		help: "When rendering, coverage values are remapped to increase the optical weight of the glyphs. This can improve the appearance of small text, but usually looks good only for dark text on a light background.",
	},
	slugsupersampling: {
		name: "SlugSupersampling",
		default: "1",
		category: 0,
		help: "The slug glyph shader performs adaptive supersampling for high-quality rendering at small font sizes",
	},
	softtargetenemy: {
		name: "SoftTargetEnemy",
		default: "1",
		category: 4,
		scope: "Account",
		secure: true,
		help: "Sets when enemy soft targeting should be enabled. 0=off, 1=gamepad, 2=KBM, 3=always",
	},
	softtargetenemyarc: {
		name: "SoftTargetEnemyArc",
		default: "2",
		category: 4,
		scope: "Account",
		help: "0 = No yaw arc allowance, must be directly in front. 1 = Must be in front yaw arc. 2 = Can be anywhere in tab targeting area.",
	},
	softtargetenemyrange: {
		name: "SoftTargetEnemyRange",
		default: "45.000000",
		category: 4,
		scope: "Account",
		secure: true,
		help: "Max range to soft target enemies (limited to tab targeting range)",
	},
	softtargetforce: {
		name: "SoftTargetForce",
		default: "1",
		category: 4,
		secure: true,
		help: "Auto-set target to match soft target. 1 = for enemies, 2 = for friends",
	},
	softtargetfriend: {
		name: "SoftTargetFriend",
		default: "0",
		category: 4,
		scope: "Account",
		help: "Sets when friend soft targeting should be enabled. 0=off, 1=gamepad, 2=KBM, 3=always",
	},
	softtargetfriendarc: {
		name: "SoftTargetFriendArc",
		default: "2",
		category: 4,
		scope: "Account",
		help: "0 = No yaw arc allowance, must be directly in front. 1 = Must be in front yaw arc. 2 = Can be anywhere in targeting area.",
	},
	softtargetfriendrange: {
		name: "SoftTargetFriendRange",
		default: "45.000000",
		category: 4,
		scope: "Account",
		help: "Max range to soft target friends (limited to tab targeting range)",
	},
	softtargeticonenemy: {
		name: "SoftTargetIconEnemy",
		default: "0",
		category: 4,
		scope: "Character",
		help: "Show icon for soft enemy target",
	},
	softtargeticonfriend: {
		name: "SoftTargetIconFriend",
		default: "0",
		category: 4,
		scope: "Character",
		help: "Show icon for soft friend target",
	},
	softtargeticongameobject: {
		name: "SoftTargetIconGameObject",
		default: "0",
		category: 4,
		scope: "Character",
		help: "Show icon for sot interact game objects (interactable objects you cannot normally target)",
	},
	softtargeticoninteract: {
		name: "SoftTargetIconInteract",
		default: "1",
		category: 4,
		scope: "Character",
		help: "Show icon for soft interact target",
	},
	softtargetinteract: {
		name: "SoftTargetInteract",
		default: "1",
		category: 4,
		scope: "Character",
		secure: true,
		help: "Sets when soft interact should be enabled. 0=off, 1=gamepad, 2=KBM, 3=always",
	},
	softtargetinteractarc: {
		name: "SoftTargetInteractArc",
		default: "0",
		category: 4,
		scope: "Character",
		help: "0 = No yaw arc allowance, must be directly in front. 1 = Must be in front yaw arc. 2 = Can be anywhere in targeting area.",
	},
	softtargetinteractrange: {
		name: "SoftTargetInteractRange",
		default: "10.000000",
		category: 4,
		scope: "Character",
		secure: true,
		help: "Max range to soft target interacts (limited to tab targeting and individual interact ranges)",
	},
	softtargetinteractrangeishard: {
		name: "SoftTargetInteractRangeIsHard",
		default: "0",
		category: 4,
		scope: "Character",
		help: "Sets if it should be a hard range cutoff, even for something you can interact with right now.",
	},
	softtargetlowpriorityicons: {
		name: "SoftTargetLowPriorityIcons",
		default: "0",
		category: 4,
		scope: "Character",
		help: "Show interact icons even when there is other visual indicators, such as quest or loot effects",
	},
	softtargetmatchlocked: {
		name: "SoftTargetMatchLocked",
		default: "1",
		category: 4,
		help: "Match appropriate soft target to locked target. 1 = hard locked target only, 2 = for targets you attack",
	},
	softtargetnameplateenemy: {
		name: "SoftTargetNameplateEnemy",
		default: "1",
		category: 4,
		scope: "Character",
		help: "Always show nameplates for soft enemy target",
	},
	softtargetnameplatefriend: {
		name: "SoftTargetNameplateFriend",
		default: "0",
		category: 4,
		scope: "Character",
		help: "Always show nameplates for soft friend target",
	},
	softtargetnameplateinteract: {
		name: "SoftTargetNameplateInteract",
		default: "0",
		category: 4,
		scope: "Character",
		help: "Always show nameplates for soft interact target",
	},
	softtargetnameplatesize: {
		name: "SoftTargetNameplateSize",
		default: "19",
		category: 4,
		scope: "Character",
		help: "Size of soft target icon on nameplate (0 to disable)",
	},
	softtargettooltipdurationms: {
		name: "SoftTargetTooltipDurationMs",
		default: "2000",
		category: 4,
		scope: "Character",
	},
	softtargettooltipenemy: {
		name: "SoftTargetTooltipEnemy",
		default: "0",
		category: 4,
		scope: "Character",
	},
	softtargettooltipfriend: {
		name: "SoftTargetTooltipFriend",
		default: "0",
		category: 4,
		scope: "Character",
	},
	softtargettooltipinteract: {
		name: "SoftTargetTooltipInteract",
		default: "0",
		category: 4,
		scope: "Character",
	},
	softtargettooltiplocked: {
		name: "SoftTargetTooltipLocked",
		default: "0",
		category: 4,
		scope: "Character",
	},
	softtargetwithlocked: {
		name: "SoftTargetWithLocked",
		default: "1",
		category: 4,
		help: "Allows soft target selection while player has a locked target. 2 = always do soft targeting",
	},
	softtargetworldtextfardist: {
		name: "SoftTargetWorldtextFarDist",
		default: "40.000000",
		category: 4,
		scope: "Character",
	},
	softtargetworldtextneardist: {
		name: "SoftTargetWorldtextNearDist",
		default: "4.000000",
		category: 4,
		scope: "Character",
	},
	softtargetworldtextnearscale: {
		name: "SoftTargetWorldtextNearScale",
		default: "1.000000",
		category: 4,
		scope: "Character",
	},
	softtargetworldtextsize: {
		name: "SoftTargetWorldtextSize",
		default: "32.000000",
		category: 4,
		scope: "Character",
	},
	soundperf_variationcap: {
		name: "SoundPerf_VariationCap",
		default: "32",
		category: 7,
		help: "Limit sound kit variations to cut down on memory usage and disk thrashing on 32-bit machines",
	},
	sound_allyplayerhighpassdspcutoff: {
		name: "Sound_AllyPlayerHighpassDSPCutoff",
		default: "",
		category: 7,
		help: "The cutoff value to use for the Highpass filter on the Ally Player bus (default 80 Hz)",
	},
	sound_alternatelistener: {
		name: "Sound_AlternateListener",
		default: "1",
		category: 7,
		help: "When enabled, calculates listener forward by simply using the camera's yaw value, instead of a vector from camera position to listener position",
	},
	sound_ambiencehighpassdspcutoff: {
		name: "Sound_AmbienceHighpassDSPCutoff",
		default: "",
		category: 7,
		help: "The cutoff value to use for the Highpass filter on the Ambience bus (default 100 Hz)",
	},
	sound_ambiencevolume: {
		name: "Sound_AmbienceVolume",
		default: "0.6",
		category: 7,
		help: "Ambience Volume (0.0 to 1.0)",
	},
	sound_dspbuffersize: {
		name: "Sound_DSPBufferSize",
		default: "0",
		category: 7,
		help: "sound buffer size, default 0",
	},
	sound_dialogvolume: {
		name: "Sound_DialogVolume",
		default: "1.0",
		category: 7,
		help: "Dialog Volume (0.0 to 1.0)",
	},
	sound_enableallsound: {
		name: "Sound_EnableAllSound",
		default: "1",
		category: 7,
	},
	sound_enableambience: {
		name: "Sound_EnableAmbience",
		default: "1",
		category: 7,
		help: "Enable Ambience",
	},
	sound_enablearmorfoleysoundforothers: {
		name: "Sound_EnableArmorFoleySoundForOthers",
		default: "1",
		category: 7,
	},
	sound_enablearmorfoleysoundforself: {
		name: "Sound_EnableArmorFoleySoundForSelf",
		default: "1",
		category: 7,
	},
	sound_enabledspeffects: {
		name: "Sound_EnableDSPEffects",
		default: "1",
		category: 7,
	},
	sound_enabledialog: {
		name: "Sound_EnableDialog",
		default: "1",
		category: 7,
		help: "all dialog",
	},
	sound_enableemotesounds: {
		name: "Sound_EnableEmoteSounds",
		default: "1",
		category: 7,
	},
	sound_enableerrorspeech: {
		name: "Sound_EnableErrorSpeech",
		default: "1",
		category: 7,
		help: "error speech",
	},
	sound_enablemixmode2: {
		name: "Sound_EnableMixMode2",
		default: "0",
		category: 7,
		help: "test",
	},
	sound_enablemusic: {
		name: "Sound_EnableMusic",
		default: "1",
		category: 7,
		help: "Enables music",
	},
	sound_enablepetbattlemusic: {
		name: "Sound_EnablePetBattleMusic",
		default: "1",
		category: 7,
		help: "Enables music in pet battles",
	},
	sound_enablepetsounds: {
		name: "Sound_EnablePetSounds",
		default: "1",
		category: 7,
		help: "Enables pet sounds",
	},
	sound_enablepingsounds: {
		name: "Sound_EnablePingSounds",
		default: "1",
		category: 7,
		help: "Enable Ping Sounds",
	},
	sound_enablepositionallowpassfilter: {
		name: "Sound_EnablePositionalLowPassFilter",
		default: "1",
		category: 7,
		help: "Environmental effect to make sounds duller behind you or far away",
	},
	sound_enablereverb: {
		name: "Sound_EnableReverb",
		default: "1",
		category: 7,
	},
	sound_enablesfx: {
		name: "Sound_EnableSFX",
		default: "1",
		category: 7,
	},
	sound_enablesoundwhengameisinbg: {
		name: "Sound_EnableSoundWhenGameIsInBG",
		default: "0",
		category: 7,
		help: "Enable Sound When Game Is In Background",
	},
	sound_enemyplayerhighpassdspcutoff: {
		name: "Sound_EnemyPlayerHighpassDSPCutoff",
		default: "",
		category: 7,
		help: "The cutoff value to use for the Highpass filter on the Enemy Player bus (default 80 Hz)",
	},
	sound_listeneratcharacter: {
		name: "Sound_ListenerAtCharacter",
		default: "1",
		category: 7,
		help: "lock listener at character",
	},
	sound_mastervolume: {
		name: "Sound_MasterVolume",
		default: "1.0",
		category: 7,
		help: "master volume (0.0 to 1.0)",
	},
	sound_maxcachesizeinbytes: {
		name: "Sound_MaxCacheSizeInBytes",
		default: "134217728",
		category: 7,
		help: "Max cache size in bytes",
	},
	sound_maxcacheablesizeinbytes: {
		name: "Sound_MaxCacheableSizeInBytes",
		default: "174762",
		category: 7,
		help: "Max sound size that will be cached, larger files will be streamed instead",
	},
	sound_musicvolume: {
		name: "Sound_MusicVolume",
		default: "0.4",
		category: 7,
		help: "music volume (0.0 to 1.0)",
	},
	sound_npchighpassdspcutoff: {
		name: "Sound_NPCHighpassDSPCutoff",
		default: "",
		category: 7,
		help: "The cutoff value to use for the Highpass filter on the NPC bus (default 80 Hz)",
	},
	sound_numchannels: {
		name: "Sound_NumChannels",
		default: "64",
		category: 7,
		help: "number of sound channels",
	},
	sound_outputdriverindex: {
		name: "Sound_OutputDriverIndex",
		default: "0",
		category: 7,
	},
	sound_outputdrivername: {
		name: "Sound_OutputDriverName",
		default: "Primary Sound Driver",
		category: 7,
	},
	sound_outputsamplerate: {
		name: "Sound_OutputSampleRate",
		default: "44100",
		category: 7,
		help: "output sample rate",
	},
	sound_pingvolume: {
		name: "Sound_PingVolume",
		default: "1.0",
		category: 7,
		help: "Ping Volume (0.0 to 1.0)",
	},
	sound_sfxvolume: {
		name: "Sound_SFXVolume",
		default: "1.0",
		category: 7,
		help: "sound volume (0.0 to 1.0)",
	},
	sound_voicechatinputdriverindex: {
		name: "Sound_VoiceChatInputDriverIndex",
		default: "0",
		category: 7,
	},
	sound_voicechatinputdrivername: {
		name: "Sound_VoiceChatInputDriverName",
		default: "Primary Sound Capture Driver",
		category: 7,
	},
	sound_voicechatoutputdriverindex: {
		name: "Sound_VoiceChatOutputDriverIndex",
		default: "0",
		category: 7,
	},
	sound_voicechatoutputdrivername: {
		name: "Sound_VoiceChatOutputDriverName",
		default: "Primary Sound Driver",
		category: 7,
	},
	sound_zonemusicnodelay: {
		name: "Sound_ZoneMusicNoDelay",
		default: "0",
		category: 7,
	},
	spawnregion: {
		name: "SpawnRegion",
		default: "0",
		category: 5,
	},
	spellcooldowndebugger: {
		name: "SpellCooldownDebugger",
		default: "0",
		category: 5,
	},
	spelleventlog: {
		name: "SpellEventLog",
		default: "0",
		category: 5,
	},
	spelloverrides: {
		name: "SpellOverrides",
		default: "0",
		category: 5,
	},
	spellqueuewindow: {
		name: "SpellQueueWindow",
		default: "400",
		category: 4,
		scope: "Character",
		help: "Sets how early you can pre-activate/queue a spell/ability. (In Milliseconds)",
	},
	spellscripteventlog: {
		name: "SpellScriptEventLog",
		default: "0",
		category: 5,
	},
	spelltargeting: {
		name: "SpellTargeting",
		default: "0",
		category: 5,
	},
	spellvisuals: {
		name: "SpellVisuals",
		default: "0",
		category: 5,
	},
	splineopt: {
		name: "SplineOpt",
		default: "1",
		category: 0,
		help: "toggles use of spline coll optimization",
	},
	ttsusecharactersettings: {
		name: "TTSUseCharacterSettings",
		default: "1",
		category: 5,
		scope: "Account",
		help: "If character-specific TTS settings are being used.",
	},
	targetautoenemy: {
		name: "TargetAutoEnemy",
		default: "1",
		category: 4,
		scope: "Account",
		help: "Auto-Target from your single target helpful spells",
	},
	targetautofriend: {
		name: "TargetAutoFriend",
		default: "1",
		category: 4,
		scope: "Account",
		help: "Auto-Target from your single target helpful spells",
	},
	targetautolock: {
		name: "TargetAutoLock",
		default: "0",
		category: 4,
		scope: "Account",
		help: "Lock targets auto-set by the game",
	},
	targetenemyattacker: {
		name: "TargetEnemyAttacker",
		default: "1",
		category: 4,
		scope: "Account",
		help: "Auto-Target Enemy when they attack you",
	},
	targetnearestusenew: {
		name: "TargetNearestUseNew",
		default: "1",
		category: 4,
		help: "Use new 7.2 'nearest target' functionality (Set to 0 for 6.x style tab targeting)",
	},
	targetprioritycombatlock: {
		name: "TargetPriorityCombatLock",
		default: "1",
		category: 4,
		help: "1=Lock to in-combat targets when starting from an in-combat target. 2=Further restrict to in-combat with player.",
	},
	targetprioritycombatlockcontextualrelaxation: {
		name: "TargetPriorityCombatLockContextualRelaxation",
		default: "1",
		category: 4,
		help: "1=Enables relaxation of combat lock based on context (eg. no in-combat target infront)",
	},
	targetprioritycombatlockhighlight: {
		name: "TargetPriorityCombatLockHighlight",
		default: "0",
		category: 4,
		help: "1=Lock to in-combat targets when starting from an in-combat target. 2=Further restrict to in-combat with player. (while doing hold-to-target)",
	},
	targetprioritypvp: {
		name: "TargetPriorityPvp",
		default: "1",
		category: 4,
		help: "When in pvp, give higher priority to players and important pvp targets (1 = players & npc bosses, 2 = all pvp targets, 3 = players only)",
	},
	terrainloddiv: {
		name: "TerrainLodDiv",
		default: "768",
		category: 1,
		help: "Terrain lod divisor",
	},
	threadpoollimithp: {
		name: "ThreadPoolLimitHP",
		default: "6",
		category: 1,
		help: "Limit number of threads allowed to be used for [Low|Mid|High] priority job scheduling",
	},
	threadpoollimitlp: {
		name: "ThreadPoolLimitLP",
		default: "6",
		category: 1,
		help: "Limit number of threads allowed to be used for [Low|Mid|High] priority job scheduling",
	},
	threadpoollimitmp: {
		name: "ThreadPoolLimitMP",
		default: "6",
		category: 1,
		help: "Limit number of threads allowed to be used for [Low|Mid|High] priority job scheduling",
	},
	turnspeed: {
		name: "TurnSpeed",
		default: "180.000000",
		category: 5,
		help: "Set the keyboard turn rate in degrees per second; capped by the server",
	},
	ubertooltips: {
		name: "UberTooltips",
		default: "1",
		category: 4,
		scope: "Character",
		help: "Show verbose tooltips",
	},
	unitentercombatlog: {
		name: "UnitEnterCombatLog",
		default: "0",
		category: 5,
	},
	unitnameenemyguardianname: {
		name: "UnitNameEnemyGuardianName",
		default: "1",
		category: 4,
		scope: "Character",
	},
	unitnameenemyminionname: {
		name: "UnitNameEnemyMinionName",
		default: "1",
		category: 4,
		scope: "Character",
	},
	unitnameenemypetname: {
		name: "UnitNameEnemyPetName",
		default: "1",
		category: 4,
		scope: "Character",
	},
	unitnameenemyplayername: {
		name: "UnitNameEnemyPlayerName",
		default: "1",
		category: 4,
		scope: "Character",
	},
	unitnameenemytotemname: {
		name: "UnitNameEnemyTotemName",
		default: "1",
		category: 4,
		scope: "Character",
	},
	unitnameforcehideminus: {
		name: "UnitNameForceHideMinus",
		default: "0",
		category: 4,
		scope: "Character",
	},
	unitnamefriendlyguardianname: {
		name: "UnitNameFriendlyGuardianName",
		default: "1",
		category: 4,
		scope: "Character",
	},
	unitnamefriendlyminionname: {
		name: "UnitNameFriendlyMinionName",
		default: "1",
		category: 4,
		scope: "Character",
	},
	unitnamefriendlypetname: {
		name: "UnitNameFriendlyPetName",
		default: "1",
		category: 4,
		scope: "Character",
	},
	unitnamefriendlyplayername: {
		name: "UnitNameFriendlyPlayerName",
		default: "1",
		category: 4,
		scope: "Character",
	},
	unitnamefriendlyspecialnpcname: {
		name: "UnitNameFriendlySpecialNPCName",
		default: "1",
		category: 4,
		scope: "Character",
	},
	unitnamefriendlytotemname: {
		name: "UnitNameFriendlyTotemName",
		default: "1",
		category: 4,
		scope: "Character",
	},
	unitnameguildtitle: {
		name: "UnitNameGuildTitle",
		default: "1",
		category: 4,
		scope: "Character",
	},
	unitnamehostlenpc: {
		name: "UnitNameHostleNPC",
		default: "1",
		category: 4,
		scope: "Character",
	},
	unitnameinteractivenpc: {
		name: "UnitNameInteractiveNPC",
		default: "1",
		category: 4,
		scope: "Character",
	},
	unitnamenpc: {
		name: "UnitNameNPC",
		default: "0",
		category: 4,
		scope: "Character",
	},
	unitnamenoncombatcreaturename: {
		name: "UnitNameNonCombatCreatureName",
		default: "0",
		category: 4,
		scope: "Character",
	},
	unitnameown: {
		name: "UnitNameOwn",
		default: "0",
		category: 4,
		scope: "Character",
	},
	unitnameplayerguild: {
		name: "UnitNamePlayerGuild",
		default: "1",
		category: 4,
		scope: "Character",
	},
	unitnameplayerpvptitle: {
		name: "UnitNamePlayerPVPTitle",
		default: "1",
		category: 4,
		scope: "Character",
	},
	unitvisibility: {
		name: "UnitVisibility",
		default: "0",
		category: 5,
	},
	usekeyheldspellerrorpolltime: {
		name: "UseKeyHeldSpellErrorPollTime",
		default: "500",
		category: 4,
		scope: "Character",
		help: "(Internal only) Time between a failed cast and when it should attempt to cast again in ms. (Clamped to 100 and 10000)",
	},
	useoldvolumefog: {
		name: "UseOldVolumeFog",
		default: "0.000000",
		category: 1,
		help: "Use old volume fog system instead of the rework.",
	},
	useslug: {
		name: "UseSlug",
		default: "1",
		category: 0,
		help: "Render with slug text",
	},
	verbosespellscripteventlog: {
		name: "VerboseSpellScriptEventLog",
		default: "0",
		category: 5,
	},
	voicechatmastervolumescale: {
		name: "VoiceChatMasterVolumeScale",
		default: "1",
		category: 7,
		help: "Voice Chat audio ducking, applied as a scale to the game's master volume when somebody is speaking in voice chat",
	},
	voicecommunicationmode: {
		name: "VoiceCommunicationMode",
		default: "0",
		category: 7,
		scope: "Character",
		help: "Which communication mode to use for voice chat: push-to-talk, open mic, etc...",
	},
	voiceenablewhengameisinbg: {
		name: "VoiceEnableWhenGameIsInBG",
		default: "1",
		category: 7,
		help: "Enable Voice Chat when game is in background",
	},
	voiceinputdevice: {
		name: "VoiceInputDevice",
		default: "",
		category: 7,
		help: "Which deviceID you would like to use to pick up the sound of your wonderful voice, usually a microphone of some kind, empty string is system default",
	},
	voiceinputvolume: {
		name: "VoiceInputVolume",
		default: "50",
		category: 7,
		help: "The gain applied to your microphone, helps change your speaking volume from other users' perspectives, larger values are louder.",
	},
	voiceoutputdevice: {
		name: "VoiceOutputDevice",
		default: "",
		category: 7,
		help: "Which deviceID you would like to use to transmit the sound of other users' wonderful voices, usually a speakers of some kind, empty string is system default",
	},
	voiceoutputvolume: {
		name: "VoiceOutputVolume",
		default: "50",
		category: 7,
		help: "The volume of incoming voice chat, how loud other users' voices sound",
	},
	voicepushtotalkkeybind: {
		name: "VoicePushToTalkKeybind",
		default: "`",
		category: 7,
		scope: "Character",
		help: "Push to talk key",
	},
	voiceselfdeafened: {
		name: "VoiceSelfDeafened",
		default: "0",
		category: 7,
		help: "Voice Chat Self Deafened",
	},
	voiceselfmuted: {
		name: "VoiceSelfMuted",
		default: "0",
		category: 7,
		help: "Voice Chat Self Muted",
	},
	voicevadsensitivity: {
		name: "VoiceVADSensitivity",
		default: "43",
		category: 7,
		help: "How sensitive voice activity detection is.  Value ranges from 0 to 100, smaller values will transmit at a lower noise threshold.",
	},
	walkablesurfacesvalidationlog: {
		name: "WalkableSurfacesValidationLog",
		default: "0",
		category: 5,
	},
	worldactionslog: {
		name: "WorldActionsLog",
		default: "0",
		category: 5,
	},
	worldtextcritscreeny: {
		name: "WorldTextCritScreenY",
		default: "0.0275",
		category: 4,
		scope: "Character",
	},
	worldtextgravity: {
		name: "WorldTextGravity",
		default: "0.5",
		category: 4,
		scope: "Character",
	},
	worldtextminalpha: {
		name: "WorldTextMinAlpha",
		default: "0.5",
		category: 4,
		scope: "Character",
	},
	worldtextminsize: {
		name: "WorldTextMinSize",
		default: "0",
		category: 4,
		scope: "Character",
	},
	worldtextnonrandomz: {
		name: "WorldTextNonRandomZ",
		default: "2.5",
		category: 4,
		scope: "Character",
	},
	worldtextrampduration: {
		name: "WorldTextRampDuration",
		default: "1.0",
		category: 4,
		scope: "Character",
	},
	worldtextramppow: {
		name: "WorldTextRampPow",
		default: "1.9",
		category: 4,
		scope: "Character",
	},
	worldtextramppowcrit: {
		name: "WorldTextRampPowCrit",
		default: "8.0",
		category: 4,
		scope: "Character",
	},
	worldtextrandomxy: {
		name: "WorldTextRandomXY",
		default: "0.0",
		category: 4,
		scope: "Character",
	},
	worldtextrandomzmax: {
		name: "WorldTextRandomZMax",
		default: "1.5",
		category: 4,
		scope: "Character",
	},
	worldtextrandomzmin: {
		name: "WorldTextRandomZMin",
		default: "0.8",
		category: 4,
		scope: "Character",
	},
	worldtextscale: {
		name: "WorldTextScale",
		default: "1.0",
		category: 4,
		scope: "Character",
	},
	worldtextscreeny: {
		name: "WorldTextScreenY",
		default: "0.015",
		category: 4,
		scope: "Character",
	},
	worldtextstartposrandomness: {
		name: "WorldTextStartPosRandomness",
		default: "1.0",
		category: 4,
		scope: "Character",
	},
	acknowledgedarrowcallouts: {
		name: "acknowledgedArrowCallouts",
		default: "0",
		category: 4,
		scope: "Account",
		help: "Bit field of Looking for guild player settings",
	},
	actionedadventurejournalentries: {
		name: "actionedAdventureJournalEntries",
		default: "",
		category: 4,
		scope: "Character",
		help: "Which adventure journal entries flagged with ADVENTURE_JOURNAL_HIDE_AFTER_ACTION the user acted upon",
	},
	activecufprofile: {
		name: "activeCUFProfile",
		default: "",
		category: 4,
		scope: "Account",
		help: "The last active CUF Profile.",
	},
	addfriendinfoshown: {
		name: "addFriendInfoShown",
		default: "0",
		category: 4,
		scope: "Character",
		help: "The info for Add Friend has been shown",
	},
	addonloaddebugging: {
		name: "addonLoadDebugging",
		default: "0",
		category: 0,
		help: "0: Disable addon load logging (Default), 1: Enable addon load logging to AddOnLoad.log.",
	},
	advflykeyboardmaxpitchfactor: {
		name: "advFlyKeyboardMaxPitchFactor",
		default: "5.0",
		category: 4,
		scope: "Character",
		help: "Modifies the maximum pitch rate when using advFlyKeyboard.",
	},
	advflykeyboardmaxturnfactor: {
		name: "advFlyKeyboardMaxTurnFactor",
		default: "8.0",
		category: 4,
		scope: "Character",
		help: "Modifies the maximum turn rate when using advFlyKeyboard.",
	},
	advflykeyboardminpitchfactor: {
		name: "advFlyKeyboardMinPitchFactor",
		default: "2.5",
		category: 4,
		scope: "Character",
		help: "Modifies the minimum pitch rate when using advFlyKeyboard.",
	},
	advflykeyboardminturnfactor: {
		name: "advFlyKeyboardMinTurnFactor",
		default: "5.0",
		category: 4,
		scope: "Character",
		help: "Modifies the minimum turn rate when using advFlyKeyboard.",
	},
	advflypitchcontrol: {
		name: "advFlyPitchControl",
		default: "3",
		category: 4,
		scope: "Character",
		help: "Modifies forward/backwards inputs to control pitch when Dragonriding.",
	},
	advflypitchcontrolcamerachase: {
		name: "advFlyPitchControlCameraChase",
		default: "20.0",
		category: 4,
		scope: "Character",
		help: "Modifies the speed at which camera pitch follows player pitch while dragonriding with forward/backward pitch control.",
	},
	advflypitchcontrolgrounddebounce: {
		name: "advFlyPitchControlGroundDebounce",
		default: "0",
		category: 4,
		scope: "Character",
		help: "If enabled, will debounce forwards/backwards inputs used to control pitch when transitioning between dragonriding and grounded.",
	},
	advjournallastopened: {
		name: "advJournalLastOpened",
		default: "0",
		category: 4,
		scope: "Character",
		help: "Last time the Adventure Journal opened",
	},
	advancedcombatlogging: {
		name: "advancedCombatLogging",
		default: "0",
		category: 4,
		help: "Whether we want advanced combat log data sent from the server",
	},
	advancedwatchframe: {
		name: "advancedWatchFrame",
		default: "0",
		category: 4,
		scope: "Character",
		help: "Enables advanced Objectives tracking features",
	},
	agentuid: {
		name: "agentUID",
		default: "",
		category: 4,
		help: "The UID provided by Battle.net to be passed to Agent",
	},
	allowcomparewithtoggle: {
		name: "allowCompareWithToggle",
		default: "1",
		category: 4,
		scope: "Character",
	},
	alwayscompareitems: {
		name: "alwaysCompareItems",
		default: "0",
		category: 4,
		scope: "Character",
		help: "Always show item comparison tooltips",
	},
	alwaysshowactionbars: {
		name: "alwaysShowActionBars",
		default: "0",
		category: 4,
		scope: "Character",
		secure: true,
		help: "Whether to always show the action bar grid",
	},
	animframeskiplod: {
		name: "animFrameSkipLOD",
		default: "0",
		category: 1,
		help: "animations will skip frames at distance",
	},
	arachnophobiamode: {
		name: "arachnophobiaMode",
		default: "0",
		category: 4,
		scope: "Character",
		help: "swaps out spider creatures for other variants",
	},
	assaoadaptivequalitylimit: {
		name: "assaoAdaptiveQualityLimit",
		default: ".45",
		category: 1,
		help: "ASSAO Adaptive Quality Limit [0.0, 1.0] (only for Quality Level 3)",
	},
	assaoblurpasscount: {
		name: "assaoBlurPassCount",
		default: "2",
		category: 1,
		help: "ASSAO Blur Pass Count [  0,   6] Number of edge-sensitive smart blur passes to apply. Quality 0 is an exception with only one 'dumb' blur pass used.",
	},
	assaodetailshadowstrength: {
		name: "assaoDetailShadowStrength",
		default: "0",
		category: 1,
		help: "ASSAO Detail Shadow Strength [0.0, 5.0] Used for high-res detail AO using neighboring depth pixels: adds a lot of detail but also reduces temporal stability (adds aliasing).",
	},
	assaofadeoutfrom: {
		name: "assaoFadeOutFrom",
		default: "50.0",
		category: 1,
		help: "ASSAO Fade Out From [0.0,  ~ ] Distance to start start fading out the effect.",
	},
	assaofadeoutto: {
		name: "assaoFadeOutTo",
		default: "300.0",
		category: 1,
		help: "ASSAO Fade Out To [0.0,  ~ ] Distance at which the effect is faded out.",
	},
	assaohorizonanglethresh: {
		name: "assaoHorizonAngleThresh",
		default: "0.4",
		category: 1,
		help: "ASSAO Horizon Angle Thresh [0.0, 0.2] Limits self-shadowing",
	},
	assaonormals: {
		name: "assaoNormals",
		default: "1",
		category: 1,
		help: "Use Normals for ASSAO",
	},
	assaoradius: {
		name: "assaoRadius",
		default: "1.85",
		category: 1,
		help: "ASSAO Radius [0.01,  100,000] World (view) space size of the occlusion sphere",
	},
	assaoshadowclamp: {
		name: "assaoShadowClamp",
		default: ".98",
		category: 1,
		help: "ASSAO Shadow Clamp [0.0, 1.0]",
	},
	assaoshadowmult: {
		name: "assaoShadowMult",
		default: "1.1",
		category: 1,
		help: "ASSAO Shadow Multiplier [0.0, 5.0] Effect strength linear multiplier",
	},
	assaoshadowpower: {
		name: "assaoShadowPower",
		default: "1.34",
		category: 1,
		help: "ASSAO Shadow Power [0.5, 5.0] Effect strength pow modifier",
	},
	assaosharpness: {
		name: "assaoSharpness",
		default: ".98",
		category: 1,
		help: "ASSAO Sharpness [0.0, 1.0] (How much to bleed over edges; 1: not at all, 0.5: half-half; 0.0: completely ignore edges)",
	},
	assaotemporalssangleoffset: {
		name: "assaoTemporalSSAngleOffset",
		default: "0.0",
		category: 1,
		help: "ASSAO Temporal Super Sampling Angle Offset [0.0,  PI] Used to rotate sampling kernel; If using temporal AA / supersampling, suggested to rotate by ( (frame%3)/3.0*PI ) or similar. Kernel is already symmetrical, which is why we use PI and not 2*PI.",
	},
	assaotemporalssradiusoffset: {
		name: "assaoTemporalSSRadiusOffset",
		default: "1.0",
		category: 1,
		help: "ASSAO Temporal Super Sampling Radius Offset [0.0, 2.0] Used to scale sampling kernel; If using temporal AA / supersampling, suggested to scale by ( 1.0f + (((frame%3)-1.0)/3.0)*0.1 ) or similar.",
	},
	assistattack: {
		name: "assistAttack",
		default: "0",
		category: 4,
		scope: "Account",
		help: "Whether to start attacking after an assist",
	},
	asynchandlertimeout: {
		name: "asyncHandlerTimeout",
		default: "100",
		category: 0,
		help: "Engine option: Async read main thread timeout",
	},
	asyncthreadsleep: {
		name: "asyncThreadSleep",
		default: "0",
		category: 0,
		help: "Engine option: Async read thread sleep",
	},
	auctiondisplayoncharacter: {
		name: "auctionDisplayOnCharacter",
		default: "0",
		category: 4,
		scope: "Character",
		help: "Show auction items on the dress-up paperdoll",
	},
	auctionhousedurationdropdown: {
		name: "auctionHouseDurationDropdown",
		default: "2",
		category: 4,
		scope: "Character",
		help: "The previously selected duration index in the auction house duration dropdown",
	},
	audiolocale: {
		name: "audioLocale",
		default: "",
		category: 4,
		help: "Set the game locale for audio content",
	},
	autoacceptquickjoinrequests: {
		name: "autoAcceptQuickJoinRequests",
		default: "0",
		category: 4,
		scope: "Character",
		help: "Whether or not to auto-accept players who are trying to join your party through quick join",
	},
	autoclearafk: {
		name: "autoClearAFK",
		default: "1",
		category: 4,
		scope: "Character",
		help: "Automatically clear AFK when moving or chatting",
	},
	autocompleteresortnamesonrecency: {
		name: "autoCompleteResortNamesOnRecency",
		default: "1",
		category: 4,
		scope: "Character",
		help: "Shows people you recently spoke with higher up on the AutoComplete list.",
	},
	autocompleteusecontext: {
		name: "autoCompleteUseContext",
		default: "1",
		category: 4,
		scope: "Character",
		help: "The system will, for example, only show people in your guild when you are typing /gpromote. Names will also never be removed.",
	},
	autocompletewheneditingfromcenter: {
		name: "autoCompleteWhenEditingFromCenter",
		default: "1",
		category: 4,
		scope: "Character",
		help: "If you edit a name by inserting characters into the center, a smarter auto-complete will occur.",
	},
	autodismount: {
		name: "autoDismount",
		default: "1",
		category: 4,
		scope: "Character",
		help: "Automatically dismount when needed",
	},
	autodismountflying: {
		name: "autoDismountFlying",
		default: "0",
		category: 4,
		scope: "Character",
		help: "If enabled, your character will automatically dismount before casting while flying",
	},
	autofilledmulticastslots: {
		name: "autoFilledMultiCastSlots",
		default: "0",
		category: 4,
		scope: "Account",
		help: "Bitfield that saves whether multi-cast slots have been automatically filled.",
	},
	autointeract: {
		name: "autoInteract",
		default: "0",
		category: 4,
		scope: "Character",
		help: "Toggles auto-move to interact target",
	},
	autolootdefault: {
		name: "autoLootDefault",
		default: "0",
		category: 4,
		scope: "Account",
		help: "Automatically loot items when the loot window opens",
	},
	autolootrate: {
		name: "autoLootRate",
		default: "150",
		category: 4,
		scope: "Account",
		help: "Rate in milliseconds to tick auto loot",
	},
	autoquestpopups: {
		name: "autoQuestPopUps",
		default: "",
		category: 4,
		scope: "Account",
		help: "Saves current pop-ups for quests that are automatically acquired or completed.",
	},
	autoquestprogress: {
		name: "autoQuestProgress",
		default: "1",
		category: 4,
		scope: "Character",
		help: "Whether to automatically watch all quests when they are updated",
	},
	autoquestwatch: {
		name: "autoQuestWatch",
		default: "1",
		category: 4,
		scope: "Character",
		help: "Whether to automatically watch all quests when you obtain them",
	},
	autoselfcast: {
		name: "autoSelfCast",
		default: "1",
		category: 4,
		scope: "Account",
		help: "Whether spells should automatically be cast on you if you don't have a valid target",
	},
	autostand: {
		name: "autoStand",
		default: "1",
		category: 4,
		scope: "Character",
		secure: true,
		help: "Automatically stand when needed",
	},
	autounshift: {
		name: "autoUnshift",
		default: "1",
		category: 4,
		scope: "Character",
		secure: true,
		help: "Automatically leave shapeshift form when needed",
	},
	autojoinbgvoice: {
		name: "autojoinBGVoice",
		default: "0",
		category: 7,
		scope: "Character",
		help: "Automatically join the voice session in battleground chat",
	},
	autojoinpartyvoice: {
		name: "autojoinPartyVoice",
		default: "0",
		category: 7,
		scope: "Character",
		help: "Automatically join the voice session in party/raid chat",
	},
	bankautodepositreagents: {
		name: "bankAutoDepositReagents",
		default: "1",
		category: 4,
		scope: "Account",
		help: "Stores whether to include reagents when auto depositing items into your bank",
	},
	bankconfirmtabcleanup: {
		name: "bankConfirmTabCleanUp",
		default: "1",
		category: 4,
		scope: "Character",
		help: "Stores whether to show a confirmation dialog when you click the button to auto clean up your bank tabs",
	},
	blockchannelinvites: {
		name: "blockChannelInvites",
		default: "0",
		category: 4,
		scope: "Account",
		help: "Whether to automatically block chat channel invites",
	},
	blocktrades: {
		name: "blockTrades",
		default: "0",
		category: 4,
		scope: "Account",
		help: "Whether to automatically block trade requests",
	},
	bodyquota: {
		name: "bodyQuota",
		default: "100",
		category: 1,
		help: "Maximum number of componented bodies seen at once",
	},
	breakuplargenumbers: {
		name: "breakUpLargeNumbers",
		default: "1",
		category: 4,
		scope: "Character",
		help: "Toggles using commas in large numbers",
	},
	buffdurations: {
		name: "buffDurations",
		default: "1",
		category: 4,
		scope: "Character",
		help: "Whether to show buff durations",
	},
	cacaobilateralsimilaritydistancesigma: {
		name: "cacaoBilateralSimilarityDistanceSigma",
		default: "0.01",
		category: 1,
		help: "CACAO Sigma squared value for use in bilateral upsampler giving similarity weighting for neighbouring pixels. Should be greater than 0.0.",
	},
	calendarshowbattlegrounds: {
		name: "calendarShowBattlegrounds",
		default: "1",
		category: 4,
		scope: "Account",
		help: "Whether Battleground holidays should appear in the calendar",
	},
	calendarshowdarkmoon: {
		name: "calendarShowDarkmoon",
		default: "1",
		category: 4,
		scope: "Account",
		help: "Whether Darkmoon Faire holidays should appear in the calendar",
	},
	calendarshowholidays: {
		name: "calendarShowHolidays",
		default: "1",
		category: 4,
		scope: "Account",
		help: "Whether holidays should appear in the calendar",
	},
	calendarshowlockouts: {
		name: "calendarShowLockouts",
		default: "1",
		category: 4,
		scope: "Account",
		help: "Whether raid lockouts should appear in the calendar",
	},
	calendarshowresets: {
		name: "calendarShowResets",
		default: "0",
		category: 4,
		scope: "Account",
		help: "Whether raid resets should appear in the calendar",
	},
	calendarshowweeklyholidays: {
		name: "calendarShowWeeklyHolidays",
		default: "1",
		category: 4,
		scope: "Account",
		help: "Whether weekly holidays should appear in the calendar",
	},
	camerabobbing: {
		name: "cameraBobbing",
		default: "0",
		category: 4,
	},
	camerabobbingsmoothspeed: {
		name: "cameraBobbingSmoothSpeed",
		default: "0.800000",
		category: 4,
		scope: "Character",
	},
	cameracustomviewsmoothing: {
		name: "cameraCustomViewSmoothing",
		default: "0",
		category: 4,
		scope: "Character",
	},
	cameradistancemaxzoomfactor: {
		name: "cameraDistanceMaxZoomFactor",
		default: "1.900000",
		category: 4,
		scope: "Character",
	},
	cameradistanceratemult: {
		name: "cameraDistanceRateMult",
		default: "1.000000",
		category: 4,
		scope: "Character",
	},
	cameradive: {
		name: "cameraDive",
		default: "1",
		category: 4,
		scope: "Character",
	},
	camerafovsmoothspeed: {
		name: "cameraFoVSmoothSpeed",
		default: "0.500000",
		category: 4,
		scope: "Character",
	},
	camerafov: {
		name: "cameraFov",
		default: "90.000000",
		category: 1,
		help: "Default camera field of view",
	},
	cameragroundsmoothspeed: {
		name: "cameraGroundSmoothSpeed",
		default: "7.500000",
		category: 4,
		scope: "Character",
	},
	cameraheightignorestandstate: {
		name: "cameraHeightIgnoreStandState",
		default: "0",
		category: 4,
		scope: "Character",
	},
	cameraindirectoffset: {
		name: "cameraIndirectOffset",
		default: "3.000000",
		category: 4,
		scope: "Character",
	},
	cameraindirectvisibility: {
		name: "cameraIndirectVisibility",
		default: "1",
		category: 4,
		scope: "Character",
	},
	camerapitchmovespeed: {
		name: "cameraPitchMoveSpeed",
		default: "90.000000",
		category: 4,
		scope: "Character",
	},
	camerapitchsmoothmax: {
		name: "cameraPitchSmoothMax",
		default: "23.000000",
		category: 4,
		scope: "Character",
	},
	camerapitchsmoothmin: {
		name: "cameraPitchSmoothMin",
		default: "0.000000",
		category: 4,
		scope: "Character",
	},
	camerapitchsmoothspeed: {
		name: "cameraPitchSmoothSpeed",
		default: "45.000000",
		category: 4,
		scope: "Character",
	},
	camerapivot: {
		name: "cameraPivot",
		default: "1",
		category: 4,
		scope: "Character",
	},
	camerapivotdxmax: {
		name: "cameraPivotDXMax",
		default: "0.050000",
		category: 4,
		scope: "Character",
	},
	camerapivotdymin: {
		name: "cameraPivotDYMin",
		default: "0.000000",
		category: 4,
		scope: "Character",
	},
	camerasaveddistance: {
		name: "cameraSavedDistance",
		default: "5.550000",
		category: 4,
		scope: "Account",
	},
	camerasavedpetbattledistance: {
		name: "cameraSavedPetBattleDistance",
		default: "10.000000",
		category: 4,
		scope: "Account",
	},
	camerasavedpitch: {
		name: "cameraSavedPitch",
		default: "10.000000",
		category: 4,
		scope: "Account",
	},
	camerasavedvehicledistance: {
		name: "cameraSavedVehicleDistance",
		default: "-1.000000",
		category: 4,
		scope: "Account",
	},
	camerasmooth: {
		name: "cameraSmooth",
		default: "1",
		category: 4,
		scope: "Character",
	},
	camerasmoothalwaysfeardelay: {
		name: "cameraSmoothAlwaysFearDelay",
		default: "0.000000",
		category: 4,
		scope: "Character",
	},
	camerasmoothalwaysfearfactor: {
		name: "cameraSmoothAlwaysFearFactor",
		default: "1.000000",
		category: 4,
		scope: "Character",
	},
	camerasmoothalwaysidledelay: {
		name: "cameraSmoothAlwaysIdleDelay",
		default: "0.000000",
		category: 4,
		scope: "Character",
	},
	camerasmoothalwaysidlefactor: {
		name: "cameraSmoothAlwaysIdleFactor",
		default: "1.000000",
		category: 4,
		scope: "Character",
	},
	camerasmoothalwaysmovedelay: {
		name: "cameraSmoothAlwaysMoveDelay",
		default: "0.000000",
		category: 4,
		scope: "Character",
	},
	camerasmoothalwaysmovefactor: {
		name: "cameraSmoothAlwaysMoveFactor",
		default: "1.000000",
		category: 4,
		scope: "Character",
	},
	camerasmoothalwaysstopdelay: {
		name: "cameraSmoothAlwaysStopDelay",
		default: "0.000000",
		category: 4,
		scope: "Character",
	},
	camerasmoothalwaysstopfactor: {
		name: "cameraSmoothAlwaysStopFactor",
		default: "1.000000",
		category: 4,
		scope: "Character",
	},
	camerasmoothalwaysstrafedelay: {
		name: "cameraSmoothAlwaysStrafeDelay",
		default: "0.000000",
		category: 4,
		scope: "Character",
	},
	camerasmoothalwaysstrafefactor: {
		name: "cameraSmoothAlwaysStrafeFactor",
		default: "1.000000",
		category: 4,
		scope: "Character",
	},
	camerasmoothalwaystrackdelay: {
		name: "cameraSmoothAlwaysTrackDelay",
		default: "0.000000",
		category: 4,
		scope: "Character",
	},
	camerasmoothalwaystrackfactor: {
		name: "cameraSmoothAlwaysTrackFactor",
		default: "1.000000",
		category: 4,
		scope: "Character",
	},
	camerasmoothalwaysturndelay: {
		name: "cameraSmoothAlwaysTurnDelay",
		default: "0.000000",
		category: 4,
		scope: "Character",
	},
	camerasmoothalwaysturnfactor: {
		name: "cameraSmoothAlwaysTurnFactor",
		default: "1.000000",
		category: 4,
		scope: "Character",
	},
	camerasmoothneverfeardelay: {
		name: "cameraSmoothNeverFearDelay",
		default: "0.000000",
		category: 4,
		scope: "Character",
	},
	camerasmoothneverfearfactor: {
		name: "cameraSmoothNeverFearFactor",
		default: "0.000000",
		category: 4,
		scope: "Character",
	},
	camerasmoothneveridledelay: {
		name: "cameraSmoothNeverIdleDelay",
		default: "0.000000",
		category: 4,
		scope: "Character",
	},
	camerasmoothneveridlefactor: {
		name: "cameraSmoothNeverIdleFactor",
		default: "0.000000",
		category: 4,
		scope: "Character",
	},
	camerasmoothnevermovedelay: {
		name: "cameraSmoothNeverMoveDelay",
		default: "0.000000",
		category: 4,
		scope: "Character",
	},
	camerasmoothnevermovefactor: {
		name: "cameraSmoothNeverMoveFactor",
		default: "0.000000",
		category: 4,
		scope: "Character",
	},
	camerasmoothneverstopdelay: {
		name: "cameraSmoothNeverStopDelay",
		default: "0.000000",
		category: 4,
		scope: "Character",
	},
	camerasmoothneverstopfactor: {
		name: "cameraSmoothNeverStopFactor",
		default: "0.000000",
		category: 4,
		scope: "Character",
	},
	camerasmoothneverstrafedelay: {
		name: "cameraSmoothNeverStrafeDelay",
		default: "0.000000",
		category: 4,
		scope: "Character",
	},
	camerasmoothneverstrafefactor: {
		name: "cameraSmoothNeverStrafeFactor",
		default: "0.000000",
		category: 4,
		scope: "Character",
	},
	camerasmoothnevertrackdelay: {
		name: "cameraSmoothNeverTrackDelay",
		default: "0.000000",
		category: 4,
		scope: "Character",
	},
	camerasmoothnevertrackfactor: {
		name: "cameraSmoothNeverTrackFactor",
		default: "0.000000",
		category: 4,
		scope: "Character",
	},
	camerasmoothneverturndelay: {
		name: "cameraSmoothNeverTurnDelay",
		default: "0.000000",
		category: 4,
		scope: "Character",
	},
	camerasmoothneverturnfactor: {
		name: "cameraSmoothNeverTurnFactor",
		default: "0.000000",
		category: 4,
		scope: "Character",
	},
	camerasmoothpitch: {
		name: "cameraSmoothPitch",
		default: "1",
		category: 4,
		scope: "Character",
	},
	camerasmoothsmartfeardelay: {
		name: "cameraSmoothSmartFearDelay",
		default: "0.400000",
		category: 4,
		scope: "Character",
	},
	camerasmoothsmartfearfactor: {
		name: "cameraSmoothSmartFearFactor",
		default: "10.000000",
		category: 4,
		scope: "Character",
	},
	camerasmoothsmartidledelay: {
		name: "cameraSmoothSmartIdleDelay",
		default: "0.000000",
		category: 4,
		scope: "Character",
	},
	camerasmoothsmartidlefactor: {
		name: "cameraSmoothSmartIdleFactor",
		default: "0.000000",
		category: 4,
		scope: "Character",
	},
	camerasmoothsmartmovedelay: {
		name: "cameraSmoothSmartMoveDelay",
		default: "0.000000",
		category: 4,
		scope: "Character",
	},
	camerasmoothsmartmovefactor: {
		name: "cameraSmoothSmartMoveFactor",
		default: "1.000000",
		category: 4,
		scope: "Character",
	},
	camerasmoothsmartstopdelay: {
		name: "cameraSmoothSmartStopDelay",
		default: "0.000000",
		category: 4,
		scope: "Character",
	},
	camerasmoothsmartstopfactor: {
		name: "cameraSmoothSmartStopFactor",
		default: "0.000000",
		category: 4,
		scope: "Character",
	},
	camerasmoothsmartstrafedelay: {
		name: "cameraSmoothSmartStrafeDelay",
		default: "0.000000",
		category: 4,
		scope: "Character",
	},
	camerasmoothsmartstrafefactor: {
		name: "cameraSmoothSmartStrafeFactor",
		default: "1.000000",
		category: 4,
		scope: "Character",
	},
	camerasmoothsmarttrackdelay: {
		name: "cameraSmoothSmartTrackDelay",
		default: "0.400000",
		category: 4,
		scope: "Character",
	},
	camerasmoothsmarttrackfactor: {
		name: "cameraSmoothSmartTrackFactor",
		default: "10.000000",
		category: 4,
		scope: "Character",
	},
	camerasmoothsmartturndelay: {
		name: "cameraSmoothSmartTurnDelay",
		default: "0.000000",
		category: 4,
		scope: "Character",
	},
	camerasmoothsmartturnfactor: {
		name: "cameraSmoothSmartTurnFactor",
		default: "1.000000",
		category: 4,
		scope: "Character",
	},
	camerasmoothsmarterfeardelay: {
		name: "cameraSmoothSmarterFearDelay",
		default: "0.400000",
		category: 4,
		scope: "Character",
	},
	camerasmoothsmarterfearfactor: {
		name: "cameraSmoothSmarterFearFactor",
		default: "10.000000",
		category: 4,
		scope: "Character",
	},
	camerasmoothsmarteridledelay: {
		name: "cameraSmoothSmarterIdleDelay",
		default: "0.000000",
		category: 4,
		scope: "Character",
	},
	camerasmoothsmarteridlefactor: {
		name: "cameraSmoothSmarterIdleFactor",
		default: "0.000000",
		category: 4,
		scope: "Character",
	},
	camerasmoothsmartermovedelay: {
		name: "cameraSmoothSmarterMoveDelay",
		default: "0.000000",
		category: 4,
		scope: "Character",
	},
	camerasmoothsmartermovefactor: {
		name: "cameraSmoothSmarterMoveFactor",
		default: "1.000000",
		category: 4,
		scope: "Character",
	},
	camerasmoothsmarterstopdelay: {
		name: "cameraSmoothSmarterStopDelay",
		default: "0.000000",
		category: 4,
		scope: "Character",
	},
	camerasmoothsmarterstopfactor: {
		name: "cameraSmoothSmarterStopFactor",
		default: "0.000000",
		category: 4,
		scope: "Character",
	},
	camerasmoothsmarterstrafedelay: {
		name: "cameraSmoothSmarterStrafeDelay",
		default: "0.000000",
		category: 4,
		scope: "Character",
	},
	camerasmoothsmarterstrafefactor: {
		name: "cameraSmoothSmarterStrafeFactor",
		default: "1.000000",
		category: 4,
		scope: "Character",
	},
	camerasmoothsmartertrackdelay: {
		name: "cameraSmoothSmarterTrackDelay",
		default: "0.400000",
		category: 4,
		scope: "Character",
	},
	camerasmoothsmartertrackfactor: {
		name: "cameraSmoothSmarterTrackFactor",
		default: "10.000000",
		category: 4,
		scope: "Character",
	},
	camerasmoothsmarterturndelay: {
		name: "cameraSmoothSmarterTurnDelay",
		default: "0.000000",
		category: 4,
		scope: "Character",
	},
	camerasmoothsmarterturnfactor: {
		name: "cameraSmoothSmarterTurnFactor",
		default: "1.000000",
		category: 4,
		scope: "Character",
	},
	camerasmoothsplinefeardelay: {
		name: "cameraSmoothSplineFearDelay",
		default: "0.000000",
		category: 4,
		scope: "Character",
	},
	camerasmoothsplinefearfactor: {
		name: "cameraSmoothSplineFearFactor",
		default: "4.000000",
		category: 4,
		scope: "Character",
	},
	camerasmoothsplineidledelay: {
		name: "cameraSmoothSplineIdleDelay",
		default: "0.000000",
		category: 4,
		scope: "Character",
	},
	camerasmoothsplineidlefactor: {
		name: "cameraSmoothSplineIdleFactor",
		default: "4.000000",
		category: 4,
		scope: "Character",
	},
	camerasmoothsplinemovedelay: {
		name: "cameraSmoothSplineMoveDelay",
		default: "0.000000",
		category: 4,
		scope: "Character",
	},
	camerasmoothsplinemovefactor: {
		name: "cameraSmoothSplineMoveFactor",
		default: "1.000000",
		category: 4,
		scope: "Character",
	},
	camerasmoothsplinestopdelay: {
		name: "cameraSmoothSplineStopDelay",
		default: "0.000000",
		category: 4,
		scope: "Character",
	},
	camerasmoothsplinestopfactor: {
		name: "cameraSmoothSplineStopFactor",
		default: "4.000000",
		category: 4,
		scope: "Character",
	},
	camerasmoothsplinestrafedelay: {
		name: "cameraSmoothSplineStrafeDelay",
		default: "0.000000",
		category: 4,
		scope: "Character",
	},
	camerasmoothsplinestrafefactor: {
		name: "cameraSmoothSplineStrafeFactor",
		default: "1.000000",
		category: 4,
		scope: "Character",
	},
	camerasmoothsplinetrackdelay: {
		name: "cameraSmoothSplineTrackDelay",
		default: "0.000000",
		category: 4,
		scope: "Character",
	},
	camerasmoothsplinetrackfactor: {
		name: "cameraSmoothSplineTrackFactor",
		default: "4.000000",
		category: 4,
		scope: "Character",
	},
	camerasmoothsplineturndelay: {
		name: "cameraSmoothSplineTurnDelay",
		default: "0.000000",
		category: 4,
		scope: "Character",
	},
	camerasmoothsplineturnfactor: {
		name: "cameraSmoothSplineTurnFactor",
		default: "1.000000",
		category: 4,
		scope: "Character",
	},
	camerasmoothstyle: {
		name: "cameraSmoothStyle",
		default: "4",
		category: 4,
		scope: "Character",
	},
	camerasmoothtimemax: {
		name: "cameraSmoothTimeMax",
		default: "2.000000",
		category: 4,
		scope: "Character",
	},
	camerasmoothtimemin: {
		name: "cameraSmoothTimeMin",
		default: "0.100000",
		category: 4,
		scope: "Character",
	},
	camerasmoothtrackingstyle: {
		name: "cameraSmoothTrackingStyle",
		default: "4",
		category: 4,
		scope: "Character",
	},
	camerasmoothviewdataalwaysdistancedelay: {
		name: "cameraSmoothViewDataAlwaysDistanceDelay",
		default: "0.000000",
		category: 4,
		scope: "Character",
	},
	camerasmoothviewdataalwaysdistancefactor: {
		name: "cameraSmoothViewDataAlwaysDistanceFactor",
		default: "0.000000",
		category: 4,
		scope: "Character",
	},
	camerasmoothviewdataalwayspitchdelay: {
		name: "cameraSmoothViewDataAlwaysPitchDelay",
		default: "0.000000",
		category: 4,
		scope: "Character",
	},
	camerasmoothviewdataalwayspitchfactor: {
		name: "cameraSmoothViewDataAlwaysPitchFactor",
		default: "1.000000",
		category: 4,
		scope: "Character",
	},
	camerasmoothviewdataalwaysyawdelay: {
		name: "cameraSmoothViewDataAlwaysYawDelay",
		default: "0.000000",
		category: 4,
		scope: "Character",
	},
	camerasmoothviewdataalwaysyawfactor: {
		name: "cameraSmoothViewDataAlwaysYawFactor",
		default: "1.000000",
		category: 4,
		scope: "Character",
	},
	camerasmoothviewdataneverdistancedelay: {
		name: "cameraSmoothViewDataNeverDistanceDelay",
		default: "0.000000",
		category: 4,
		scope: "Character",
	},
	camerasmoothviewdataneverdistancefactor: {
		name: "cameraSmoothViewDataNeverDistanceFactor",
		default: "0.000000",
		category: 4,
		scope: "Character",
	},
	camerasmoothviewdataneverpitchdelay: {
		name: "cameraSmoothViewDataNeverPitchDelay",
		default: "0.000000",
		category: 4,
		scope: "Character",
	},
	camerasmoothviewdataneverpitchfactor: {
		name: "cameraSmoothViewDataNeverPitchFactor",
		default: "0.000000",
		category: 4,
		scope: "Character",
	},
	camerasmoothviewdataneveryawdelay: {
		name: "cameraSmoothViewDataNeverYawDelay",
		default: "0.000000",
		category: 4,
		scope: "Character",
	},
	camerasmoothviewdataneveryawfactor: {
		name: "cameraSmoothViewDataNeverYawFactor",
		default: "0.000000",
		category: 4,
		scope: "Character",
	},
	camerasmoothviewdatasmartdistancedelay: {
		name: "cameraSmoothViewDataSmartDistanceDelay",
		default: "0.000000",
		category: 4,
		scope: "Character",
	},
	camerasmoothviewdatasmartdistancefactor: {
		name: "cameraSmoothViewDataSmartDistanceFactor",
		default: "0.000000",
		category: 4,
		scope: "Character",
	},
	camerasmoothviewdatasmartpitchdelay: {
		name: "cameraSmoothViewDataSmartPitchDelay",
		default: "0.000000",
		category: 4,
		scope: "Character",
	},
	camerasmoothviewdatasmartpitchfactor: {
		name: "cameraSmoothViewDataSmartPitchFactor",
		default: "0.000000",
		category: 4,
		scope: "Character",
	},
	camerasmoothviewdatasmartyawdelay: {
		name: "cameraSmoothViewDataSmartYawDelay",
		default: "0.000000",
		category: 4,
		scope: "Character",
	},
	camerasmoothviewdatasmartyawfactor: {
		name: "cameraSmoothViewDataSmartYawFactor",
		default: "1.000000",
		category: 4,
		scope: "Character",
	},
	camerasmoothviewdatasmarterdistancedelay: {
		name: "cameraSmoothViewDataSmarterDistanceDelay",
		default: "0.000000",
		category: 4,
		scope: "Character",
	},
	camerasmoothviewdatasmarterdistancefactor: {
		name: "cameraSmoothViewDataSmarterDistanceFactor",
		default: "0.000000",
		category: 4,
		scope: "Character",
	},
	camerasmoothviewdatasmarterpitchdelay: {
		name: "cameraSmoothViewDataSmarterPitchDelay",
		default: "0.000000",
		category: 4,
		scope: "Character",
	},
	camerasmoothviewdatasmarterpitchfactor: {
		name: "cameraSmoothViewDataSmarterPitchFactor",
		default: "1.000000",
		category: 4,
		scope: "Character",
	},
	camerasmoothviewdatasmarteryawdelay: {
		name: "cameraSmoothViewDataSmarterYawDelay",
		default: "0.000000",
		category: 4,
		scope: "Character",
	},
	camerasmoothviewdatasmarteryawfactor: {
		name: "cameraSmoothViewDataSmarterYawFactor",
		default: "1.000000",
		category: 4,
		scope: "Character",
	},
	camerasmoothviewdatasplinedistancedelay: {
		name: "cameraSmoothViewDataSplineDistanceDelay",
		default: "0.000000",
		category: 4,
		scope: "Character",
	},
	camerasmoothviewdatasplinedistancefactor: {
		name: "cameraSmoothViewDataSplineDistanceFactor",
		default: "0.000000",
		category: 4,
		scope: "Character",
	},
	camerasmoothviewdatasplinepitchdelay: {
		name: "cameraSmoothViewDataSplinePitchDelay",
		default: "0.000000",
		category: 4,
		scope: "Character",
	},
	camerasmoothviewdatasplinepitchfactor: {
		name: "cameraSmoothViewDataSplinePitchFactor",
		default: "1.000000",
		category: 4,
		scope: "Character",
	},
	camerasmoothviewdatasplineyawdelay: {
		name: "cameraSmoothViewDataSplineYawDelay",
		default: "0.000000",
		category: 4,
		scope: "Character",
	},
	camerasmoothviewdatasplineyawfactor: {
		name: "cameraSmoothViewDataSplineYawFactor",
		default: "1.000000",
		category: 4,
		scope: "Character",
	},
	camerasmoothyaw: {
		name: "cameraSmoothYaw",
		default: "1",
		category: 4,
		scope: "Character",
	},
	camerasubmergepitch: {
		name: "cameraSubmergePitch",
		default: "18.000000",
		category: 4,
		scope: "Character",
	},
	camerasurfacepitch: {
		name: "cameraSurfacePitch",
		default: "0.000000",
		category: 4,
		scope: "Character",
	},
	cameratargetsmoothspeed: {
		name: "cameraTargetSmoothSpeed",
		default: "90.000000",
		category: 4,
		scope: "Character",
	},
	cameraterraintilt: {
		name: "cameraTerrainTilt",
		default: "0",
		category: 4,
		scope: "Character",
	},
	cameraterraintiltalwaysfallabsorb: {
		name: "cameraTerrainTiltAlwaysFallAbsorb",
		default: "1.000000",
		category: 4,
		scope: "Character",
	},
	cameraterraintiltalwaysfalldelay: {
		name: "cameraTerrainTiltAlwaysFallDelay",
		default: "0.000000",
		category: 4,
		scope: "Character",
	},
	cameraterraintiltalwaysfallfactor: {
		name: "cameraTerrainTiltAlwaysFallFactor",
		default: "0.750000",
		category: 4,
		scope: "Character",
	},
	cameraterraintiltalwaysfearabsorb: {
		name: "cameraTerrainTiltAlwaysFearAbsorb",
		default: "1.000000",
		category: 4,
		scope: "Character",
	},
	cameraterraintiltalwaysfeardelay: {
		name: "cameraTerrainTiltAlwaysFearDelay",
		default: "0.000000",
		category: 4,
		scope: "Character",
	},
	cameraterraintiltalwaysfearfactor: {
		name: "cameraTerrainTiltAlwaysFearFactor",
		default: "1.000000",
		category: 4,
		scope: "Character",
	},
	cameraterraintiltalwaysidleabsorb: {
		name: "cameraTerrainTiltAlwaysIdleAbsorb",
		default: "1.000000",
		category: 4,
		scope: "Character",
	},
	cameraterraintiltalwaysidledelay: {
		name: "cameraTerrainTiltAlwaysIdleDelay",
		default: "0.000000",
		category: 4,
		scope: "Character",
	},
	cameraterraintiltalwaysidlefactor: {
		name: "cameraTerrainTiltAlwaysIdleFactor",
		default: "1.000000",
		category: 4,
		scope: "Character",
	},
	cameraterraintiltalwaysjumpabsorb: {
		name: "cameraTerrainTiltAlwaysJumpAbsorb",
		default: "0.000000",
		category: 4,
		scope: "Character",
	},
	cameraterraintiltalwaysjumpdelay: {
		name: "cameraTerrainTiltAlwaysJumpDelay",
		default: "0.000000",
		category: 4,
		scope: "Character",
	},
	cameraterraintiltalwaysjumpfactor: {
		name: "cameraTerrainTiltAlwaysJumpFactor",
		default: "-1.000000",
		category: 4,
		scope: "Character",
	},
	cameraterraintiltalwaysmoveabsorb: {
		name: "cameraTerrainTiltAlwaysMoveAbsorb",
		default: "1.000000",
		category: 4,
		scope: "Character",
	},
	cameraterraintiltalwaysmovedelay: {
		name: "cameraTerrainTiltAlwaysMoveDelay",
		default: "0.000000",
		category: 4,
		scope: "Character",
	},
	cameraterraintiltalwaysmovefactor: {
		name: "cameraTerrainTiltAlwaysMoveFactor",
		default: "1.000000",
		category: 4,
		scope: "Character",
	},
	cameraterraintiltalwaysstrafeabsorb: {
		name: "cameraTerrainTiltAlwaysStrafeAbsorb",
		default: "1.000000",
		category: 4,
		scope: "Character",
	},
	cameraterraintiltalwaysstrafedelay: {
		name: "cameraTerrainTiltAlwaysStrafeDelay",
		default: "0.000000",
		category: 4,
		scope: "Character",
	},
	cameraterraintiltalwaysstrafefactor: {
		name: "cameraTerrainTiltAlwaysStrafeFactor",
		default: "1.000000",
		category: 4,
		scope: "Character",
	},
	cameraterraintiltalwaysswimabsorb: {
		name: "cameraTerrainTiltAlwaysSwimAbsorb",
		default: "0.000000",
		category: 4,
		scope: "Character",
	},
	cameraterraintiltalwaysswimdelay: {
		name: "cameraTerrainTiltAlwaysSwimDelay",
		default: "0.000000",
		category: 4,
		scope: "Character",
	},
	cameraterraintiltalwaysswimfactor: {
		name: "cameraTerrainTiltAlwaysSwimFactor",
		default: "1.000000",
		category: 4,
		scope: "Character",
	},
	cameraterraintiltalwaystaxiabsorb: {
		name: "cameraTerrainTiltAlwaysTaxiAbsorb",
		default: "0.000000",
		category: 4,
		scope: "Character",
	},
	cameraterraintiltalwaystaxidelay: {
		name: "cameraTerrainTiltAlwaysTaxiDelay",
		default: "0.000000",
		category: 4,
		scope: "Character",
	},
	cameraterraintiltalwaystaxifactor: {
		name: "cameraTerrainTiltAlwaysTaxiFactor",
		default: "1.000000",
		category: 4,
		scope: "Character",
	},
	cameraterraintiltalwaystrackabsorb: {
		name: "cameraTerrainTiltAlwaysTrackAbsorb",
		default: "1.000000",
		category: 4,
		scope: "Character",
	},
	cameraterraintiltalwaystrackdelay: {
		name: "cameraTerrainTiltAlwaysTrackDelay",
		default: "0.000000",
		category: 4,
		scope: "Character",
	},
	cameraterraintiltalwaystrackfactor: {
		name: "cameraTerrainTiltAlwaysTrackFactor",
		default: "1.000000",
		category: 4,
		scope: "Character",
	},
	cameraterraintiltalwaysturnabsorb: {
		name: "cameraTerrainTiltAlwaysTurnAbsorb",
		default: "1.000000",
		category: 4,
		scope: "Character",
	},
	cameraterraintiltalwaysturndelay: {
		name: "cameraTerrainTiltAlwaysTurnDelay",
		default: "0.000000",
		category: 4,
		scope: "Character",
	},
	cameraterraintiltalwaysturnfactor: {
		name: "cameraTerrainTiltAlwaysTurnFactor",
		default: "1.000000",
		category: 4,
		scope: "Character",
	},
	cameraterraintiltneverfallabsorb: {
		name: "cameraTerrainTiltNeverFallAbsorb",
		default: "0.000000",
		category: 4,
		scope: "Character",
	},
	cameraterraintiltneverfalldelay: {
		name: "cameraTerrainTiltNeverFallDelay",
		default: "0.000000",
		category: 4,
		scope: "Character",
	},
	cameraterraintiltneverfallfactor: {
		name: "cameraTerrainTiltNeverFallFactor",
		default: "-1.000000",
		category: 4,
		scope: "Character",
	},
	cameraterraintiltneverfearabsorb: {
		name: "cameraTerrainTiltNeverFearAbsorb",
		default: "0.000000",
		category: 4,
		scope: "Character",
	},
	cameraterraintiltneverfeardelay: {
		name: "cameraTerrainTiltNeverFearDelay",
		default: "0.000000",
		category: 4,
		scope: "Character",
	},
	cameraterraintiltneverfearfactor: {
		name: "cameraTerrainTiltNeverFearFactor",
		default: "-1.000000",
		category: 4,
		scope: "Character",
	},
	cameraterraintiltneveridleabsorb: {
		name: "cameraTerrainTiltNeverIdleAbsorb",
		default: "0.000000",
		category: 4,
		scope: "Character",
	},
	cameraterraintiltneveridledelay: {
		name: "cameraTerrainTiltNeverIdleDelay",
		default: "0.000000",
		category: 4,
		scope: "Character",
	},
	cameraterraintiltneveridlefactor: {
		name: "cameraTerrainTiltNeverIdleFactor",
		default: "-1.000000",
		category: 4,
		scope: "Character",
	},
	cameraterraintiltneverjumpabsorb: {
		name: "cameraTerrainTiltNeverJumpAbsorb",
		default: "0.000000",
		category: 4,
		scope: "Character",
	},
	cameraterraintiltneverjumpdelay: {
		name: "cameraTerrainTiltNeverJumpDelay",
		default: "0.000000",
		category: 4,
		scope: "Character",
	},
	cameraterraintiltneverjumpfactor: {
		name: "cameraTerrainTiltNeverJumpFactor",
		default: "-1.000000",
		category: 4,
		scope: "Character",
	},
	cameraterraintiltnevermoveabsorb: {
		name: "cameraTerrainTiltNeverMoveAbsorb",
		default: "0.000000",
		category: 4,
		scope: "Character",
	},
	cameraterraintiltnevermovedelay: {
		name: "cameraTerrainTiltNeverMoveDelay",
		default: "0.000000",
		category: 4,
		scope: "Character",
	},
	cameraterraintiltnevermovefactor: {
		name: "cameraTerrainTiltNeverMoveFactor",
		default: "-1.000000",
		category: 4,
		scope: "Character",
	},
	cameraterraintiltneverstrafeabsorb: {
		name: "cameraTerrainTiltNeverStrafeAbsorb",
		default: "0.000000",
		category: 4,
		scope: "Character",
	},
	cameraterraintiltneverstrafedelay: {
		name: "cameraTerrainTiltNeverStrafeDelay",
		default: "0.000000",
		category: 4,
		scope: "Character",
	},
	cameraterraintiltneverstrafefactor: {
		name: "cameraTerrainTiltNeverStrafeFactor",
		default: "-1.000000",
		category: 4,
		scope: "Character",
	},
	cameraterraintiltneverswimabsorb: {
		name: "cameraTerrainTiltNeverSwimAbsorb",
		default: "0.000000",
		category: 4,
		scope: "Character",
	},
	cameraterraintiltneverswimdelay: {
		name: "cameraTerrainTiltNeverSwimDelay",
		default: "0.000000",
		category: 4,
		scope: "Character",
	},
	cameraterraintiltneverswimfactor: {
		name: "cameraTerrainTiltNeverSwimFactor",
		default: "-1.000000",
		category: 4,
		scope: "Character",
	},
	cameraterraintiltnevertaxiabsorb: {
		name: "cameraTerrainTiltNeverTaxiAbsorb",
		default: "0.000000",
		category: 4,
		scope: "Character",
	},
	cameraterraintiltnevertaxidelay: {
		name: "cameraTerrainTiltNeverTaxiDelay",
		default: "0.000000",
		category: 4,
		scope: "Character",
	},
	cameraterraintiltnevertaxifactor: {
		name: "cameraTerrainTiltNeverTaxiFactor",
		default: "-1.000000",
		category: 4,
		scope: "Character",
	},
	cameraterraintiltnevertrackabsorb: {
		name: "cameraTerrainTiltNeverTrackAbsorb",
		default: "0.000000",
		category: 4,
		scope: "Character",
	},
	cameraterraintiltnevertrackdelay: {
		name: "cameraTerrainTiltNeverTrackDelay",
		default: "0.000000",
		category: 4,
		scope: "Character",
	},
	cameraterraintiltnevertrackfactor: {
		name: "cameraTerrainTiltNeverTrackFactor",
		default: "-1.000000",
		category: 4,
		scope: "Character",
	},
	cameraterraintiltneverturnabsorb: {
		name: "cameraTerrainTiltNeverTurnAbsorb",
		default: "0.000000",
		category: 4,
		scope: "Character",
	},
	cameraterraintiltneverturndelay: {
		name: "cameraTerrainTiltNeverTurnDelay",
		default: "0.000000",
		category: 4,
		scope: "Character",
	},
	cameraterraintiltneverturnfactor: {
		name: "cameraTerrainTiltNeverTurnFactor",
		default: "-1.000000",
		category: 4,
		scope: "Character",
	},
	cameraterraintiltsmartfallabsorb: {
		name: "cameraTerrainTiltSmartFallAbsorb",
		default: "1.000000",
		category: 4,
		scope: "Character",
	},
	cameraterraintiltsmartfalldelay: {
		name: "cameraTerrainTiltSmartFallDelay",
		default: "0.000000",
		category: 4,
		scope: "Character",
	},
	cameraterraintiltsmartfallfactor: {
		name: "cameraTerrainTiltSmartFallFactor",
		default: "0.750000",
		category: 4,
		scope: "Character",
	},
	cameraterraintiltsmartfearabsorb: {
		name: "cameraTerrainTiltSmartFearAbsorb",
		default: "1.000000",
		category: 4,
		scope: "Character",
	},
	cameraterraintiltsmartfeardelay: {
		name: "cameraTerrainTiltSmartFearDelay",
		default: "0.000000",
		category: 4,
		scope: "Character",
	},
	cameraterraintiltsmartfearfactor: {
		name: "cameraTerrainTiltSmartFearFactor",
		default: "1.000000",
		category: 4,
		scope: "Character",
	},
	cameraterraintiltsmartidleabsorb: {
		name: "cameraTerrainTiltSmartIdleAbsorb",
		default: "0.000000",
		category: 4,
		scope: "Character",
	},
	cameraterraintiltsmartidledelay: {
		name: "cameraTerrainTiltSmartIdleDelay",
		default: "0.000000",
		category: 4,
		scope: "Character",
	},
	cameraterraintiltsmartidlefactor: {
		name: "cameraTerrainTiltSmartIdleFactor",
		default: "-1.000000",
		category: 4,
		scope: "Character",
	},
	cameraterraintiltsmartjumpabsorb: {
		name: "cameraTerrainTiltSmartJumpAbsorb",
		default: "0.000000",
		category: 4,
		scope: "Character",
	},
	cameraterraintiltsmartjumpdelay: {
		name: "cameraTerrainTiltSmartJumpDelay",
		default: "0.000000",
		category: 4,
		scope: "Character",
	},
	cameraterraintiltsmartjumpfactor: {
		name: "cameraTerrainTiltSmartJumpFactor",
		default: "-1.000000",
		category: 4,
		scope: "Character",
	},
	cameraterraintiltsmartmoveabsorb: {
		name: "cameraTerrainTiltSmartMoveAbsorb",
		default: "1.000000",
		category: 4,
		scope: "Character",
	},
	cameraterraintiltsmartmovedelay: {
		name: "cameraTerrainTiltSmartMoveDelay",
		default: "0.000000",
		category: 4,
		scope: "Character",
	},
	cameraterraintiltsmartmovefactor: {
		name: "cameraTerrainTiltSmartMoveFactor",
		default: "1.000000",
		category: 4,
		scope: "Character",
	},
	cameraterraintiltsmartstrafeabsorb: {
		name: "cameraTerrainTiltSmartStrafeAbsorb",
		default: "1.000000",
		category: 4,
		scope: "Character",
	},
	cameraterraintiltsmartstrafedelay: {
		name: "cameraTerrainTiltSmartStrafeDelay",
		default: "0.000000",
		category: 4,
		scope: "Character",
	},
	cameraterraintiltsmartstrafefactor: {
		name: "cameraTerrainTiltSmartStrafeFactor",
		default: "1.000000",
		category: 4,
		scope: "Character",
	},
	cameraterraintiltsmartswimabsorb: {
		name: "cameraTerrainTiltSmartSwimAbsorb",
		default: "0.000000",
		category: 4,
		scope: "Character",
	},
	cameraterraintiltsmartswimdelay: {
		name: "cameraTerrainTiltSmartSwimDelay",
		default: "0.000000",
		category: 4,
		scope: "Character",
	},
	cameraterraintiltsmartswimfactor: {
		name: "cameraTerrainTiltSmartSwimFactor",
		default: "1.000000",
		category: 4,
		scope: "Character",
	},
	cameraterraintiltsmarttaxiabsorb: {
		name: "cameraTerrainTiltSmartTaxiAbsorb",
		default: "0.000000",
		category: 4,
		scope: "Character",
	},
	cameraterraintiltsmarttaxidelay: {
		name: "cameraTerrainTiltSmartTaxiDelay",
		default: "0.000000",
		category: 4,
		scope: "Character",
	},
	cameraterraintiltsmarttaxifactor: {
		name: "cameraTerrainTiltSmartTaxiFactor",
		default: "1.000000",
		category: 4,
		scope: "Character",
	},
	cameraterraintiltsmarttrackabsorb: {
		name: "cameraTerrainTiltSmartTrackAbsorb",
		default: "1.000000",
		category: 4,
		scope: "Character",
	},
	cameraterraintiltsmarttrackdelay: {
		name: "cameraTerrainTiltSmartTrackDelay",
		default: "0.000000",
		category: 4,
		scope: "Character",
	},
	cameraterraintiltsmarttrackfactor: {
		name: "cameraTerrainTiltSmartTrackFactor",
		default: "1.000000",
		category: 4,
		scope: "Character",
	},
	cameraterraintiltsmartturnabsorb: {
		name: "cameraTerrainTiltSmartTurnAbsorb",
		default: "1.000000",
		category: 4,
		scope: "Character",
	},
	cameraterraintiltsmartturndelay: {
		name: "cameraTerrainTiltSmartTurnDelay",
		default: "0.000000",
		category: 4,
		scope: "Character",
	},
	cameraterraintiltsmartturnfactor: {
		name: "cameraTerrainTiltSmartTurnFactor",
		default: "1.000000",
		category: 4,
		scope: "Character",
	},
	cameraterraintiltsmarterfallabsorb: {
		name: "cameraTerrainTiltSmarterFallAbsorb",
		default: "1.000000",
		category: 4,
		scope: "Character",
	},
	cameraterraintiltsmarterfalldelay: {
		name: "cameraTerrainTiltSmarterFallDelay",
		default: "0.000000",
		category: 4,
		scope: "Character",
	},
	cameraterraintiltsmarterfallfactor: {
		name: "cameraTerrainTiltSmarterFallFactor",
		default: "0.750000",
		category: 4,
		scope: "Character",
	},
	cameraterraintiltsmarterfearabsorb: {
		name: "cameraTerrainTiltSmarterFearAbsorb",
		default: "1.000000",
		category: 4,
		scope: "Character",
	},
	cameraterraintiltsmarterfeardelay: {
		name: "cameraTerrainTiltSmarterFearDelay",
		default: "0.000000",
		category: 4,
		scope: "Character",
	},
	cameraterraintiltsmarterfearfactor: {
		name: "cameraTerrainTiltSmarterFearFactor",
		default: "1.000000",
		category: 4,
		scope: "Character",
	},
	cameraterraintiltsmarteridleabsorb: {
		name: "cameraTerrainTiltSmarterIdleAbsorb",
		default: "0.000000",
		category: 4,
		scope: "Character",
	},
	cameraterraintiltsmarteridledelay: {
		name: "cameraTerrainTiltSmarterIdleDelay",
		default: "0.000000",
		category: 4,
		scope: "Character",
	},
	cameraterraintiltsmarteridlefactor: {
		name: "cameraTerrainTiltSmarterIdleFactor",
		default: "-1.000000",
		category: 4,
		scope: "Character",
	},
	cameraterraintiltsmarterjumpabsorb: {
		name: "cameraTerrainTiltSmarterJumpAbsorb",
		default: "0.000000",
		category: 4,
		scope: "Character",
	},
	cameraterraintiltsmarterjumpdelay: {
		name: "cameraTerrainTiltSmarterJumpDelay",
		default: "0.000000",
		category: 4,
		scope: "Character",
	},
	cameraterraintiltsmarterjumpfactor: {
		name: "cameraTerrainTiltSmarterJumpFactor",
		default: "-1.000000",
		category: 4,
		scope: "Character",
	},
	cameraterraintiltsmartermoveabsorb: {
		name: "cameraTerrainTiltSmarterMoveAbsorb",
		default: "1.000000",
		category: 4,
		scope: "Character",
	},
	cameraterraintiltsmartermovedelay: {
		name: "cameraTerrainTiltSmarterMoveDelay",
		default: "0.000000",
		category: 4,
		scope: "Character",
	},
	cameraterraintiltsmartermovefactor: {
		name: "cameraTerrainTiltSmarterMoveFactor",
		default: "1.000000",
		category: 4,
		scope: "Character",
	},
	cameraterraintiltsmarterstrafeabsorb: {
		name: "cameraTerrainTiltSmarterStrafeAbsorb",
		default: "1.000000",
		category: 4,
		scope: "Character",
	},
	cameraterraintiltsmarterstrafedelay: {
		name: "cameraTerrainTiltSmarterStrafeDelay",
		default: "0.000000",
		category: 4,
		scope: "Character",
	},
	cameraterraintiltsmarterstrafefactor: {
		name: "cameraTerrainTiltSmarterStrafeFactor",
		default: "1.000000",
		category: 4,
		scope: "Character",
	},
	cameraterraintiltsmarterswimabsorb: {
		name: "cameraTerrainTiltSmarterSwimAbsorb",
		default: "0.000000",
		category: 4,
		scope: "Character",
	},
	cameraterraintiltsmarterswimdelay: {
		name: "cameraTerrainTiltSmarterSwimDelay",
		default: "0.000000",
		category: 4,
		scope: "Character",
	},
	cameraterraintiltsmarterswimfactor: {
		name: "cameraTerrainTiltSmarterSwimFactor",
		default: "1.000000",
		category: 4,
		scope: "Character",
	},
	cameraterraintiltsmartertaxiabsorb: {
		name: "cameraTerrainTiltSmarterTaxiAbsorb",
		default: "0.000000",
		category: 4,
		scope: "Character",
	},
	cameraterraintiltsmartertaxidelay: {
		name: "cameraTerrainTiltSmarterTaxiDelay",
		default: "0.000000",
		category: 4,
		scope: "Character",
	},
	cameraterraintiltsmartertaxifactor: {
		name: "cameraTerrainTiltSmarterTaxiFactor",
		default: "1.000000",
		category: 4,
		scope: "Character",
	},
	cameraterraintiltsmartertrackabsorb: {
		name: "cameraTerrainTiltSmarterTrackAbsorb",
		default: "1.000000",
		category: 4,
		scope: "Character",
	},
	cameraterraintiltsmartertrackdelay: {
		name: "cameraTerrainTiltSmarterTrackDelay",
		default: "0.000000",
		category: 4,
		scope: "Character",
	},
	cameraterraintiltsmartertrackfactor: {
		name: "cameraTerrainTiltSmarterTrackFactor",
		default: "1.000000",
		category: 4,
		scope: "Character",
	},
	cameraterraintiltsmarterturnabsorb: {
		name: "cameraTerrainTiltSmarterTurnAbsorb",
		default: "1.000000",
		category: 4,
		scope: "Character",
	},
	cameraterraintiltsmarterturndelay: {
		name: "cameraTerrainTiltSmarterTurnDelay",
		default: "0.000000",
		category: 4,
		scope: "Character",
	},
	cameraterraintiltsmarterturnfactor: {
		name: "cameraTerrainTiltSmarterTurnFactor",
		default: "1.000000",
		category: 4,
		scope: "Character",
	},
	cameraterraintiltsplinefallabsorb: {
		name: "cameraTerrainTiltSplineFallAbsorb",
		default: "1.000000",
		category: 4,
		scope: "Character",
	},
	cameraterraintiltsplinefalldelay: {
		name: "cameraTerrainTiltSplineFallDelay",
		default: "0.000000",
		category: 4,
		scope: "Character",
	},
	cameraterraintiltsplinefallfactor: {
		name: "cameraTerrainTiltSplineFallFactor",
		default: "0.750000",
		category: 4,
		scope: "Character",
	},
	cameraterraintiltsplinefearabsorb: {
		name: "cameraTerrainTiltSplineFearAbsorb",
		default: "1.000000",
		category: 4,
		scope: "Character",
	},
	cameraterraintiltsplinefeardelay: {
		name: "cameraTerrainTiltSplineFearDelay",
		default: "0.000000",
		category: 4,
		scope: "Character",
	},
	cameraterraintiltsplinefearfactor: {
		name: "cameraTerrainTiltSplineFearFactor",
		default: "1.000000",
		category: 4,
		scope: "Character",
	},
	cameraterraintiltsplineidleabsorb: {
		name: "cameraTerrainTiltSplineIdleAbsorb",
		default: "0.000000",
		category: 4,
		scope: "Character",
	},
	cameraterraintiltsplineidledelay: {
		name: "cameraTerrainTiltSplineIdleDelay",
		default: "0.000000",
		category: 4,
		scope: "Character",
	},
	cameraterraintiltsplineidlefactor: {
		name: "cameraTerrainTiltSplineIdleFactor",
		default: "-1.000000",
		category: 4,
		scope: "Character",
	},
	cameraterraintiltsplinejumpabsorb: {
		name: "cameraTerrainTiltSplineJumpAbsorb",
		default: "0.000000",
		category: 4,
		scope: "Character",
	},
	cameraterraintiltsplinejumpdelay: {
		name: "cameraTerrainTiltSplineJumpDelay",
		default: "0.000000",
		category: 4,
		scope: "Character",
	},
	cameraterraintiltsplinejumpfactor: {
		name: "cameraTerrainTiltSplineJumpFactor",
		default: "-1.000000",
		category: 4,
		scope: "Character",
	},
	cameraterraintiltsplinemoveabsorb: {
		name: "cameraTerrainTiltSplineMoveAbsorb",
		default: "1.000000",
		category: 4,
		scope: "Character",
	},
	cameraterraintiltsplinemovedelay: {
		name: "cameraTerrainTiltSplineMoveDelay",
		default: "0.000000",
		category: 4,
		scope: "Character",
	},
	cameraterraintiltsplinemovefactor: {
		name: "cameraTerrainTiltSplineMoveFactor",
		default: "1.000000",
		category: 4,
		scope: "Character",
	},
	cameraterraintiltsplinestrafeabsorb: {
		name: "cameraTerrainTiltSplineStrafeAbsorb",
		default: "1.000000",
		category: 4,
		scope: "Character",
	},
	cameraterraintiltsplinestrafedelay: {
		name: "cameraTerrainTiltSplineStrafeDelay",
		default: "0.000000",
		category: 4,
		scope: "Character",
	},
	cameraterraintiltsplinestrafefactor: {
		name: "cameraTerrainTiltSplineStrafeFactor",
		default: "1.000000",
		category: 4,
		scope: "Character",
	},
	cameraterraintiltsplineswimabsorb: {
		name: "cameraTerrainTiltSplineSwimAbsorb",
		default: "0.000000",
		category: 4,
		scope: "Character",
	},
	cameraterraintiltsplineswimdelay: {
		name: "cameraTerrainTiltSplineSwimDelay",
		default: "0.000000",
		category: 4,
		scope: "Character",
	},
	cameraterraintiltsplineswimfactor: {
		name: "cameraTerrainTiltSplineSwimFactor",
		default: "1.000000",
		category: 4,
		scope: "Character",
	},
	cameraterraintiltsplinetaxiabsorb: {
		name: "cameraTerrainTiltSplineTaxiAbsorb",
		default: "0.000000",
		category: 4,
		scope: "Character",
	},
	cameraterraintiltsplinetaxidelay: {
		name: "cameraTerrainTiltSplineTaxiDelay",
		default: "0.000000",
		category: 4,
		scope: "Character",
	},
	cameraterraintiltsplinetaxifactor: {
		name: "cameraTerrainTiltSplineTaxiFactor",
		default: "1.000000",
		category: 4,
		scope: "Character",
	},
	cameraterraintiltsplinetrackabsorb: {
		name: "cameraTerrainTiltSplineTrackAbsorb",
		default: "1.000000",
		category: 4,
		scope: "Character",
	},
	cameraterraintiltsplinetrackdelay: {
		name: "cameraTerrainTiltSplineTrackDelay",
		default: "0.000000",
		category: 4,
		scope: "Character",
	},
	cameraterraintiltsplinetrackfactor: {
		name: "cameraTerrainTiltSplineTrackFactor",
		default: "1.000000",
		category: 4,
		scope: "Character",
	},
	cameraterraintiltsplineturnabsorb: {
		name: "cameraTerrainTiltSplineTurnAbsorb",
		default: "1.000000",
		category: 4,
		scope: "Character",
	},
	cameraterraintiltsplineturndelay: {
		name: "cameraTerrainTiltSplineTurnDelay",
		default: "0.000000",
		category: 4,
		scope: "Character",
	},
	cameraterraintiltsplineturnfactor: {
		name: "cameraTerrainTiltSplineTurnFactor",
		default: "1.000000",
		category: 4,
		scope: "Character",
	},
	cameraterraintilttimemax: {
		name: "cameraTerrainTiltTimeMax",
		default: "10.000000",
		category: 4,
		scope: "Character",
	},
	cameraterraintilttimemin: {
		name: "cameraTerrainTiltTimeMin",
		default: "3.000000",
		category: 4,
		scope: "Character",
	},
	cameraview: {
		name: "cameraView",
		default: "2",
		category: 4,
		scope: "Character",
	},
	cameraviewblendstyle: {
		name: "cameraViewBlendStyle",
		default: "1",
		category: 4,
		scope: "Character",
	},
	camerawatercollision: {
		name: "cameraWaterCollision",
		default: "0",
		category: 4,
		scope: "Character",
	},
	camerayawmovespeed: {
		name: "cameraYawMoveSpeed",
		default: "180.000000",
		category: 4,
		scope: "Character",
	},
	camerayawsmoothmax: {
		name: "cameraYawSmoothMax",
		default: "0.000000",
		category: 4,
		scope: "Character",
	},
	camerayawsmoothmin: {
		name: "cameraYawSmoothMin",
		default: "0.000000",
		category: 4,
		scope: "Character",
	},
	camerayawsmoothspeed: {
		name: "cameraYawSmoothSpeed",
		default: "180.000000",
		category: 4,
		scope: "Character",
	},
	camerazsmooth: {
		name: "cameraZSmooth",
		default: "1",
		category: 4,
		scope: "Character",
		help: "Smooths camera vertical movement. 1 = only while moving, 2 = also while standing still",
	},
	camerazoomspeed: {
		name: "cameraZoomSpeed",
		default: "20.000000",
		category: 4,
		scope: "Character",
	},
	cascontainersizelimit: {
		name: "casContainerSizeLimit",
		default: "0",
		category: 5,
		help: "Approximate limit in GB for the amount of game data to keep on disk at a time",
	},
	chatbubbles: {
		name: "chatBubbles",
		default: "1",
		category: 4,
		scope: "Character",
		help: "Whether to show in-game chat bubbles",
	},
	chatbubblesparty: {
		name: "chatBubblesParty",
		default: "1",
		category: 4,
		scope: "Character",
		help: "Whether to show in-game chat bubbles for party chat",
	},
	chatclasscoloroverride: {
		name: "chatClassColorOverride",
		default: "0",
		category: 4,
		help: "Whether or not class names are colored in chat. 0 = always color by class name (where applicable), 1 = never color by class name, 2 = respect the legacy per-channel class color settings",
	},
	chatmousescroll: {
		name: "chatMouseScroll",
		default: "1",
		category: 4,
		scope: "Character",
		help: "Whether the user can use the mouse wheel to scroll through chat",
	},
	chatstyle: {
		name: "chatStyle",
		default: "im",
		category: 4,
		scope: "Character",
		help: "The style of Edit Boxes for the ChatFrame. Valid values: \"classic\", \"im\"",
	},
	checkaddonversion: {
		name: "checkAddonVersion",
		default: "1",
		category: 4,
		help: "Check interface addon version number",
	},
	cloakfixenabled: {
		name: "cloakFixEnabled",
		default: "1",
		category: 5,
	},
	closedextraabiltytutorials: {
		name: "closedExtraAbiltyTutorials",
		default: "",
		category: 4,
		scope: "Account",
		help: "Bitfield for which extra ability tutorials have been acknowledged by the user",
	},
	closedinfoframes: {
		name: "closedInfoFrames",
		default: "",
		category: 4,
		scope: "Account",
		help: "Bitfield for which help frames have been acknowledged by the user",
	},
	closedinfoframesaccountwide: {
		name: "closedInfoFramesAccountWide",
		default: "",
		category: 4,
		scope: "Character",
		help: "Bitfield for which help frames have been acknowledged by the user (account-wide)",
	},
	clubfindercacheexpiry: {
		name: "clubFinderCacheExpiry",
		default: "1000",
		category: 4,
		help: "Value in (MS) for time to expire the cache.",
	},
	clubfindercachependingexpiry: {
		name: "clubFinderCachePendingExpiry",
		default: "5000",
		category: 4,
		help: "Value in (MS) for time to expire the cache.",
	},
	clubfinderplayerlanguagesettings: {
		name: "clubFinderPlayerLanguageSettings",
		default: "0",
		category: 4,
		scope: "Account",
		help: "Bit field of Looking for club/guild player language settings",
	},
	clubfinderplayersettings: {
		name: "clubFinderPlayerSettings",
		default: "1",
		category: 4,
		scope: "Account",
		help: "Bit field of Looking for guild player settings",
	},
	clusteredshading: {
		name: "clusteredShading",
		default: "1",
		category: 1,
		help: "Allow forward transparent lighting",
	},
	collapsedcurrencycategorydefaults: {
		name: "collapsedCurrencyCategoryDefaults",
		default: "0",
		category: 4,
		scope: "Account",
		help: "Stores the IDs of currency categories that should be collapsed by default in the Token UI",
	},
	collapsedreputationheaderdefaults: {
		name: "collapsedReputationHeaderDefaults",
		default: "",
		category: 4,
		scope: "Account",
		help: "Stores the IDs of headers that should be collapsed by default in the Reputation Panel",
	},
	colorchatnamesbyclass: {
		name: "colorChatNamesByClass",
		default: "0",
		category: 4,
		scope: "Character",
		help: "If enabled, the name of a player speaking in chat will be colored according to his class.",
	},
	colorblindmode: {
		name: "colorblindMode",
		default: "0",
		category: 4,
		scope: "Character",
		help: "Enables colorblind accessibility features in the game",
	},
	colorblindsimulator: {
		name: "colorblindSimulator",
		default: "0",
		category: 1,
		secure: true,
		help: "Type of color blindness",
	},
	colorblindweaknessfactor: {
		name: "colorblindWeaknessFactor",
		default: "0.5",
		category: 1,
		secure: true,
		help: "Amount of sensitivity. e.g. Protanope (red-weakness) 0.0 = not colorblind, 1.0 = full weakness(Protanopia), 0.5 = mid weakness(Protanomaly)",
	},
	combatlogretentiontime: {
		name: "combatLogRetentionTime",
		default: "300",
		category: 4,
		scope: "Character",
		help: "The maximum duration in seconds to retain combat log entries",
	},
	combatloguniquefilename: {
		name: "combatLogUniqueFilename",
		default: "1",
		category: 4,
		help: "Write combat log file with a timestamped name per client launch",
	},
	combinedbags: {
		name: "combinedBags",
		default: "0",
		category: 4,
		scope: "Character",
		help: "Use combined bag frame for all bags",
	},
	combopointlocation: {
		name: "comboPointLocation",
		default: "2",
		category: 4,
		help: "Location of combo points in UI. 1=target, 2=self",
	},
	commentatorlossofcontroliconunitframe: {
		name: "commentatorLossOfControlIconUnitFrame",
		default: "1",
		category: 4,
		scope: "Character",
		help: "0: Off, 1: On.",
	},
	commentatorlossofcontroltextnameplate: {
		name: "commentatorLossOfControlTextNameplate",
		default: "0",
		category: 4,
		scope: "Character",
		help: "0: Off, 1: On.",
	},
	commentatorlossofcontroltextunitframe: {
		name: "commentatorLossOfControlTextUnitFrame",
		default: "0",
		category: 4,
		scope: "Character",
		help: "0: Off, 1: On.",
	},
	communitiesshowoffline: {
		name: "communitiesShowOffline",
		default: "1",
		category: 4,
		scope: "Character",
		help: "Show offline community members in the communities frame roster",
	},
	componentcompress: {
		name: "componentCompress",
		default: "1",
		category: 1,
		help: "Character component texture compression",
	},
	componentemissive: {
		name: "componentEmissive",
		default: "1",
		category: 1,
		help: "Character component unlit/emissive",
	},
	componentspecular: {
		name: "componentSpecular",
		default: "1",
		category: 1,
		help: "Character component specular highlights",
	},
	componenttexcachesize: {
		name: "componentTexCacheSize",
		default: "32",
		category: 1,
		help: "Character component texture cache size (in MB)",
	},
	componenttexloadlimit: {
		name: "componentTexLoadLimit",
		default: "16",
		category: 1,
		help: "Character component texture loading limit per frame",
	},
	componenttexturelevel: {
		name: "componentTextureLevel",
		default: "0",
		category: 1,
		help: "Level of detail for character component textures. 0 means full detail.",
	},
	componentthread: {
		name: "componentThread",
		default: "1",
		category: 1,
		help: "Multi thread character component processing",
	},
	contenttrackingfilter: {
		name: "contentTrackingFilter",
		default: "1",
		category: 4,
		scope: "Account",
		help: "If enabled, tracked items will display on the world map.",
	},
	countdownforcooldowns: {
		name: "countdownForCooldowns",
		default: "0",
		category: 4,
		scope: "Character",
		help: "Whether to use number countdown instead of radial swipe for action button cooldowns or not.",
	},
	covenantmissiontutorial: {
		name: "covenantMissionTutorial",
		default: "0",
		category: 4,
		scope: "Account",
		help: "Stores information about which covenant mission/adventures tutorials the player has seen",
	},
	currencycategoriescollapsed: {
		name: "currencyCategoriesCollapsed",
		default: "0",
		category: 4,
		scope: "Account",
		help: "Internal CVar for tracking collapsed currency categories.",
	},
	currencytokensbackpack1: {
		name: "currencyTokensBackpack1",
		default: "0",
		category: 4,
		scope: "Account",
		help: "Currency token types shown on backpack.",
	},
	currencytokensbackpack2: {
		name: "currencyTokensBackpack2",
		default: "0",
		category: 4,
		scope: "Account",
		help: "Currency token types shown on backpack.",
	},
	currencytokensunused1: {
		name: "currencyTokensUnused1",
		default: "0",
		category: 4,
		scope: "Account",
		help: "Currency token types marked as unused.",
	},
	currencytokensunused2: {
		name: "currencyTokensUnused2",
		default: "0",
		category: 4,
		scope: "Account",
		help: "Currency token types marked as unused.",
	},
	cursorsizepreferred: {
		name: "cursorSizePreferred",
		default: "-1",
		category: 1,
		help: "Size of cursor: -1=determine based on system/monitor dpi, 0=32x32, 1=48x48, 2=64x64, 3=96x96, 4=128x128",
	},
	daltonize: {
		name: "daltonize",
		default: "1",
		category: 1,
		secure: true,
		help: "Attempt to correct for color blindness (set colorblindSimulator to type of colorblindness)",
	},
	dangerousshipyardmissionwarningalreadyshown: {
		name: "dangerousShipyardMissionWarningAlreadyShown",
		default: "0",
		category: 4,
		scope: "Account",
		help: "Boolean indicating whether the shipyard's dangerous mission warning has been shown",
	},
	debuggameevents: {
		name: "debugGameEvents",
		default: "0",
		category: 0,
		help: "Show additional information about game events",
	},
	deselectonclick: {
		name: "deselectOnClick",
		default: "0",
		category: 4,
		scope: "Character",
		help: "Clear the target when clicking on terrain",
	},
	digsites: {
		name: "digSites",
		default: "1",
		category: 4,
		scope: "Account",
		help: "If enabled, the archaeological dig site system will be used.",
	},
	disableaelooting: {
		name: "disableAELooting",
		default: "0",
		category: 4,
		help: "Disable AoE Looting",
	},
	disableautorealmselect: {
		name: "disableAutoRealmSelect",
		default: "0",
		category: 5,
		help: "Disable automatically selecting a realm on login",
	},
	disableservernagle: {
		name: "disableServerNagle",
		default: "1",
		category: 6,
		help: "Disable server-side nagle algorithm",
	},
	disableuseraddonsbydefault: {
		name: "disableUserAddonsByDefault",
		default: "0",
		category: 4,
		help: "Setting this will result in newly installed addons to be disabled by default",
	},
	displayspellactivationoverlays: {
		name: "displaySpellActivationOverlays",
		default: "1",
		category: 4,
		scope: "Account",
		help: "Whether to display Spell Activation Overlays (a.k.a. Spell Alerts)",
	},
	displayworldpvpobjectives: {
		name: "displayWorldPVPObjectives",
		default: "1",
		category: 4,
		scope: "Character",
		help: "Whether to show world PvP objectives",
	},
	displayedraffriendinfo: {
		name: "displayedRAFFriendInfo",
		default: "0",
		category: 4,
		scope: "Character",
		help: "Stores whether we already told a recruited person about their new BattleTag friend",
	},
	dnmtupdate: {
		name: "dnMTUpdate",
		default: "1",
		category: 1,
		help: "Update Daynight in parralel.",
	},
	donotflashlowhealthwarning: {
		name: "doNotFlashLowHealthWarning",
		default: "0",
		category: 4,
		scope: "Character",
		help: "Do not flash your screen red when you are low on health.",
	},
	dontshowequipmentsetsonitems: {
		name: "dontShowEquipmentSetsOnItems",
		default: "0",
		category: 4,
		scope: "Character",
		help: "Don't show which equipment sets an item is associated with",
	},
	doodadlodscale: {
		name: "doodadLodScale",
		default: "100",
		category: 1,
		help: "Doodad level of detail scale",
	},
	dragonridingracesfilter: {
		name: "dragonRidingRacesFilter",
		default: "0",
		category: 4,
		scope: "Account",
		help: "If enabled, dragonriding races will display on the world map at zone level.",
	},
	dragonridingracesfilterwq: {
		name: "dragonRidingRacesFilterWQ",
		default: "1",
		category: 4,
		scope: "Account",
		help: "If enabled, dragonriding races WQ will display on the world map at zone level.",
	},
	dynamiclod: {
		name: "dynamicLod",
		default: "1",
		category: 1,
		help: "Dynamic level of detail adjustment",
	},
	emphasizemyspelleffects: {
		name: "emphasizeMySpellEffects",
		default: "1",
		category: 4,
		scope: "Character",
		help: "Whether other player's spell impacts are toned down or not.",
	},
	empowertapcontrols: {
		name: "empowerTapControls",
		default: "0",
		category: 4,
		scope: "Account",
		help: "By default, Empower spells use a press-hold-release control scheme. Set this CVar to use a tap-tap scheme instead.",
	},
	enableassettracking: {
		name: "enableAssetTracking",
		default: "1",
		category: 4,
		help: "Whether to track which assets are least recently used",
	},
	enablebgdl: {
		name: "enableBGDL",
		default: "1",
		category: 0,
		help: "Background Download (on async net thread) Enabled",
	},
	enablefloatingcombattext: {
		name: "enableFloatingCombatText",
		default: "0",
		category: 4,
		scope: "Character",
		help: "Whether to show floating combat text",
	},
	enablemousespeed: {
		name: "enableMouseSpeed",
		default: "0",
		category: 4,
		help: "Enables setting a custom mouse sensitivity to override the setting from the operating system.",
	},
	enablemouseovercast: {
		name: "enableMouseoverCast",
		default: "0",
		category: 4,
		scope: "Account",
		secure: true,
		help: "Whether mouseover casting is enabled (optionally with a modifier key).",
	},
	enablemovepad: {
		name: "enableMovePad",
		default: "0",
		category: 4,
		scope: "Character",
		help: "Enables the MovePad accessibility feature in the game",
	},
	enablemultiactionbars: {
		name: "enableMultiActionBars",
		default: "0",
		category: 4,
		scope: "Account",
		help: "Bits for which additional action bars to show",
	},
	enablepvpnotifyafk: {
		name: "enablePVPNotifyAFK",
		default: "1",
		category: 4,
		scope: "Character",
		help: "The ability to shutdown the AFK notification system",
	},
	enablepetbattlefloatingcombattext: {
		name: "enablePetBattleFloatingCombatText",
		default: "1",
		category: 4,
		scope: "Character",
		help: "Whether to show floating combat text for pet battles",
	},
	enablepings: {
		name: "enablePings",
		default: "1",
		category: 4,
		help: "Enables ping system.",
	},
	enablerunespentanim: {
		name: "enableRuneSpentAnim",
		default: "1",
		category: 5,
		help: "Adjust the time the rune fades after it flashes when you spend it",
	},
	enablesourcelocationlookup: {
		name: "enableSourceLocationLookup",
		default: "1",
		category: 0,
		help: "Allows addon file name lookup for debugging help",
	},
	enabletwitter: {
		name: "enableTwitter",
		default: "0",
		category: 4,
		scope: "Character",
		help: "Whether Twitter integration is enabled",
	},
	enablewowmouse: {
		name: "enableWowMouse",
		default: "0",
		category: 5,
		help: "Enable Steelseries World of Warcraft Mouse",
	},
	enginesurvey: {
		name: "engineSurvey",
		default: "0",
		category: 4,
		help: "Whether to send the engine survey to the servers",
	},
	enginesurveypatch: {
		name: "engineSurveyPatch",
		default: "0",
		category: 4,
		help: "Engine Survey Patch",
	},
	entityloddist: {
		name: "entityLodDist",
		default: "10",
		category: 1,
		help: "Entity level of detail distance",
	},
	entitylodoffset: {
		name: "entityLodOffset",
		default: "10",
		category: 1,
		help: "Entity level of detail offset",
	},
	entityshadowfadescale: {
		name: "entityShadowFadeScale",
		default: "50",
		category: 1,
		help: "Entity shadow fade scale",
	},
	excludedcensorsources: {
		name: "excludedCensorSources",
		default: "1",
		category: 4,
		scope: "Character",
		help: "Inappropriate message source exemptions. 0 = Exempt nobody, 1 = Exempt Friends, 3 = Exempt Friends and Guildmates, 255 = Exempt All",
	},
	expandbagbar: {
		name: "expandBagBar",
		default: "1",
		category: 4,
		scope: "Character",
		help: "Expand the main menu bar that shows the bags so you can see all equipped bags instead of just the backpack and reagent bag",
	},
	expandupgradepanel: {
		name: "expandUpgradePanel",
		default: "1",
		category: 4,
		help: "Controls whether the upgrade panel is expanded or collapsed.",
	},
	expandwarbandcharacterlist: {
		name: "expandWarbandCharacterList",
		default: "1",
		category: 4,
		scope: "Character",
		help: "Stores if the warband character list is expanded or collapsed.",
	},
	farclip: {
		name: "farclip",
		default: "1000",
		category: 5,
		help: "Far clip plane distance",
	},
	ffxantialiasingmode: {
		name: "ffxAntiAliasingMode",
		default: "0",
		category: 1,
		help: "Anti Aliasing Mode",
	},
	ffxdeath: {
		name: "ffxDeath",
		default: "1",
		category: 1,
		help: "full screen death desat effect",
	},
	ffxglow: {
		name: "ffxGlow",
		default: "1",
		category: 1,
		help: "full screen glow effect",
	},
	ffxlingeringvenari: {
		name: "ffxLingeringVenari",
		default: "1",
		category: 1,
		help: "full screen Lingering Cloak of Ven'ari effect",
	},
	ffxnether: {
		name: "ffxNether",
		default: "1",
		category: 1,
		help: "full screen nether effect",
	},
	ffxvenari: {
		name: "ffxVenari",
		default: "1",
		category: 1,
		help: "full screen Cloak of Ven'ari effect",
	},
	findyourselfanywhere: {
		name: "findYourselfAnywhere",
		default: "0",
		category: 4,
		scope: "Character",
		help: "Always Highlight your character",
	},
	findyourselfanywhereonlyincombat: {
		name: "findYourselfAnywhereOnlyInCombat",
		default: "0",
		category: 4,
		scope: "Character",
		help: "Highlight your character only when in combat",
	},
	findyourselfinbg: {
		name: "findYourselfInBG",
		default: "1",
		category: 4,
		scope: "Character",
		help: "Always Highlight your character in Battlegrounds",
	},
	findyourselfinbgonlyincombat: {
		name: "findYourselfInBGOnlyInCombat",
		default: "0",
		category: 4,
		scope: "Character",
		help: "Highlight your character in Battlegrounds only when in combat",
	},
	findyourselfinraid: {
		name: "findYourselfInRaid",
		default: "1",
		category: 4,
		scope: "Character",
		help: "Always Highlight your character in Raids",
	},
	findyourselfinraidonlyincombat: {
		name: "findYourselfInRaidOnlyInCombat",
		default: "1",
		category: 4,
		scope: "Character",
		help: "Highlight your character in Raids only when in combat",
	},
	findyourselfmode: {
		name: "findYourselfMode",
		default: "0",
		category: 4,
		scope: "Character",
		help: "Highlight your character. 0 = circle, 1 = circle & outline, 2 = outline",
	},
	findyourselfmodecircle: {
		name: "findYourselfModeCircle",
		default: "0",
		category: 4,
		scope: "Character",
		help: "Highlight your character with a circle.",
	},
	findyourselfmodeicon: {
		name: "findYourselfModeIcon",
		default: "0",
		category: 4,
		scope: "Character",
		help: "Highlight your character with an icon.",
	},
	findyourselfmodeoutline: {
		name: "findYourselfModeOutline",
		default: "0",
		category: 4,
		scope: "Character",
		help: "Highlight your character with an outline.",
	},
	flaggedtutorials: {
		name: "flaggedTutorials",
		default: "",
		category: 5,
		scope: "Character",
		help: "Internal cvar for saving completed tutorials in order",
	},
	flasherrormessagerepeats: {
		name: "flashErrorMessageRepeats",
		default: "1",
		category: 4,
		scope: "Character",
		help: "Flashes the center screen red error text if the same message is fired.",
	},
	flightanglelookahead: {
		name: "flightAngleLookAhead",
		default: "0",
		category: 4,
		help: "Enables more dynamic attitude adjustments while flying",
	},
	floatingcombattextallspellmechanics: {
		name: "floatingCombatTextAllSpellMechanics",
		default: "0",
		category: 4,
		scope: "Character",
	},
	floatingcombattextauras: {
		name: "floatingCombatTextAuras",
		default: "0",
		category: 4,
		scope: "Character",
	},
	floatingcombattextcombatdamage: {
		name: "floatingCombatTextCombatDamage",
		default: "1",
		category: 4,
		scope: "Character",
		help: "Display damage numbers over hostile creatures when damaged",
	},
	floatingcombattextcombatdamageallautos: {
		name: "floatingCombatTextCombatDamageAllAutos",
		default: "1",
		category: 4,
		scope: "Character",
		help: "Show all auto-attack numbers, rather than hiding non-event numbers",
	},
	floatingcombattextcombatdamagedirectionaloffset: {
		name: "floatingCombatTextCombatDamageDirectionalOffset",
		default: "1",
		category: 4,
		scope: "Character",
		help: "Amount to offset directional damage numbers when they start",
	},
	floatingcombattextcombatdamagedirectionalscale: {
		name: "floatingCombatTextCombatDamageDirectionalScale",
		default: "1",
		category: 4,
		scope: "Character",
		help: "Directional damage numbers movement scale (0 = no directional numbers)",
	},
	floatingcombattextcombatdamagestyle: {
		name: "floatingCombatTextCombatDamageStyle",
		default: "1",
		category: 4,
		scope: "Character",
		help: "No longer used",
	},
	floatingcombattextcombathealing: {
		name: "floatingCombatTextCombatHealing",
		default: "1",
		category: 4,
		scope: "Character",
		help: "Display amount of healing you did to the target",
	},
	floatingcombattextcombathealingabsorbself: {
		name: "floatingCombatTextCombatHealingAbsorbSelf",
		default: "1",
		category: 4,
		scope: "Character",
		help: "Shows a message when you gain a shield.",
	},
	floatingcombattextcombathealingabsorbtarget: {
		name: "floatingCombatTextCombatHealingAbsorbTarget",
		default: "1",
		category: 4,
		scope: "Character",
		help: "Display amount of shield added to the target.",
	},
	floatingcombattextcombatlogperiodicspells: {
		name: "floatingCombatTextCombatLogPeriodicSpells",
		default: "1",
		category: 4,
		scope: "Character",
		help: "Display damage caused by periodic effects",
	},
	floatingcombattextcombatstate: {
		name: "floatingCombatTextCombatState",
		default: "0",
		category: 4,
		scope: "Character",
	},
	floatingcombattextcombopoints: {
		name: "floatingCombatTextComboPoints",
		default: "0",
		category: 4,
		scope: "Character",
	},
	floatingcombattextdamagereduction: {
		name: "floatingCombatTextDamageReduction",
		default: "0",
		category: 4,
		scope: "Character",
	},
	floatingcombattextdodgeparrymiss: {
		name: "floatingCombatTextDodgeParryMiss",
		default: "0",
		category: 4,
		scope: "Character",
	},
	floatingcombattextenergygains: {
		name: "floatingCombatTextEnergyGains",
		default: "0",
		category: 4,
		scope: "Character",
	},
	floatingcombattextfloatmode: {
		name: "floatingCombatTextFloatMode",
		default: "1",
		category: 4,
		scope: "Character",
		help: "The combat text float mode",
	},
	floatingcombattextfriendlyhealers: {
		name: "floatingCombatTextFriendlyHealers",
		default: "0",
		category: 4,
		scope: "Character",
	},
	floatingcombattexthonorgains: {
		name: "floatingCombatTextHonorGains",
		default: "0",
		category: 4,
		scope: "Character",
	},
	floatingcombattextlowmanahealth: {
		name: "floatingCombatTextLowManaHealth",
		default: "1",
		category: 4,
		scope: "Character",
	},
	floatingcombattextperiodicenergygains: {
		name: "floatingCombatTextPeriodicEnergyGains",
		default: "0",
		category: 4,
		scope: "Character",
	},
	floatingcombattextpetmeleedamage: {
		name: "floatingCombatTextPetMeleeDamage",
		default: "1",
		category: 4,
		scope: "Character",
		help: "Display pet melee damage in the world",
	},
	floatingcombattextpetspelldamage: {
		name: "floatingCombatTextPetSpellDamage",
		default: "1",
		category: 4,
		scope: "Character",
		help: "Display pet spell damage in the world",
	},
	floatingcombattextreactives: {
		name: "floatingCombatTextReactives",
		default: "1",
		category: 4,
		scope: "Character",
	},
	floatingcombattextrepchanges: {
		name: "floatingCombatTextRepChanges",
		default: "0",
		category: 4,
		scope: "Character",
	},
	floatingcombattextspellmechanics: {
		name: "floatingCombatTextSpellMechanics",
		default: "0",
		category: 4,
		scope: "Character",
	},
	floatingcombattextspellmechanicsother: {
		name: "floatingCombatTextSpellMechanicsOther",
		default: "0",
		category: 4,
		scope: "Character",
	},
	forceclusteredshading: {
		name: "forceClusteredShading",
		default: "0",
		category: 1,
		help: "Force clustered forward lighting for all transparent objects",
	},
	forceenglishnames: {
		name: "forceEnglishNames",
		default: "0",
		category: 5,
	},
	forcelodcheck: {
		name: "forceLODCheck",
		default: "0",
		category: 1,
		help: "If enabled, we will skip checking DBC for LOD count and every m2 will scan the folder for skin profiles",
	},
	friendinvitescollapsed: {
		name: "friendInvitesCollapsed",
		default: "0",
		category: 4,
		scope: "Character",
		help: "Whether friend invites are hidden in the friends list",
	},
	friendinvitescollapsed_wowlabs: {
		name: "friendInvitesCollapsed_WowLabs",
		default: "0",
		category: 4,
		help: "The info for pending invites has been shown",
	},
	friendssmallview: {
		name: "friendsSmallView",
		default: "0",
		category: 4,
		scope: "Account",
		help: "Whether to use smaller buttons in the friends list",
	},
	friendsviewbuttons: {
		name: "friendsViewButtons",
		default: "0",
		category: 4,
		scope: "Account",
		help: "Whether to show the friends list view buttons",
	},
	frontendmatchingmodes_wowlabs: {
		name: "frontendMatchingModes_WowLabs",
		default: "1",
		category: 4,
		help: "0=All,1=DuoOnly,2=TrioOnly,3=DuoAndTrio",
	},
	fstack_enabled: {
		name: "fstack_enabled",
		default: "0",
		category: 0,
		help: "0: Hide Framestack Tooltip (Default), 1: Show Framestack Tooltip.",
	},
	fstack_preferparentkeys: {
		name: "fstack_preferParentKeys",
		default: "0",
		category: 0,
		help: "0: Prefer Global Names, 1: Prefer ParentKeys (Default).",
	},
	fstack_showraisedframelevels: {
		name: "fstack_showRaisedFrameLevels",
		default: "0",
		category: 0,
		help: "0: Show normal frame levels (default), 1: Show raised frame levels instead",
	},
	fstack_showanchors: {
		name: "fstack_showanchors",
		default: "1",
		category: 0,
		help: "0: Hide Anchors, 1: Show Anchors (Default).",
	},
	fstack_showhidden: {
		name: "fstack_showhidden",
		default: "0",
		category: 0,
		help: "0: Hide Hidden (Default), 1: Show Hidden.",
	},
	fstack_showhighlight: {
		name: "fstack_showhighlight",
		default: "1",
		category: 0,
		help: "0: Hide Highlight, 1: Show Highlight (Default).",
	},
	fstack_showregions: {
		name: "fstack_showregions",
		default: "1",
		category: 0,
		help: "0: Hide Regions, 1: Show Regions (Default).",
	},
	gametip: {
		name: "gameTip",
		default: "0",
		category: 5,
	},
	garrisoncompletetalent: {
		name: "garrisonCompleteTalent",
		default: "0",
		category: 4,
		scope: "Account",
		secure: true,
	},
	garrisoncompletetalenttype: {
		name: "garrisonCompleteTalentType",
		default: "0",
		category: 4,
		scope: "Account",
		secure: true,
	},
	graphicscomputeeffects: {
		name: "graphicsComputeEffects",
		default: "3",
		category: 5,
	},
	graphicsdeptheffects: {
		name: "graphicsDepthEffects",
		default: "3",
		category: 1,
		help: "UI value of the graphics setting",
	},
	graphicsenvironmentdetail: {
		name: "graphicsEnvironmentDetail",
		default: "6",
		category: 1,
		help: "UI value of the graphics setting",
	},
	graphicsgroundclutter: {
		name: "graphicsGroundClutter",
		default: "6",
		category: 1,
		help: "UI value of the graphics setting",
	},
	graphicsliquiddetail: {
		name: "graphicsLiquidDetail",
		default: "2",
		category: 1,
		help: "UI value of the graphics setting",
	},
	graphicsoutlinemode: {
		name: "graphicsOutlineMode",
		default: "2",
		category: 1,
		help: "UI value of the graphics setting",
	},
	graphicsparticledensity: {
		name: "graphicsParticleDensity",
		default: "4",
		category: 1,
		help: "UI value of the graphics setting",
	},
	graphicsprojectedtextures: {
		name: "graphicsProjectedTextures",
		default: "1",
		category: 1,
		help: "UI value of the graphics setting",
	},
	graphicsquality: {
		name: "graphicsQuality",
		default: "6",
		category: 5,
		help: "save for Graphics Quality Selection",
	},
	graphicsssao: {
		name: "graphicsSSAO",
		default: "3",
		category: 5,
		help: "UI value of the graphics setting",
	},
	graphicsshadowquality: {
		name: "graphicsShadowQuality",
		default: "3",
		category: 5,
		help: "UI value of the graphics setting",
	},
	graphicsspelldensity: {
		name: "graphicsSpellDensity",
		default: "4",
		category: 5,
		help: "UI value of the graphics setting",
	},
	graphicstextureresolution: {
		name: "graphicsTextureResolution",
		default: "2",
		category: 5,
		help: "UI value of the graphics setting",
	},
	graphicsviewdistance: {
		name: "graphicsViewDistance",
		default: "6",
		category: 1,
		help: "UI value of the graphics setting",
	},
	groundeffectdensity: {
		name: "groundEffectDensity",
		default: "16",
		category: 1,
		help: "Ground effect density",
	},
	groundeffectdist: {
		name: "groundEffectDist",
		default: "70",
		category: 5,
		help: "Ground effect dist",
	},
	groundeffectfade: {
		name: "groundEffectFade",
		default: "70",
		category: 1,
		help: "Ground effect fade",
	},
	guildmembernotify: {
		name: "guildMemberNotify",
		default: "1",
		category: 4,
		scope: "Character",
		help: "Receive notification when guild members log on/off",
	},
	guildnewsfilter: {
		name: "guildNewsFilter",
		default: "0",
		category: 4,
		scope: "Account",
		help: "Stores the guild news filters",
	},
	guildrewardscategory: {
		name: "guildRewardsCategory",
		default: "0",
		category: 4,
		scope: "Account",
		help: "Show category of guild rewards",
	},
	guildrewardsusable: {
		name: "guildRewardsUsable",
		default: "0",
		category: 4,
		scope: "Account",
		help: "Show usable guild rewards only",
	},
	guildrosterview: {
		name: "guildRosterView",
		default: "",
		category: 4,
		scope: "Account",
		help: "The current guild roster display mode",
	},
	guildshowoffline: {
		name: "guildShowOffline",
		default: "1",
		category: 4,
		scope: "Character",
		help: "Show offline guild members in the guild UI",
	},
	gxmtalpham2: {
		name: "gxMTAlphaM2",
		default: "1",
		category: 1,
		help: "Render transparent M2 pass in parallel.",
	},
	gxmtalphapass: {
		name: "gxMTAlphaPass",
		default: "1",
		category: 1,
		help: "Render Alpha Pass in parallel.",
	},
	gxmtbegindraw: {
		name: "gxMTBeginDraw",
		default: "1",
		category: 1,
		help: "Do BeginDraw multithreaded.",
	},
	gxmtdecals: {
		name: "gxMTDecals",
		default: "0",
		category: 1,
		help: "Sort and Render decal passes in parallel. Note enabling this currently will cause visual artifacts in some cases.",
	},
	gxmtdisable: {
		name: "gxMTDisable",
		default: "0",
		category: 1,
		help: "Disable all render multithreading",
	},
	gxmtmisc: {
		name: "gxMTMisc",
		default: "1",
		category: 1,
		help: "Render miscelleous passes in parallel",
	},
	gxmtopaquem2: {
		name: "gxMTOpaqueM2",
		default: "1",
		category: 1,
		help: "Render opaque model pass in parallel.",
	},
	gxmtopaquem2noreflect: {
		name: "gxMTOpaqueM2NoReflect",
		default: "1",
		category: 1,
		help: "Render opaque model no reflection pass in parallel.",
	},
	gxmtopaquewmo: {
		name: "gxMTOpaqueWMO",
		default: "1",
		category: 1,
		help: "Render opaque WMO in parallel.",
	},
	gxmtoutlines: {
		name: "gxMTOutlines",
		default: "1",
		category: 1,
		help: "Render outline passes in parallel",
	},
	gxmtprepass: {
		name: "gxMTPrepass",
		default: "1",
		category: 1,
		help: "Render prepass in parallel.",
	},
	gxmtrefraction: {
		name: "gxMTRefraction",
		default: "1",
		category: 1,
		help: "Render refraction pass in parallel",
	},
	gxmtshadow: {
		name: "gxMTShadow",
		default: "1",
		category: 1,
		help: "Render shadow bands in parallel.",
	},
	gxmtterrain: {
		name: "gxMTTerrain",
		default: "1",
		category: 1,
		help: "Render terrain in parallel.",
	},
	gxmttriggeronbegindrawcomplete: {
		name: "gxMTTriggerOnBeginDrawComplete",
		default: "1",
		category: 1,
		help: "Use Begin Draw Complete Trigger Mechanism",
	},
	gxmtvolfog: {
		name: "gxMTVolFog",
		default: "1",
		category: 1,
		help: "Render volumetric fog in parallel",
	},
	gxmaximize: {
		name: "gxMaximize",
		default: "1",
		category: 5,
	},
	hardtrackedquests: {
		name: "hardTrackedQuests",
		default: "",
		category: 4,
		scope: "Account",
		help: "Internal cvar for saving user manually tracked quests in order",
	},
	hardtrackedworldquests: {
		name: "hardTrackedWorldQuests",
		default: "",
		category: 4,
		scope: "Account",
		help: "Internal cvar for saving user manually tracked world quests",
	},
	heirloomcollectedfilters: {
		name: "heirloomCollectedFilters",
		default: "0",
		category: 4,
		scope: "Character",
		help: "Bitfield for which collected filters are applied in the heirloom journal",
	},
	heirloomsourcefilters: {
		name: "heirloomSourceFilters",
		default: "0",
		category: 4,
		scope: "Character",
		help: "Bitfield for which source filters are applied in the heirloom journal",
	},
	herotalentscollapse: {
		name: "heroTalentsCollapse",
		default: "0",
		category: 4,
		scope: "Character",
		help: "Whether to show the Hero Talents in the Talent Frame as collapsed",
	},
	hideadventurejournalalerts: {
		name: "hideAdventureJournalAlerts",
		default: "0",
		category: 4,
		scope: "Character",
		help: "Hide alerts shown on the Adventure Journal Microbutton",
	},
	horizonclip: {
		name: "horizonClip",
		default: "1600",
		category: 5,
	},
	horizonstart: {
		name: "horizonStart",
		default: "800",
		category: 5,
		help: "Horizon start distance",
	},
	hotreloadmodels: {
		name: "hotReloadModels",
		default: "1",
		category: 1,
		help: "Allow an active model to be reloaded when a new version is detected in the bin folder.  If this is disabled, the model data will only be refreshed after all game objects using the model are deleted",
	},
	hwdetect: {
		name: "hwDetect",
		default: "1",
		category: 1,
		help: "do hardware detection",
	},
	incompletequestprioritythresholddelta: {
		name: "incompleteQuestPriorityThresholdDelta",
		default: "135",
		category: 0,
	},
	initialrealmlisttimeout: {
		name: "initialRealmListTimeout",
		default: "60",
		category: 5,
		help: "How long to wait for the initial realm list before failing login (in seconds)",
	},
	interactkeywarningtutorial: {
		name: "interactKeyWarningTutorial",
		default: "0",
		category: 4,
		help: "Has the player seen the interact key warning tutorial since they have logged in",
	},
	interactonleftclick: {
		name: "interactOnLeftClick",
		default: "1",
		category: 4,
		scope: "Character",
		help: "Test CVar for interacting with NPC's on left click",
	},
	interactquestitems: {
		name: "interactQuestItems",
		default: "1",
		category: 4,
		scope: "Character",
		help: "Enable Quest Item use as an interaction",
	},
	lastaddonversion: {
		name: "lastAddonVersion",
		default: "0",
		category: 4,
		help: "Addon interface version number from previous build",
	},
	lastcharacterguid: {
		name: "lastCharacterGuid",
		default: "0",
		category: 4,
		help: "Last character selected's guid",
	},
	lastcharacterindex: {
		name: "lastCharacterIndex",
		default: "0",
		category: 4,
		help: "Last character selected",
	},
	lastgarrisonmissiontutorial: {
		name: "lastGarrisonMissionTutorial",
		default: "0",
		category: 4,
		scope: "Account",
		help: "Stores the last garrison mission tutorial the player has accepted",
	},
	lastlockeddelvescompanionabilities: {
		name: "lastLockedDelvesCompanionAbilities",
		default: "",
		category: 4,
		scope: "Character",
		help: "Stores the nodeIDs of the locked delve companion abilities, to highlight them when unlocked.",
	},
	lastrenownforcovenant1: {
		name: "lastRenownForCovenant1",
		default: "0",
		category: 4,
		scope: "Account",
		help: "Stores the Kyrian renown when Renown UI is closed",
	},
	lastrenownforcovenant2: {
		name: "lastRenownForCovenant2",
		default: "0",
		category: 4,
		scope: "Account",
		help: "Stores the Venthyr renown when Renown UI is closed",
	},
	lastrenownforcovenant3: {
		name: "lastRenownForCovenant3",
		default: "0",
		category: 4,
		scope: "Account",
		help: "Stores the NightFae renown when Renown UI is closed",
	},
	lastrenownforcovenant4: {
		name: "lastRenownForCovenant4",
		default: "0",
		category: 4,
		scope: "Account",
		help: "Stores the Necrolord renown when Renown UI is closed",
	},
	lastrenownfordelvesseason: {
		name: "lastRenownForDelvesSeason",
		default: "0",
		category: 4,
		scope: "Character",
		help: "Stores the Delves Season faction renown when Renown UI is closed",
	},
	lastrenownformajorfaction2503: {
		name: "lastRenownForMajorFaction2503",
		default: "0",
		category: 4,
		scope: "Character",
		help: "Stores the Maruuk Centaur renown when Renown UI is closed",
	},
	lastrenownformajorfaction2507: {
		name: "lastRenownForMajorFaction2507",
		default: "0",
		category: 4,
		scope: "Character",
		help: "Stores the Dragonscale Expedition renown when Renown UI is closed",
	},
	lastrenownformajorfaction2510: {
		name: "lastRenownForMajorFaction2510",
		default: "0",
		category: 4,
		scope: "Character",
		help: "Stores the Valdrakken Accord renown when Renown UI is closed",
	},
	lastrenownformajorfaction2511: {
		name: "lastRenownForMajorFaction2511",
		default: "0",
		category: 4,
		scope: "Character",
		help: "Stores the Iskaara Tuskarr renown when Renown UI is closed",
	},
	lastrenownformajorfaction2564: {
		name: "lastRenownForMajorFaction2564",
		default: "0",
		category: 4,
		scope: "Character",
		help: "Stores the Loamm Niffen renown when Renown UI is closed",
	},
	lastrenownformajorfaction2570: {
		name: "lastRenownForMajorFaction2570",
		default: "0",
		category: 4,
		scope: "Character",
		help: "Stores the Hallowfall Arathi renown when Renown UI is closed",
	},
	lastrenownformajorfaction2574: {
		name: "lastRenownForMajorFaction2574",
		default: "0",
		category: 4,
		scope: "Character",
		help: "Stores the Dream Warden renown when Renown UI is closed",
	},
	lastrenownformajorfaction2590: {
		name: "lastRenownForMajorFaction2590",
		default: "0",
		category: 4,
		scope: "Character",
		help: "Stores the Council of Dornogal renown when Renown UI is closed",
	},
	lastrenownformajorfaction2593: {
		name: "lastRenownForMajorFaction2593",
		default: "0",
		category: 4,
		scope: "Character",
		help: "Stores the Keg Leg's Crew renown when Renown UI is closed",
	},
	lastrenownformajorfaction2594: {
		name: "lastRenownForMajorFaction2594",
		default: "0",
		category: 4,
		scope: "Character",
		help: "Stores the Assembly of the Deeps renown when Renown UI is closed",
	},
	lastrenownformajorfaction2600: {
		name: "lastRenownForMajorFaction2600",
		default: "0",
		category: 4,
		scope: "Character",
		help: "Stores the Severed Threads renown when Renown UI is closed",
	},
	lastselectedclubid: {
		name: "lastSelectedClubId",
		default: "0",
		category: 4,
		scope: "Account",
		help: "The last club that was selected by the user. We default to this club when the player opens the communities frame if the player isn't in a guild.",
	},
	lastselecteddelvestier: {
		name: "lastSelectedDelvesTier",
		default: "0",
		category: 4,
		scope: "Character",
		help: "Stores the last selected delve difficulty tier. If 0, the player will be forced to select a tier.",
	},
	lasttalkedtogm: {
		name: "lastTalkedToGM",
		default: "",
		category: 4,
		scope: "Character",
		help: "Stores the last GM someone was talking to in case they reload the UI while the GM chat window is open.",
	},
	lasttransmogoutfitidspec1: {
		name: "lastTransmogOutfitIDSpec1",
		default: "",
		category: 4,
		scope: "Account",
		help: "SetID of the last applied transmog outfit for the 1st spec",
	},
	lasttransmogoutfitidspec2: {
		name: "lastTransmogOutfitIDSpec2",
		default: "",
		category: 4,
		scope: "Account",
		help: "SetID of the last applied transmog outfit for the 2nd spec",
	},
	lasttransmogoutfitidspec3: {
		name: "lastTransmogOutfitIDSpec3",
		default: "",
		category: 4,
		scope: "Account",
		help: "SetID of the last applied transmog outfit for the 3rd spec",
	},
	lasttransmogoutfitidspec4: {
		name: "lastTransmogOutfitIDSpec4",
		default: "",
		category: 4,
		scope: "Account",
		help: "SetID of the last applied transmog outfit for the 4th spec",
	},
	lastvoidstoragetutorial: {
		name: "lastVoidStorageTutorial",
		default: "0",
		category: 4,
		scope: "Account",
		help: "Stores the last void storage tutorial the player has accepted",
	},
	last_matchmaking_party_size: {
		name: "last_matchmaking_party_size",
		default: "0",
		category: 4,
		help: "0=Solo,1=Duo,2=Trio",
	},
	latestsplashscreen: {
		name: "latestSplashScreen",
		default: "0",
		category: 4,
		scope: "Account",
		secure: true,
		help: "The ID of the latest splash screen from the UISPLASHSCREEN table.",
	},
	latesttransmogsetsource: {
		name: "latestTransmogSetSource",
		default: "0",
		category: 4,
		scope: "Account",
		help: "itemModifiedAppearanceID of the latest collected source belonging to a set",
	},
	launchagent: {
		name: "launchAgent",
		default: "1",
		category: 4,
		help: "Set this to have the client start up Agent",
	},
	lfguildcomment: {
		name: "lfGuildComment",
		default: "",
		category: 4,
		scope: "Account",
		help: "Stores the player's Looking For Guild comment",
	},
	lfguildsettings: {
		name: "lfGuildSettings",
		default: "1",
		category: 4,
		scope: "Account",
		help: "Bit field of Looking For Guild player settings",
	},
	lfdcollapsedheaders: {
		name: "lfdCollapsedHeaders",
		default: "",
		category: 4,
		scope: "Account",
		help: "Stores which LFD headers are collapsed.",
	},
	lfdselecteddungeons: {
		name: "lfdSelectedDungeons",
		default: "",
		category: 4,
		scope: "Account",
		help: "Stores which LFD dungeons are selected.",
	},
	lfgautofill: {
		name: "lfgAutoFill",
		default: "0",
		category: 4,
		scope: "Character",
		help: "Whether to automatically add party members while looking for a group",
	},
	lfgautojoin: {
		name: "lfgAutoJoin",
		default: "0",
		category: 4,
		scope: "Character",
		help: "Whether to automatically join a party while looking for a group",
	},
	lfglistadvancedfilterminrating: {
		name: "lfgListAdvancedFilterMinRating",
		default: "0",
		category: 4,
		scope: "Character",
		help: "Minimum mythic plus rating of the leader of the group to find",
	},
	lfglistadvancedfilters: {
		name: "lfgListAdvancedFilters",
		default: "0",
		category: 4,
		scope: "Character",
		help: "Advanced LFG filters for dungeons that are booleans",
	},
	lfglistadvancedfiltersactivities: {
		name: "lfgListAdvancedFiltersActivities",
		default: "",
		category: 4,
		scope: "Character",
		help: "list of activity IDs to filter for",
	},
	lfglistsearchlanguages: {
		name: "lfgListSearchLanguages",
		default: "0",
		category: 4,
		scope: "Character",
		help: "A simple bitfield for what languages we want to search in.",
	},
	lfgselectedroles: {
		name: "lfgSelectedRoles",
		default: "0",
		category: 4,
		scope: "Account",
		help: "Stores what roles the player is willing to take on.",
	},
	loaddeprecationfallbacks: {
		name: "loadDeprecationFallbacks",
		default: "1",
		category: 4,
		secure: true,
		help: "When enabled, Deprecation_* addons are loaded to provide fallbacks for deprecated script APIs.",
	},
	locale: {
		name: "locale",
		default: "",
		category: 5,
		help: "Set the game locale",
	},
	locateviewermaxjobs: {
		name: "locateViewerMaxJobs",
		default: "32",
		category: 1,
		help: "Maximum job threads for LocateViewer",
	},
	lockactionbars: {
		name: "lockActionBars",
		default: "1",
		category: 4,
		scope: "Character",
		help: "Whether the action bars should be locked, preventing changes",
	},
	lodobjectculldist: {
		name: "lodObjectCullDist",
		default: "30",
		category: 1,
		help: "Lod object culling dist minimum",
	},
	lodobjectcullsize: {
		name: "lodObjectCullSize",
		default: "15",
		category: 5,
		help: "Lod object culling size",
	},
	lodobjectfadescale: {
		name: "lodObjectFadeScale",
		default: "100",
		category: 1,
		help: "Lod object fade scale",
	},
	lodobjectminsize: {
		name: "lodObjectMinSize",
		default: "20",
		category: 1,
		help: "Lod object min size",
	},
	lodobjectsizescale: {
		name: "lodObjectSizeScale",
		default: "1",
		category: 1,
		help: "Scales all objects size for culling",
	},
	lootundermouse: {
		name: "lootUnderMouse",
		default: "1",
		category: 4,
		scope: "Character",
		help: "Whether the loot window should open under the mouse",
	},
	lossofcontrol: {
		name: "lossOfControl",
		default: "1",
		category: 4,
		scope: "Account",
		help: "Enables loss of control spell banner",
	},
	lossofcontroldisarm: {
		name: "lossOfControlDisarm",
		default: "2",
		category: 4,
		scope: "Account",
		help: "Setting for Loss of Control - Disarm",
	},
	lossofcontrolfull: {
		name: "lossOfControlFull",
		default: "2",
		category: 4,
		scope: "Account",
		help: "Setting for Loss of Control - Full Loss",
	},
	lossofcontrolinterrupt: {
		name: "lossOfControlInterrupt",
		default: "2",
		category: 4,
		scope: "Account",
		help: "Setting for Loss of Control - Interrupt",
	},
	lossofcontrolroot: {
		name: "lossOfControlRoot",
		default: "2",
		category: 4,
		scope: "Account",
		help: "Setting for Loss of Control - Root",
	},
	lossofcontrolsilence: {
		name: "lossOfControlSilence",
		default: "2",
		category: 4,
		scope: "Account",
		help: "Setting for Loss of Control - Silence",
	},
	luaerrorexceptions: {
		name: "luaErrorExceptions",
		default: "1",
		category: 4,
		help: "Enable exceptions for non-tainted lua errors",
	},
	mapanimduration: {
		name: "mapAnimDuration",
		default: "0.12",
		category: 4,
		scope: "Character",
		help: "Duration for the alpha animation",
	},
	mapanimminalpha: {
		name: "mapAnimMinAlpha",
		default: "0.35",
		category: 4,
		scope: "Character",
		help: "Alpha value to animate to when player moves with windowed world map open",
	},
	mapanimstartdelay: {
		name: "mapAnimStartDelay",
		default: "0.0",
		category: 4,
		scope: "Character",
		help: "Start delay for the alpha animation",
	},
	mapfade: {
		name: "mapFade",
		default: "1",
		category: 4,
		scope: "Account",
		help: "Whether to fade out the world map when moving",
	},
	maxfps: {
		name: "maxFPS",
		default: "120",
		category: 1,
		help: "Set FPS limit. Min 8",
	},
	maxfpsbk: {
		name: "maxFPSBk",
		default: "30",
		category: 1,
		help: "Set background FPS limit. Min 8",
	},
	maxfpsloading: {
		name: "maxFPSLoading",
		default: "10",
		category: 1,
		help: "Set loading screen max FPS",
	},
	maxlevelspecsused: {
		name: "maxLevelSpecsUsed",
		default: "0",
		category: 4,
		scope: "Account",
		help: "The specs the player has switched to at max level",
	},
	maxlightcount: {
		name: "maxLightCount",
		default: "",
		category: 1,
		help: "Maximum lights to render",
	},
	maxlightdist: {
		name: "maxLightDist",
		default: "2048",
		category: 1,
		help: "Maximum distance to render lights",
	},
	minicommunitiesframe: {
		name: "miniCommunitiesFrame",
		default: "0",
		category: 4,
		scope: "Account",
		help: "Whether or not the communities frame has been toggled to smaller size",
	},
	minidressupframe: {
		name: "miniDressUpFrame",
		default: "0",
		category: 4,
		scope: "Account",
		help: "Whether or not the dress up has been toggled to smaller size",
	},
	miniworldmap: {
		name: "miniWorldMap",
		default: "1",
		category: 4,
		scope: "Account",
		help: "Whether or not the world map has been toggled to smaller size",
	},
	minimapaltitudehintmode: {
		name: "minimapAltitudeHintMode",
		default: "0",
		category: 4,
		help: "Change minimap altitude difference display. 0=none, 1=darken, 2=arrows",
	},
	minimapinsidezoom: {
		name: "minimapInsideZoom",
		default: "0",
		category: 4,
		scope: "Account",
		help: "The current indoor minimap zoom level",
	},
	minimapportalmax: {
		name: "minimapPortalMax",
		default: "99",
		category: 4,
		help: "Max Number of Portals to traverse for minimap",
	},
	minimapshapeshifttracking: {
		name: "minimapShapeshiftTracking",
		default: "",
		category: 4,
		scope: "Account",
		help: "Stores shapeshift-specific tracking spells that were active last session.",
	},
	minimapshowarchblobs: {
		name: "minimapShowArchBlobs",
		default: "1",
		category: 4,
		scope: "Account",
		help: "Stores whether to show the quest blobs on the minimap.",
	},
	minimapshowquestblobs: {
		name: "minimapShowQuestBlobs",
		default: "1",
		category: 4,
		scope: "Account",
		help: "Stores whether to show the quest blobs on the minimap.",
	},
	minimaptrackedinfov2: {
		name: "minimapTrackedInfov2",
		default: "",
		category: 5,
	},
	minimaptrackedinfov3: {
		name: "minimapTrackedInfov3",
		default: "1006319",
		category: 4,
		scope: "Account",
		help: "Stores the minimap tracking that was active last session.",
	},
	minimaptrackingclosestonly: {
		name: "minimapTrackingClosestOnly",
		default: "1",
		category: 4,
		help: "If enabled, show only the closest tracked icon for certain minimap icon types.",
	},
	minimaptrackingshowall: {
		name: "minimapTrackingShowAll",
		default: "0",
		category: 4,
		help: "If enabled, show dropdown for configuring all possible minimap tracking options.",
	},
	minimapzoom: {
		name: "minimapZoom",
		default: "0",
		category: 4,
		scope: "Account",
		help: "The current outdoor minimap zoom level",
	},
	missingtransmogsourceinitemtooltips: {
		name: "missingTransmogSourceInItemTooltips",
		default: "0",
		category: 4,
		scope: "Account",
		help: "Whether to show if you have collected the appearance of an item but not from that item itself",
	},
	motionsicknessfocalcircle: {
		name: "motionSicknessFocalCircle",
		default: "0",
		category: 4,
		scope: "Character",
		help: "Enables a focal circle showing up when mounted",
	},
	motionsicknesslandscapedarkening: {
		name: "motionSicknessLandscapeDarkening",
		default: "0",
		category: 4,
		scope: "Character",
		help: "Enables landscape darkening at higher speeds",
	},
	mountjournalgeneralfilters: {
		name: "mountJournalGeneralFilters",
		default: "",
		category: 4,
		scope: "Character",
		help: "Bitfield for which collected filters are applied in the mount journal",
	},
	mountjournalshowplayer: {
		name: "mountJournalShowPlayer",
		default: "0",
		category: 4,
		scope: "Character",
		help: "Show the player on the mount preview.",
	},
	mountjournalsourcesfilter: {
		name: "mountJournalSourcesFilter",
		default: "",
		category: 4,
		scope: "Character",
		help: "Bitfield for which source filters are applied in the mount journal",
	},
	mountjournaltypefilter: {
		name: "mountJournalTypeFilter",
		default: "",
		category: 4,
		scope: "Character",
		help: "Bitfield for which type filters are applied in the mount journal",
	},
	mouseacceleration: {
		name: "mouseAcceleration",
		default: "-1",
		category: 4,
		help: "-1: use desktop mouse acceleration, 0: disable mouse acceleration, 1: enable mouse acceleration",
	},
	mouseinvertpitch: {
		name: "mouseInvertPitch",
		default: "0",
		category: 4,
		scope: "Character",
	},
	mouseinvertyaw: {
		name: "mouseInvertYaw",
		default: "0",
		category: 4,
		scope: "Character",
	},
	mousespeed: {
		name: "mouseSpeed",
		default: "0.0",
		category: 4,
	},
	moviesubtitle: {
		name: "movieSubtitle",
		default: "1",
		category: 4,
		help: "Show movie subtitles",
	},
	nameplateclassresourcetopinset: {
		name: "nameplateClassResourceTopInset",
		default: ".03",
		category: 1,
		scope: "Account",
		secure: true,
		help: "The inset from the top (in screen percent) that nameplates are clamped to when class resources are being displayed on them.",
	},
	nameplategameobjectmaxdistance: {
		name: "nameplateGameObjectMaxDistance",
		default: "30",
		category: 1,
		scope: "Account",
		secure: true,
		help: "The max distance to show player nameplates for game objects",
	},
	nameplateglobalscale: {
		name: "nameplateGlobalScale",
		default: "1.0",
		category: 1,
		scope: "Account",
		secure: true,
		help: "Applies global scaling to non-self nameplates, this is applied AFTER selected, min, and max scale.",
	},
	nameplatehidehealthandpower: {
		name: "nameplateHideHealthAndPower",
		default: "0",
		category: 4,
		scope: "Account",
		secure: true,
	},
	nameplatelargebottominset: {
		name: "nameplateLargeBottomInset",
		default: "0.15",
		category: 1,
		scope: "Account",
		secure: true,
		help: "The inset from the bottom (in screen percent) that large nameplates are clamped to.",
	},
	nameplatelargetopinset: {
		name: "nameplateLargeTopInset",
		default: "0.1",
		category: 1,
		scope: "Account",
		secure: true,
		help: "The inset from the top (in screen percent) that large nameplates are clamped to.",
	},
	nameplatelargerscale: {
		name: "nameplateLargerScale",
		default: "1.2",
		category: 1,
		scope: "Account",
		secure: true,
		help: "An additional scale modifier for important monsters.",
	},
	nameplatemaxalpha: {
		name: "nameplateMaxAlpha",
		default: "1.0",
		category: 1,
		scope: "Account",
		secure: true,
		help: "The max alpha of nameplates.",
	},
	nameplatemaxalphadistance: {
		name: "nameplateMaxAlphaDistance",
		default: "40",
		category: 1,
		scope: "Account",
		secure: true,
		help: "The distance from the camera that nameplates will reach their maximum alpha.",
	},
	nameplatemaxdistance: {
		name: "nameplateMaxDistance",
		default: "60",
		category: 1,
		scope: "Account",
		secure: true,
		help: "The max distance to show nameplates.",
	},
	nameplatemaxscale: {
		name: "nameplateMaxScale",
		default: "1.0",
		category: 1,
		scope: "Account",
		secure: true,
		help: "The max scale of nameplates.",
	},
	nameplatemaxscaledistance: {
		name: "nameplateMaxScaleDistance",
		default: "10",
		category: 1,
		scope: "Account",
		secure: true,
		help: "The distance from the camera that nameplates will reach their maximum scale.",
	},
	nameplateminalpha: {
		name: "nameplateMinAlpha",
		default: "0.6",
		category: 1,
		scope: "Account",
		secure: true,
		help: "The minimum alpha of nameplates.",
	},
	nameplateminalphadistance: {
		name: "nameplateMinAlphaDistance",
		default: "10",
		category: 1,
		scope: "Account",
		secure: true,
		help: "The distance from the max distance that nameplates will reach their minimum alpha.",
	},
	nameplateminscale: {
		name: "nameplateMinScale",
		default: "0.8",
		category: 1,
		scope: "Account",
		secure: true,
		help: "The minimum scale of nameplates.",
	},
	nameplateminscaledistance: {
		name: "nameplateMinScaleDistance",
		default: "10",
		category: 1,
		scope: "Account",
		secure: true,
		help: "The distance from the max distance that nameplates will reach their minimum scale.",
	},
	nameplatemotion: {
		name: "nameplateMotion",
		default: "0",
		category: 1,
		scope: "Account",
		secure: true,
		help: "Defines the movement/collision model for nameplates",
	},
	nameplatemotionspeed: {
		name: "nameplateMotionSpeed",
		default: "0.025",
		category: 1,
		scope: "Account",
		secure: true,
		help: "Controls the rate at which nameplate animates into their target locations [0.0-1.0]",
	},
	nameplateoccludedalphamult: {
		name: "nameplateOccludedAlphaMult",
		default: "0.4",
		category: 1,
		scope: "Account",
		secure: true,
		help: "Alpha multiplier of nameplates for occluded targets.",
	},
	nameplateotheratbase: {
		name: "nameplateOtherAtBase",
		default: "0",
		category: 4,
		scope: "Character",
		secure: true,
		help: "Position other nameplates at the base, rather than overhead",
	},
	nameplateotherbottominset: {
		name: "nameplateOtherBottomInset",
		default: "0.1",
		category: 1,
		scope: "Account",
		secure: true,
		help: "The inset from the bottom (in screen percent) that the non-self nameplates are clamped to.",
	},
	nameplateothertopinset: {
		name: "nameplateOtherTopInset",
		default: "0.08",
		category: 1,
		scope: "Account",
		secure: true,
		help: "The inset from the top (in screen percent) that the non-self nameplates are clamped to.",
	},
	nameplateoverlaph: {
		name: "nameplateOverlapH",
		default: "0.8",
		category: 1,
		scope: "Character",
		secure: true,
		help: "Percentage amount for horizontal overlap of nameplates",
	},
	nameplateoverlapv: {
		name: "nameplateOverlapV",
		default: "1.1",
		category: 1,
		scope: "Character",
		secure: true,
		help: "Percentage amount for vertical overlap of nameplates",
	},
	nameplateplayerlargerscale: {
		name: "nameplatePlayerLargerScale",
		default: "1.8",
		category: 1,
		scope: "Account",
		secure: true,
		help: "An additional scale modifier for players.",
	},
	nameplateplayermaxdistance: {
		name: "nameplatePlayerMaxDistance",
		default: "60",
		category: 1,
		scope: "Account",
		secure: true,
		help: "The max distance to show player nameplates.",
	},
	nameplateresourceontarget: {
		name: "nameplateResourceOnTarget",
		default: "0",
		category: 4,
		scope: "Account",
		secure: true,
		help: "Nameplate class resource overlay mode. 0=self, 1=target",
	},
	nameplateselectedalpha: {
		name: "nameplateSelectedAlpha",
		default: "1.0",
		category: 1,
		scope: "Account",
		secure: true,
		help: "The alpha of the selected nameplate.",
	},
	nameplateselectedscale: {
		name: "nameplateSelectedScale",
		default: "1.2",
		category: 1,
		scope: "Account",
		secure: true,
		help: "The scale of the selected nameplate.",
	},
	nameplateselfalpha: {
		name: "nameplateSelfAlpha",
		default: "0.75",
		category: 1,
		scope: "Account",
		secure: true,
		help: "The alpha of the self nameplate.",
	},
	nameplateselfbottominset: {
		name: "nameplateSelfBottomInset",
		default: "0.2",
		category: 1,
		scope: "Account",
		secure: true,
		help: "The inset from the bottom (in screen percent) that the self nameplate is clamped to.",
	},
	nameplateselfscale: {
		name: "nameplateSelfScale",
		default: "1.0",
		category: 1,
		scope: "Account",
		secure: true,
		help: "The scale of the self nameplate.",
	},
	nameplateselftopinset: {
		name: "nameplateSelfTopInset",
		default: "0.5",
		category: 1,
		scope: "Account",
		secure: true,
		help: "The inset from the top (in screen percent) that the self nameplate is clamped to.",
	},
	nameplateshowall: {
		name: "nameplateShowAll",
		default: "0",
		category: 4,
		scope: "Account",
		secure: true,
	},
	nameplateshowdebuffsonfriendly: {
		name: "nameplateShowDebuffsOnFriendly",
		default: "1",
		category: 4,
		scope: "Account",
		secure: true,
	},
	nameplateshowenemies: {
		name: "nameplateShowEnemies",
		default: "1",
		category: 4,
		scope: "Account",
		secure: true,
	},
	nameplateshowenemyguardians: {
		name: "nameplateShowEnemyGuardians",
		default: "0",
		category: 4,
		scope: "Account",
		secure: true,
	},
	nameplateshowenemyminions: {
		name: "nameplateShowEnemyMinions",
		default: "0",
		category: 4,
		scope: "Account",
		secure: true,
	},
	nameplateshowenemyminus: {
		name: "nameplateShowEnemyMinus",
		default: "1",
		category: 4,
		scope: "Account",
		secure: true,
	},
	nameplateshowenemypets: {
		name: "nameplateShowEnemyPets",
		default: "0",
		category: 4,
		scope: "Account",
		secure: true,
	},
	nameplateshowenemytotems: {
		name: "nameplateShowEnemyTotems",
		default: "0",
		category: 4,
		scope: "Account",
		secure: true,
	},
	nameplateshowfriendlybuffs: {
		name: "nameplateShowFriendlyBuffs",
		default: "0",
		category: 4,
		scope: "Account",
		secure: true,
	},
	nameplateshowfriendlyguardians: {
		name: "nameplateShowFriendlyGuardians",
		default: "0",
		category: 4,
		scope: "Account",
		secure: true,
	},
	nameplateshowfriendlyminions: {
		name: "nameplateShowFriendlyMinions",
		default: "0",
		category: 4,
		scope: "Account",
		secure: true,
	},
	nameplateshowfriendlynpcs: {
		name: "nameplateShowFriendlyNPCs",
		default: "0",
		category: 4,
		scope: "Account",
		secure: true,
	},
	nameplateshowfriendlypets: {
		name: "nameplateShowFriendlyPets",
		default: "0",
		category: 4,
		scope: "Account",
		secure: true,
	},
	nameplateshowfriendlytotems: {
		name: "nameplateShowFriendlyTotems",
		default: "0",
		category: 4,
		scope: "Account",
		secure: true,
	},
	nameplateshowfriends: {
		name: "nameplateShowFriends",
		default: "0",
		category: 4,
		scope: "Account",
		secure: true,
	},
	nameplateshowonlynames: {
		name: "nameplateShowOnlyNames",
		default: "0",
		category: 4,
		help: "Whether to hide the nameplate bars",
	},
	nameplateshowpersonalcooldowns: {
		name: "nameplateShowPersonalCooldowns",
		default: "0",
		category: 4,
		scope: "Account",
		secure: true,
	},
	nameplateshowself: {
		name: "nameplateShowSelf",
		default: "1",
		category: 4,
		scope: "Account",
		secure: true,
	},
	nameplatetargetbehindmaxdistance: {
		name: "nameplateTargetBehindMaxDistance",
		default: "15",
		category: 1,
		scope: "Account",
		secure: true,
		help: "The max distance to show the target nameplate when the target is behind the camera.",
	},
	nameplatetargetradialposition: {
		name: "nameplateTargetRadialPosition",
		default: "0",
		category: 4,
		scope: "Character",
		secure: true,
		help: "When target is off screen, position its nameplate radially around sides and bottom. 1: Target Only. 2: All In Combat",
	},
	nearclip: {
		name: "nearclip",
		default: "0.2",
		category: 1,
		help: "Near clip plane distance",
	},
	newmythicplusseason: {
		name: "newMythicPlusSeason",
		default: "1",
		category: 4,
		scope: "Account",
		secure: true,
		help: "Signals a new mythic+ season for the user, so when they open the UI it shows them the info about the season",
	},
	newpvpseason: {
		name: "newPvpSeason",
		default: "1",
		category: 4,
		scope: "Account",
		secure: true,
		help: "Signals a new pvp season for the user, so when they open the UI it shows them the info about the season",
	},
	nobuffdebufffilterontarget: {
		name: "noBuffDebuffFilterOnTarget",
		default: "0",
		category: 4,
		scope: "Account",
		help: "Do not filter buffs or debuffs at all on targets",
	},
	notifiedofnewmail: {
		name: "notifiedOfNewMail",
		default: "0",
		category: 4,
		scope: "Account",
		help: "Stores whether the player has been previously notified of new mail. Only set to false once everything in their Inbox has been marked as read.",
	},
	numcurrencycategories: {
		name: "numCurrencyCategories",
		default: "0",
		category: 4,
		scope: "Account",
		help: "Stores the number of currency categories that existed the last time we logged in",
	},
	numreputationheaders: {
		name: "numReputationHeaders",
		default: "0",
		category: 4,
		scope: "Account",
		help: "Stores the number of reputation headers that existed the last time we logged in",
	},
	occludedsilhouetteplayer: {
		name: "occludedSilhouettePlayer",
		default: "0",
		category: 4,
		scope: "Character",
		help: "Show a silhouette of your character when obstructed",
	},
	occlusionmaxjobs: {
		name: "occlusionMaxJobs",
		default: "5",
		category: 1,
		help: "Maximum job threads for occlusion render",
	},
	orderhallmissiontutorial: {
		name: "orderHallMissionTutorial",
		default: "0",
		category: 4,
		scope: "Account",
		help: "Stores information about which order hall mission tutorials the player has seen",
	},
	otherrolesazeriteessenceshidden: {
		name: "otherRolesAzeriteEssencesHidden",
		default: "0",
		category: 4,
		scope: "Account",
		help: "Whether to collapse the Azerite Essences for player's other roles",
	},
	outdoorminaltitudedistance: {
		name: "outdoorMinAltitudeDistance",
		default: "10",
		category: 4,
		help: "Minimum altitude distance for outdoor objects when you are also outdoors before the altitude difference marker displays",
	},
	outlinemouseoverfadeduration: {
		name: "outlineMouseOverFadeDuration",
		default: "0.9",
		category: 0,
	},
	outlineselectionfadeduration: {
		name: "outlineSelectionFadeDuration",
		default: "0.32",
		category: 0,
	},
	outlinesoftinteractfadeduration: {
		name: "outlineSoftInteractFadeDuration",
		default: "0.3",
		category: 0,
	},
	overridearchive: {
		name: "overrideArchive",
		default: "0",
		category: 4,
		help: "Whether or not the client loads alternate data",
	},
	overridescreenflash: {
		name: "overrideScreenFlash",
		default: "0",
		category: 4,
		scope: "Character",
		help: "Overrides fade color options so that it always fades to black",
	},
	particledensity: {
		name: "particleDensity",
		default: "100",
		category: 1,
		help: "Particle density",
	},
	particlemtdensity: {
		name: "particleMTDensity",
		default: "100",
		category: 1,
		help: "Multi-Tex particle density",
	},
	particulatesenabled: {
		name: "particulatesEnabled",
		default: "1",
		category: 1,
		help: "Particulates enabled",
	},
	partybackgroundopacity: {
		name: "partyBackgroundOpacity",
		default: "0.5",
		category: 4,
		scope: "Character",
		help: "The opacity of the party background",
	},
	partyinvitescollapsed_glue: {
		name: "partyInvitesCollapsed_Glue",
		default: "0",
		category: 4,
		help: "The info for pending invites has been shown",
	},
	pathsmoothing: {
		name: "pathSmoothing",
		default: "1",
		category: 4,
		help: "NPC will round corners on ground paths",
	},
	pendinginviteinfoshown: {
		name: "pendingInviteInfoShown",
		default: "0",
		category: 4,
		scope: "Character",
		help: "The info for pending invites has been shown",
	},
	pendinginviteinfoshown_wowlabs: {
		name: "pendingInviteInfoShown_WowLabs",
		default: "0",
		category: 4,
		help: "The info for pending invites has been shown",
	},
	perksactivitiescurrentmonth: {
		name: "perksActivitiesCurrentMonth",
		default: "0",
		category: 4,
		scope: "Character",
		help: "Current month for perks activities",
	},
	perksactivitieslastpoints: {
		name: "perksActivitiesLastPoints",
		default: "0",
		category: 4,
		scope: "Character",
		help: "Last seen number of influence points in the perks progress bar",
	},
	perksactivitiespendingcompletion: {
		name: "perksActivitiesPendingCompletion",
		default: "",
		category: 4,
		scope: "Character",
		help: "List of completed activities that are pending completion animation in the UI",
	},
	persistmovelogontransfer: {
		name: "persistMoveLogOnTransfer",
		default: "0",
		category: 0,
		help: "Set to 1 to automatically re-enable logging on the current movelog target after a transfer",
	},
	petjournalfilters: {
		name: "petJournalFilters",
		default: "",
		category: 4,
		scope: "Character",
		help: "Bitfield for which collected filters are applied in the pet journal",
	},
	petjournalsort: {
		name: "petJournalSort",
		default: "0",
		category: 4,
		scope: "Character",
		help: "Sorting value for the pet journal",
	},
	petjournalsourcefilters: {
		name: "petJournalSourceFilters",
		default: "",
		category: 4,
		scope: "Character",
		help: "Bitfield for which source filters are applied in the pet journal",
	},
	petjournaltab: {
		name: "petJournalTab",
		default: "1",
		category: 4,
		scope: "Character",
		help: "Stores the last tab the pet journal was opened to",
	},
	petjournaltypefilters: {
		name: "petJournalTypeFilters",
		default: "",
		category: 4,
		scope: "Character",
		help: "Bitfield for which type filters are applied in the pet journal",
	},
	petstableshowexoticonly: {
		name: "petStableShowExoticOnly",
		default: "0",
		category: 4,
		scope: "Account",
		help: "Filter value for hunter pet stable. Will only show exotic pets in stable if true",
	},
	petstablesort: {
		name: "petStableSort",
		default: "1",
		category: 4,
		scope: "Account",
		help: "Sorting value for the hunter pet stable",
	},
	physicslevel: {
		name: "physicsLevel",
		default: "1",
		category: 1,
		help: "Level of physics world interaction",
	},
	pingcategorytutorialshown: {
		name: "pingCategoryTutorialShown",
		default: "0",
		category: 4,
		help: "Has shown the ping category tutorial dialog",
	},
	pingmode: {
		name: "pingMode",
		default: "0",
		category: 4,
		help: "Determines which mode is used to use the ping system.",
	},
	playintromovie: {
		name: "playIntroMovie",
		default: "0",
		category: 4,
		help: "Starting expansion movie to play on startup",
	},
	playerstatleftdropdown: {
		name: "playerStatLeftDropdown",
		default: "",
		category: 4,
		scope: "Account",
		help: "The player stat selected in the left dropdown",
	},
	playerstatrightdropdown: {
		name: "playerStatRightDropdown",
		default: "",
		category: 4,
		scope: "Account",
		help: "The player stat selected in the right dropdown",
	},
	portal: {
		name: "portal",
		default: "",
		category: 6,
		help: "Name of Battle.net portal to use",
	},
	predictedhealth: {
		name: "predictedHealth",
		default: "1",
		category: 4,
		scope: "Character",
		help: "Whether or not to use predicted health values in the UI",
	},
	preloadloadingdistobject: {
		name: "preloadLoadingDistObject",
		default: "512",
		category: 5,
		help: "Object preload distance when loading",
	},
	preloadloadingdistterrain: {
		name: "preloadLoadingDistTerrain",
		default: "1024",
		category: 5,
		help: "Terrain preload distance when loading",
	},
	preloadplayermodels: {
		name: "preloadPlayerModels",
		default: "1",
		category: 4,
		help: "Preload all local racial models into memory",
	},
	preloadstreamingdistobject: {
		name: "preloadStreamingDistObject",
		default: "64",
		category: 5,
		help: "Object preload distance when streaming",
	},
	preloadstreamingdistterrain: {
		name: "preloadStreamingDistTerrain",
		default: "256",
		category: 5,
		help: "Terrain preload distance when streaming",
	},
	primaryprofessionsfilter: {
		name: "primaryProfessionsFilter",
		default: "1",
		category: 4,
		scope: "Account",
		help: "If enabled, primary profession world quests icons will be shown on world maps",
	},
	processaffinitymask: {
		name: "processAffinityMask",
		default: "0",
		category: 0,
		help: "Sets which core(s) WoW may execute on - changes require restart to take effect",
	},
	profanityfilter: {
		name: "profanityFilter",
		default: "1",
		category: 4,
		scope: "Character",
		help: "Whether to enable mature language filtering",
	},
	professionaccessoryslotsexampleshown: {
		name: "professionAccessorySlotsExampleShown",
		default: "0",
		category: 4,
		scope: "Account",
		help: "If the profession gear slots example has been shown",
	},
	professiontoolslotsexampleshown: {
		name: "professionToolSlotsExampleShown",
		default: "0",
		category: 4,
		scope: "Account",
		help: "If the profession gear slots example has been shown",
	},
	professionsallocatebestqualityreagents: {
		name: "professionsAllocateBestQualityReagents",
		default: "1",
		category: 4,
		scope: "Character",
		help: "Indicates if best quality reagents should be automatically allocated in the crafting UI.",
	},
	professionsallocatebestqualityreagentscustomer: {
		name: "professionsAllocateBestQualityReagentsCustomer",
		default: "1",
		category: 4,
		scope: "Character",
		help: "Indicates if best quality reagents should be automatically allocated in the customer crafting order UI.",
	},
	professionsflyouthideunowned: {
		name: "professionsFlyoutHideUnowned",
		default: "0",
		category: 4,
		scope: "Account",
		help: "Boolean indicating if unowned items are hidden in the profession slot flyouts",
	},
	professionsorderdurationdropdown: {
		name: "professionsOrderDurationDropdown",
		default: "2",
		category: 4,
		scope: "Character",
		help: "The previously selected duration index in the professions customer order form dropdown",
	},
	professionsorderrecipientdropdown: {
		name: "professionsOrderRecipientDropdown",
		default: "1",
		category: 4,
		scope: "Character",
		help: "The previously selected order recipient index in the professions customer order form dropdown",
	},
	projectedtextures: {
		name: "projectedTextures",
		default: "0",
		category: 1,
		help: "Projected Textures",
	},
	pvpframesdisplayclasscolor: {
		name: "pvpFramesDisplayClassColor",
		default: "0",
		category: 4,
		scope: "Account",
		help: "Colors pvp frames with the class color",
	},
	pvpframesdisplayonlyhealerpowerbars: {
		name: "pvpFramesDisplayOnlyHealerPowerBars",
		default: "0",
		category: 4,
		scope: "Account",
		help: "Whether to display power bars only for healers on Pvp Frames",
	},
	pvpframesdisplaypowerbars: {
		name: "pvpFramesDisplayPowerBars",
		default: "0",
		category: 4,
		scope: "Account",
		help: "Whether to display mana, rage, etc. on Pvp Frames",
	},
	pvpframeshealthtext: {
		name: "pvpFramesHealthText",
		default: "none",
		category: 4,
		scope: "Account",
		help: "How to display health text on the pvp frames",
	},
	pvpoptiondisplaypets: {
		name: "pvpOptionDisplayPets",
		default: "0",
		category: 4,
		scope: "Account",
		help: "Whether to display pets on the pvp frames",
	},
	pvpselectedroles: {
		name: "pvpSelectedRoles",
		default: "0",
		category: 4,
		scope: "Account",
		help: "Stores what roles the player will fulfill in a BG.",
	},
	questlogopen: {
		name: "questLogOpen",
		default: "1",
		category: 4,
		scope: "Account",
		help: "Whether the quest log appears the side of the windowed map. ",
	},
	questpoi: {
		name: "questPOI",
		default: "1",
		category: 4,
		scope: "Account",
		help: "If enabled, the quest POI system will be used.",
	},
	questpoilocalstory: {
		name: "questPOILocalStory",
		default: "1",
		category: 4,
		scope: "Account",
		help: "Worldmap filter setting for showing any local story quest offers on the map, this is an independent setting for the world map only.",
	},
	questpoiwq: {
		name: "questPOIWQ",
		default: "1",
		category: 4,
		scope: "Account",
		help: "Worldmap filter setting for showing any WQs on the map, this is in conjunction with the questPOI cvar.",
	},
	questtextcontrast: {
		name: "questTextContrast",
		default: "0",
		category: 4,
		help: "Whether to increase text contrast in Quest UIs",
	},
	raidframesdisplayaggrohighlight: {
		name: "raidFramesDisplayAggroHighlight",
		default: "1",
		category: 4,
		scope: "Account",
		help: "Whether to display aggro highlights on Raid Frames",
	},
	raidframesdisplayclasscolor: {
		name: "raidFramesDisplayClassColor",
		default: "0",
		category: 4,
		scope: "Account",
		help: "Colors raid frames with the class color",
	},
	raidframesdisplaydebuffs: {
		name: "raidFramesDisplayDebuffs",
		default: "1",
		category: 4,
		scope: "Account",
		help: "Whether to display debuffs on Raid Frames",
	},
	raidframesdisplayincomingheals: {
		name: "raidFramesDisplayIncomingHeals",
		default: "1",
		category: 4,
		scope: "Account",
		help: "Whether to display incoming heals on Raid Frames",
	},
	raidframesdisplayonlydispellabledebuffs: {
		name: "raidFramesDisplayOnlyDispellableDebuffs",
		default: "0",
		category: 4,
		scope: "Account",
		help: "Whether to display only dispellable debuffs on Raid Frames",
	},
	raidframesdisplayonlyhealerpowerbars: {
		name: "raidFramesDisplayOnlyHealerPowerBars",
		default: "0",
		category: 4,
		scope: "Account",
		help: "Whether to display power bars only for healers on Raid Frames",
	},
	raidframesdisplaypowerbars: {
		name: "raidFramesDisplayPowerBars",
		default: "0",
		category: 4,
		scope: "Account",
		help: "Whether to display mana, rage, etc. on Raid Frames",
	},
	raidframeshealthtext: {
		name: "raidFramesHealthText",
		default: "none",
		category: 4,
		scope: "Account",
		help: "How to display health text on the raid frames",
	},
	raidframesheight: {
		name: "raidFramesHeight",
		default: "36",
		category: 4,
		scope: "Account",
		help: "The height of the individual raid frames",
	},
	raidframesposition: {
		name: "raidFramesPosition",
		default: "",
		category: 4,
		scope: "Account",
		help: "Where the raid frames should be placed",
	},
	raidframeswidth: {
		name: "raidFramesWidth",
		default: "72",
		category: 4,
		scope: "Account",
		help: "The width of the individual raid frames",
	},
	raidgraphicscomputeeffects: {
		name: "raidGraphicsComputeEffects",
		default: "3",
		category: 5,
	},
	raidgraphicsdeptheffects: {
		name: "raidGraphicsDepthEffects",
		default: "3",
		category: 5,
		help: "UI value of the raidGraphics setting",
	},
	raidgraphicsenvironmentdetail: {
		name: "raidGraphicsEnvironmentDetail",
		default: "6",
		category: 5,
		help: "UI value of the raidGraphics setting",
	},
	raidgraphicsgroundclutter: {
		name: "raidGraphicsGroundClutter",
		default: "6",
		category: 5,
		help: "UI value of the raidGraphics setting",
	},
	raidgraphicsliquiddetail: {
		name: "raidGraphicsLiquidDetail",
		default: "2",
		category: 5,
		help: "UI value of the raidGraphics setting",
	},
	raidgraphicsoutlinemode: {
		name: "raidGraphicsOutlineMode",
		default: "2",
		category: 5,
		help: "UI value of the raidGraphics setting",
	},
	raidgraphicsparticledensity: {
		name: "raidGraphicsParticleDensity",
		default: "4",
		category: 5,
		help: "UI value of the raidGraphics setting",
	},
	raidgraphicsprojectedtextures: {
		name: "raidGraphicsProjectedTextures",
		default: "1",
		category: 5,
		help: "UI value of the raidGraphics setting",
	},
	raidgraphicsssao: {
		name: "raidGraphicsSSAO",
		default: "3",
		category: 5,
		help: "UI value of the raidGraphics setting",
	},
	raidgraphicsshadowquality: {
		name: "raidGraphicsShadowQuality",
		default: "3",
		category: 5,
		help: "UI value of the raidGraphics setting",
	},
	raidgraphicsspelldensity: {
		name: "raidGraphicsSpellDensity",
		default: "4",
		category: 5,
		help: "UI value of the raidGraphics setting",
	},
	raidgraphicstextureresolution: {
		name: "raidGraphicsTextureResolution",
		default: "2",
		category: 5,
		help: "UI value of the raidGraphics setting",
	},
	raidgraphicsviewdistance: {
		name: "raidGraphicsViewDistance",
		default: "6",
		category: 5,
		help: "UI value of the raidGraphics setting",
	},
	raidoptiondisplaymaintankandassist: {
		name: "raidOptionDisplayMainTankAndAssist",
		default: "1",
		category: 4,
		scope: "Account",
		help: "Whether to display main tank and main assist units in the raid frames",
	},
	raidoptiondisplaypets: {
		name: "raidOptionDisplayPets",
		default: "0",
		category: 4,
		scope: "Account",
		help: "Whether to display pets on the raid frames",
	},
	raidoptionisshown: {
		name: "raidOptionIsShown",
		default: "1",
		category: 4,
		scope: "Account",
		help: "Whether the Raid Frames are shown",
	},
	raidoptionkeepgroupstogether: {
		name: "raidOptionKeepGroupsTogether",
		default: "0",
		category: 4,
		scope: "Account",
		help: "The way to group raid frames",
	},
	raidoptionlocked: {
		name: "raidOptionLocked",
		default: "lock",
		category: 4,
		scope: "Account",
		help: "Whether the raid frames are locked",
	},
	raidoptionshowborders: {
		name: "raidOptionShowBorders",
		default: "1",
		category: 4,
		scope: "Account",
		help: "Displays borders around the raid frames.",
	},
	raidoptionsortmode: {
		name: "raidOptionSortMode",
		default: "role",
		category: 4,
		scope: "Account",
		help: "The way to sort raid frames",
	},
	rawmouseenable: {
		name: "rawMouseEnable",
		default: "0",
		category: 4,
		help: "Enable raw mouse input",
	},
	reflectiondownscale: {
		name: "reflectionDownscale",
		default: "0",
		category: 1,
		help: "Reflection downscale",
	},
	reflectionmode: {
		name: "reflectionMode",
		default: "3",
		category: 1,
		help: "Reflection mode",
	},
	refraction: {
		name: "refraction",
		default: "0",
		category: 1,
		help: "Refraction",
	},
	reloaduionaspectchange: {
		name: "reloadUIOnAspectChange",
		default: "0",
		category: 1,
		help: "Reload the UI on aspect change",
	},
	remotetexttospeech: {
		name: "remoteTextToSpeech",
		default: "0",
		category: 4,
		scope: "Character",
		help: "Enables typing into a voice chat window to speak to other players using the text to speech system",
	},
	remotetexttospeechvoice: {
		name: "remoteTextToSpeechVoice",
		default: "1",
		category: 4,
		scope: "Character",
		help: "Voice option used with Speak for Me where you can send text to speech to other players in voice chat",
	},
	removechatdelay: {
		name: "removeChatDelay",
		default: "0",
		category: 4,
		scope: "Character",
		help: "Remove Chat Hover Delay",
	},
	reputationscollapsed: {
		name: "reputationsCollapsed",
		default: "",
		category: 4,
		scope: "Account",
		help: "List of reputation categories that have been collapsed in the Reputation tab",
	},
	restrictcalendarinvites: {
		name: "restrictCalendarInvites",
		default: "1",
		category: 4,
		scope: "Character",
		help: "Whether to restrict calendar invites to friends and guilds only.",
	},
	rippledetail: {
		name: "rippleDetail",
		default: "2",
		category: 1,
		help: "Ripple surface detail",
	},
	rotateminimap: {
		name: "rotateMinimap",
		default: "0",
		category: 4,
		scope: "Character",
		help: "Whether to rotate the entire minimap instead of the player arrow",
	},
	runefadetime: {
		name: "runeFadeTime",
		default: "0.2",
		category: 5,
		help: "Adjust the time the rune fades from on CD to ready",
	},
	runespentfadetime: {
		name: "runeSpentFadeTime",
		default: "0.1",
		category: 5,
		help: "Adjust the time the base rune takes to fade out after the rune flash fades out",
	},
	runespentflashtime: {
		name: "runeSpentFlashTime",
		default: "0.15",
		category: 5,
		help: "Adjust the time the rune flash takes to fade out",
	},
	sceneocclusionenable: {
		name: "sceneOcclusionEnable",
		default: "1",
		category: 1,
		help: "Scene software occlusion",
	},
	screenedgeflash: {
		name: "screenEdgeFlash",
		default: "1",
		category: 4,
		scope: "Character",
		help: "Whether to show a red flash while you are in combat with the world map up",
	},
	screenshotformat: {
		name: "screenshotFormat",
		default: "jpeg",
		category: 1,
		help: "Set the format of screenshots",
	},
	screenshotquality: {
		name: "screenshotQuality",
		default: "3",
		category: 1,
		help: "Set the quality of screenshots (1 - 10)",
	},
	screenshotsizeoverride: {
		name: "screenshotSizeOverride",
		default: "0x0",
		category: 1,
		help: "Set the size of screenshots to a specific resolution (e.g. 7680x4320). 0x0 means use the window size",
	},
	scripterrors: {
		name: "scriptErrors",
		default: "0",
		category: 5,
		scope: "Character",
		help: "Whether or not the UI shows Lua errors",
	},
	scriptprofile: {
		name: "scriptProfile",
		default: "0",
		category: 5,
		help: "Whether or not script profiling is enabled",
	},
	scriptwarnings: {
		name: "scriptWarnings",
		default: "0",
		category: 5,
		scope: "Character",
		help: "Whether or not the UI shows Lua warnings",
	},
	scrolltologquest: {
		name: "scrollToLogQuest",
		default: "0",
		category: 4,
		scope: "Account",
		help: "Whether to scroll to a quest in the quest log when mousing over its map pin",
	},
	secondaryprofessionsfilter: {
		name: "secondaryProfessionsFilter",
		default: "1",
		category: 4,
		scope: "Account",
		help: "If enabled, secondary profession world quests icons will be shown on world maps",
	},
	secureabilitytoggle: {
		name: "secureAbilityToggle",
		default: "1",
		category: 4,
		scope: "Character",
		help: "Whether you should be protected against accidentally double-clicking an aura",
	},
	seenalliedraceunlocks: {
		name: "seenAlliedRaceUnlocks",
		default: "0",
		category: 4,
		help: "Bit array for which allied race unlocks have been seen",
	},
	seenasiacharacterupgradepopup: {
		name: "seenAsiaCharacterUpgradePopup",
		default: "0",
		category: 4,
		scope: "Character",
		secure: true,
		help: "Seen the free character upgrade popup (Asia)",
	},
	seencharacterselectwarbandhelptip: {
		name: "seenCharacterSelectWarbandHelpTip",
		default: "0",
		category: 4,
		scope: "Character",
		help: "Seen and acknowledged the character select warband help tip",
	},
	seencharacterupgradepopup: {
		name: "seenCharacterUpgradePopup",
		default: "6",
		category: 4,
		help: "Seen the free character upgrade popup",
	},
	seenconfigurationwarnings: {
		name: "seenConfigurationWarnings",
		default: "0",
		category: 4,
		help: "A bitfield to track which configuration warnings have been seen",
	},
	seenexpansiontrialpopup: {
		name: "seenExpansionTrialPopup",
		default: "6",
		category: 4,
		help: "Seen the expansion trial popup",
	},
	seenlevelsquishpopup: {
		name: "seenLevelSquishPopup",
		default: "0",
		category: 4,
		help: "Seen the level squish popup",
	},
	seenregionalchatdisabled: {
		name: "seenRegionalChatDisabled",
		default: "0",
		category: 4,
		scope: "Character",
		help: "Seen the alert indicating chat has been disabled by default. (UK and CA AADC)",
	},
	seentimerunningfirstloginpopup: {
		name: "seenTimerunningFirstLoginPopup",
		default: "0",
		category: 4,
		help: "Seen the timerunning first login popup",
	},
	serveralert: {
		name: "serverAlert",
		default: "https://breaking-news.support.blizzard.com/service/wow-client/live/eu/en-US",
		category: 6,
		help: "Get the glue-string tag for the URL",
	},
	servicetypefilter: {
		name: "serviceTypeFilter",
		default: "6",
		category: 4,
		scope: "Character",
		help: "Which trainer services to show",
	},
	shadowblendcascades: {
		name: "shadowBlendCascades",
		default: "0",
		category: 1,
		help: "Blend between shadow cascades (0/1)",
	},
	shadowcull: {
		name: "shadowCull",
		default: "1",
		category: 5,
		help: "enable shadow frustum culling",
	},
	shadowmode: {
		name: "shadowMode",
		default: "0",
		category: 1,
		help: "Quality of shadows (0-3)",
	},
	shadowrt: {
		name: "shadowRt",
		default: "0",
		category: 1,
		help: "Raytraced shadows (0-3)",
	},
	shadowscissor: {
		name: "shadowScissor",
		default: "1",
		category: 5,
		help: "enable scissoring when rendering shadowmaps",
	},
	shadowsoft: {
		name: "shadowSoft",
		default: "0",
		category: 1,
		help: "Soft shadows (0/1)",
	},
	shadowtexturesize: {
		name: "shadowTextureSize",
		default: "1024",
		category: 1,
		help: "Shadow texture size (1024-2048)",
	},
	shipyardmissiontutorialareabuff: {
		name: "shipyardMissionTutorialAreaBuff",
		default: "0",
		category: 4,
		scope: "Account",
		help: "Stores whether the player has accepted the first area buff mission tutorial",
	},
	shipyardmissiontutorialblockade: {
		name: "shipyardMissionTutorialBlockade",
		default: "0",
		category: 4,
		scope: "Account",
		help: "Stores whether the player has accepted the first blockade mission tutorial",
	},
	shipyardmissiontutorialfirst: {
		name: "shipyardMissionTutorialFirst",
		default: "0",
		category: 4,
		scope: "Account",
		help: "Stores whether the player has accepted the first mission tutorial",
	},
	showarenaenemycastbar: {
		name: "showArenaEnemyCastbar",
		default: "1",
		category: 4,
		scope: "Account",
		help: "Show the spell enemies are casting on the Arena Enemy frames",
	},
	showarenaenemyframes: {
		name: "showArenaEnemyFrames",
		default: "1",
		category: 4,
		scope: "Account",
		secure: true,
		help: "Show arena enemy frames while in an Arena",
	},
	showarenaenemypets: {
		name: "showArenaEnemyPets",
		default: "1",
		category: 4,
		scope: "Account",
		secure: true,
		help: "Show the enemy team's pets on the ArenaEnemy frames",
	},
	showbattlefieldminimap: {
		name: "showBattlefieldMinimap",
		default: "0",
		category: 4,
		scope: "Account",
		help: "Whether or not the battlefield minimap is shown",
	},
	showbuilderfeedback: {
		name: "showBuilderFeedback",
		default: "1",
		category: 4,
		help: "Show animation when building power for builder/spender bar",
	},
	showcastablebuffs: {
		name: "showCastableBuffs",
		default: "0",
		category: 4,
		scope: "Account",
		help: "Show only Buffs the player can cast.  Only applies to raids.",
	},
	showcreatecharacterrealmconfirmdialog: {
		name: "showCreateCharacterRealmConfirmDialog",
		default: "1",
		category: 4,
		scope: "Character",
		help: "Show the character create realm confirmation dialog",
	},
	showdelveentrancesonmap: {
		name: "showDelveEntrancesOnMap",
		default: "1",
		category: 4,
		scope: "Account",
		help: "If enabled, delve entrances will display on the world map.",
	},
	showdispeldebuffs: {
		name: "showDispelDebuffs",
		default: "1",
		category: 4,
		scope: "Account",
		help: "Show only Debuffs that the player can dispel.  Only applies to raids.",
	},
	showdungeonentrancesonmap: {
		name: "showDungeonEntrancesOnMap",
		default: "1",
		category: 4,
		scope: "Account",
		help: "If enabled, dungeon entrances will display on the world map.",
	},
	showerrors: {
		name: "showErrors",
		default: "1",
		category: 0,
	},
	showhonorasexperience: {
		name: "showHonorAsExperience",
		default: "0",
		category: 4,
		scope: "Account",
		help: "Show the honor bar as a regular experience bar in place of rep",
	},
	showingamenavigation: {
		name: "showInGameNavigation",
		default: "1",
		category: 4,
		scope: "Character",
		help: "0: Disable IGN, 1: Enable IGN (Default).",
	},
	showloadingscreentips: {
		name: "showLoadingScreenTips",
		default: "1",
		category: 4,
		help: "Show loading screen tooltips",
	},
	shownpetutorials: {
		name: "showNPETutorials",
		default: "1",
		category: 4,
		scope: "Character",
		help: "display NPE tutorials",
	},
	showoutfitdetails: {
		name: "showOutfitDetails",
		default: "1",
		category: 4,
		scope: "Account",
		help: "Whether or not to show outfit details when the dressing room is opened in maximized mode, default on",
	},
	showpartypets: {
		name: "showPartyPets",
		default: "0",
		category: 4,
		scope: "Account",
		secure: true,
		help: "Whether to show pets in the party UI",
	},
	showphotosensitivitywarning: {
		name: "showPhotosensitivityWarning",
		default: "0",
		category: 5,
	},
	showpingsinchat: {
		name: "showPingsInChat",
		default: "1",
		category: 4,
		help: "Enables ping details being shown in chat.",
	},
	showquestobjectivesinlog: {
		name: "showQuestObjectivesInLog",
		default: "1",
		category: 4,
		scope: "Account",
		help: "Stores whether to show quest objectives in the quest list in the log",
	},
	showquestobjectivesonmap: {
		name: "showQuestObjectivesOnMap",
		default: "1",
		category: 4,
		scope: "Account",
		help: "Shows quest POIs on the main map.",
	},
	showspectatorteamcircles: {
		name: "showSpectatorTeamCircles",
		default: "1",
		category: 4,
		help: "Determines if the team color circles are visible while spectating or commentating a wargame",
	},
	showspenderfeedback: {
		name: "showSpenderFeedback",
		default: "1",
		category: 4,
		help: "Show animation when spending power for builder/spender bar",
	},
	showtamers: {
		name: "showTamers",
		default: "1",
		category: 4,
		scope: "Account",
		help: "If enabled, pet battle icons will be shown on world maps",
	},
	showtamerswq: {
		name: "showTamersWQ",
		default: "1",
		category: 4,
		scope: "Account",
		help: "If enabled, WQ pet battle icons will be shown on world maps",
	},
	showtargetcastbar: {
		name: "showTargetCastbar",
		default: "1",
		category: 4,
		scope: "Character",
		help: "Show the spell your current target is casting",
	},
	showtargetoftarget: {
		name: "showTargetOfTarget",
		default: "0",
		category: 4,
		scope: "Character",
		secure: true,
		help: "Whether the target of target frame should be shown",
	},
	showtempmaxhealthloss: {
		name: "showTempMaxHealthLoss",
		default: "1",
		category: 4,
		scope: "Character",
		help: "Weather or not to show temporary max health changes on unit health bars",
	},
	showtimestamps: {
		name: "showTimestamps",
		default: "none",
		category: 4,
		scope: "Character",
		help: "The format of timestamps in chat or \"none\"",
	},
	showtoastbroadcast: {
		name: "showToastBroadcast",
		default: "0",
		category: 4,
		scope: "Character",
		help: "Whether to show Battle.net message for broadcasts",
	},
	showtoastclubinvitation: {
		name: "showToastClubInvitation",
		default: "1",
		category: 4,
		scope: "Character",
		help: "Whether to show Battle.net message for club invitations",
	},
	showtoastconversation: {
		name: "showToastConversation",
		default: "1",
		category: 4,
		scope: "Character",
		help: "Whether to show Battle.net message for conversations",
	},
	showtoastfriendrequest: {
		name: "showToastFriendRequest",
		default: "1",
		category: 4,
		scope: "Character",
		help: "Whether to show Battle.net message for friend requests",
	},
	showtoastoffline: {
		name: "showToastOffline",
		default: "1",
		category: 4,
		scope: "Character",
		help: "Whether to show Battle.net message for friend going offline",
	},
	showtoastonline: {
		name: "showToastOnline",
		default: "1",
		category: 4,
		scope: "Character",
		help: "Whether to show Battle.net message for friend coming online",
	},
	showtoastwindow: {
		name: "showToastWindow",
		default: "1",
		category: 4,
		scope: "Character",
		help: "Whether to show Battle.net system messages in a toast window",
	},
	showtokenframe: {
		name: "showTokenFrame",
		default: "0",
		category: 4,
		scope: "Account",
		help: "The token UI has been shown",
	},
	showtokenframehonor: {
		name: "showTokenFrameHonor",
		default: "0",
		category: 4,
		scope: "Account",
		help: "The token UI has shown Honor",
	},
	showtutorials: {
		name: "showTutorials",
		default: "1",
		category: 4,
		scope: "Character",
		help: "display tutorials",
	},
	showvkeycastbar: {
		name: "showVKeyCastbar",
		default: "1",
		category: 4,
		scope: "Character",
		help: "If the V key display is up for your current target, show the enemy cast bar with the target's health bar in the game field",
	},
	showvkeycastbaronlyontarget: {
		name: "showVKeyCastbarOnlyOnTarget",
		default: "0",
		category: 4,
		scope: "Account",
	},
	showvkeycastbarspellname: {
		name: "showVKeyCastbarSpellName",
		default: "1",
		category: 4,
		scope: "Account",
	},
	showfootprintparticles: {
		name: "showfootprintparticles",
		default: "1",
		category: 1,
		help: "toggles rendering of footprint particles",
	},
	simd: {
		name: "simd",
		default: "-1",
		category: 5,
		help: "Enable SIMD features (e.g. SSE)",
	},
	skipstartgear: {
		name: "skipStartGear",
		default: "0",
		category: 4,
		help: "Whether we should show starter gear on character create",
	},
	smoothunitphasing: {
		name: "smoothUnitPhasing",
		default: "1",
		category: 4,
		help: "The client will try to smoothly switch between the same on model different phases.",
	},
	smoothunitphasingactorpurgatorytimems: {
		name: "smoothUnitPhasingActorPurgatoryTimeMs",
		default: "1500",
		category: 4,
		help: "Time to keep client-actor displays in purgatory before letting go of them, if they were despawned",
	},
	smoothunitphasingalivetimeoutms: {
		name: "smoothUnitPhasingAliveTimeoutMs",
		default: "3500",
		category: 4,
		help: "Time to wait for an alive unit to get it's despawn message",
	},
	smoothunitphasingdestroyedpurgatorytimems: {
		name: "smoothUnitPhasingDestroyedPurgatoryTimeMs",
		default: "750",
		category: 4,
		help: "Time to keep unit displays in purgatory before letting go of them, if they were destroyed",
	},
	smoothunitphasingdistthreshold: {
		name: "smoothUnitPhasingDistThreshold",
		default: "0.25",
		category: 4,
		help: "Distance threshold to active smooth unit phasing.",
	},
	smoothunitphasingenablealive: {
		name: "smoothUnitPhasingEnableAlive",
		default: "1",
		category: 4,
		help: "Use units that have not despawn yet if they match, in hopes the despawn message will come later.",
	},
	smoothunitphasingunseenpurgatorytimems: {
		name: "smoothUnitPhasingUnseenPurgatoryTimeMs",
		default: "1000",
		category: 4,
		help: "Time to keep unit displays in purgatory before letting go of them, if they were just unseen.",
	},
	smoothunitphasingvehicleextratimeoutms: {
		name: "smoothUnitPhasingVehicleExtraTimeoutMs",
		default: "1000",
		category: 4,
		help: "Extra time to wait before releasing a vehicle, after it has smooth phased. This allows it's passengers to smooth phase as well.",
	},
	softtargetinteractiontutorialtotalinteractions: {
		name: "softTargetInteractionTutorialTotalInteractions",
		default: "0",
		category: 4,
		scope: "Character",
		help: "total interactions that the player has used in soft targetting",
	},
	softtargettinginteractkeysound: {
		name: "softTargettingInteractKeySound",
		default: "0",
		category: 4,
		scope: "Character",
		help: "Setting for soft targeting that enables sound cues",
	},
	sortdiskreads: {
		name: "sortDiskReads",
		default: "0",
		category: 0,
		help: "Sort async disk reads to minimize seeks (requires restart)",
	},
	soulbindsactivatedtutorial: {
		name: "soulbindsActivatedTutorial",
		default: "",
		category: 4,
		scope: "Account",
		help: "Bitfield for tutorializing activating soulbinds",
	},
	soulbindslandingpagetutorial: {
		name: "soulbindsLandingPageTutorial",
		default: "",
		category: 4,
		scope: "Account",
		help: "Boolean indicating if the landing page tutorial has been completed.",
	},
	soulbindsviewedtutorial: {
		name: "soulbindsViewedTutorial",
		default: "",
		category: 4,
		scope: "Account",
		help: "Bitfield for tutorializing viewing soulbinds trees",
	},
	specular: {
		name: "specular",
		default: "1",
		category: 1,
		help: "Specular lighting multiplier (0-1)",
	},
	speechtotext: {
		name: "speechToText",
		default: "0",
		category: 4,
		scope: "Character",
		help: "Allows enabling transcription on a voice channel in order to see written text based on the words spoken by other players",
	},
	spellactivationoverlayopacity: {
		name: "spellActivationOverlayOpacity",
		default: "0.65",
		category: 4,
		scope: "Character",
		help: "The opacity of the Spell Activation Overlays (a.k.a. Spell Alerts)",
	},
	spellbookhidepassives: {
		name: "spellBookHidePassives",
		default: "0",
		category: 4,
		scope: "Character",
		help: "Stores whether to hide Passive spells in the SpellBook pane",
	},
	spellbookminimize: {
		name: "spellBookMinimize",
		default: "0",
		category: 4,
		scope: "Character",
		help: "Stores whether to always show the the SpellBook pane in half-screen minimized mode",
	},
	spellclutter: {
		name: "spellClutter",
		default: "-1",
		category: 1,
		help: "Cull unimportant spell effects. -1 means auto based on targetFPS otherwise [0-100], 0 means cull nothing for perf reasons, 100 means cull as much as you can",
	},
	splashscreenboost: {
		name: "splashScreenBoost",
		default: "0",
		category: 4,
		scope: "Account",
		secure: true,
		help: "Show boost splash screen id ",
	},
	splashscreennormal: {
		name: "splashScreenNormal",
		default: "0",
		category: 4,
		scope: "Account",
		secure: true,
		help: "Show normal splash screen id",
	},
	splashscreenseason: {
		name: "splashScreenSeason",
		default: "1",
		category: 4,
		scope: "Account",
		secure: true,
		help: "Show season splash screen id",
	},
	ssaomagicnormals: {
		name: "ssaoMagicNormals",
		default: "1",
		category: 1,
		help: "SSAO Use combined GBuffer and face normals; attempts to get the best compromise for architecture, foliage, and characters",
	},
	ssaomagicthresholdhigh: {
		name: "ssaoMagicThresholdHigh",
		default: "50",
		category: 1,
		help: "SSAO High threshold for transitioning from gbuffer to face normal (degrees)",
	},
	ssaomagicthresholdlow: {
		name: "ssaoMagicThresholdLow",
		default: "25",
		category: 1,
		help: "SSAO Low threshold for transitioning from gbuffer to face normal (degrees)",
	},
	statustext: {
		name: "statusText",
		default: "0",
		category: 4,
		scope: "Character",
		help: "Whether the status bars show numeric health/mana values",
	},
	statustextdisplay: {
		name: "statusTextDisplay",
		default: "NONE",
		category: 4,
		scope: "Character",
		help: "Whether numeric health/mana values are shown as raw values or percentages, or both",
	},
	stopautoattackontargetchange: {
		name: "stopAutoAttackOnTargetChange",
		default: "0",
		category: 4,
		scope: "Account",
		help: "Whether to stop attacking when changing targets",
	},
	streamstatusmessage: {
		name: "streamStatusMessage",
		default: "1",
		category: 4,
		scope: "Character",
		help: "Whether to display status messages while streaming content",
	},
	streamingcameralookaheadtime: {
		name: "streamingCameraLookAheadTime",
		default: "2000",
		category: 1,
		help: "Look ahead time for streaming.",
	},
	streamingcameramaxradius: {
		name: "streamingCameraMaxRadius",
		default: "250",
		category: 1,
		help: "Max radius of the streaming camera.",
	},
	streamingcameraradius: {
		name: "streamingCameraRadius",
		default: "100",
		category: 1,
		help: "Base radius of the streaming camera.",
	},
	sunshafts: {
		name: "sunShafts",
		default: "0",
		category: 1,
		help: "SunShafts",
	},
	supertrackerdist: {
		name: "superTrackerDist",
		default: "0.75",
		category: 4,
		scope: "Character",
	},
	synchronizebindings: {
		name: "synchronizeBindings",
		default: "1",
		category: 5,
	},
	synchronizechatframes: {
		name: "synchronizeChatFrames",
		default: "1",
		category: 5,
	},
	synchronizeconfig: {
		name: "synchronizeConfig",
		default: "1",
		category: 5,
	},
	taintlog: {
		name: "taintLog",
		default: "0",
		category: 5,
		help: "Whether taint logging is enabled",
	},
	talentframeshown: {
		name: "talentFrameShown",
		default: "0",
		category: 4,
		scope: "Character",
		help: "The talent UI has been shown",
	},
	talentpointsspent: {
		name: "talentPointsSpent",
		default: "0",
		category: 4,
		scope: "Character",
		help: "The player has spent a talent point",
	},
	targetfps: {
		name: "targetFPS",
		default: "60",
		category: 1,
		help: "Set target FPS. Dynamic actions will be taken if you fall below the FPS target",
	},
	telemetrywowpackage: {
		name: "telemetryWowPackage",
		default: "Blizzard.Telemetry.Wow_Mainline",
		category: 5,
		help: "The primary package we want to send telemetry to e.g. Wow_Mainline or Wow_Classic",
	},
	telemetrywowlabspackage: {
		name: "telemetryWowlabsPackage",
		default: "Blizzard.Telemetry.Wow_Labs",
		category: 5,
		help: "The secondary package we want to send telemetry to e.g. Wow_Wowlabs",
	},
	teleportmaxnoloaddist: {
		name: "teleportMaxNoLoadDist",
		default: "200",
		category: 1,
		help: "Max teleport distanace without preload",
	},
	terrainloddist: {
		name: "terrainLodDist",
		default: "400",
		category: 1,
		help: "Terrain level of detail distance",
	},
	terrainmiplevel: {
		name: "terrainMipLevel",
		default: "0",
		category: 1,
		help: "Terrain blend map mip level",
	},
	test_cameradynamicpitch: {
		name: "test_cameraDynamicPitch",
		default: "0.000000",
		category: 4,
		help: "Adjust camera pitch according to zoom distance for a more cinematic view",
	},
	test_cameradynamicpitchbasefovpad: {
		name: "test_cameraDynamicPitchBaseFovPad",
		default: "0.400000",
		category: 4,
		help: "Fraction of screen height to keep feet below",
	},
	test_cameradynamicpitchbasefovpaddownscale: {
		name: "test_cameraDynamicPitchBaseFovPadDownScale",
		default: "0.250000",
		category: 4,
		help: "Strength of dynamic pitch when looking down",
	},
	test_cameradynamicpitchbasefovpadflying: {
		name: "test_cameraDynamicPitchBaseFovPadFlying",
		default: "0.750000",
		category: 4,
		help: "Fraction of screen height to keep character below when able to fly",
	},
	test_cameradynamicpitchsmartpivotcutoffdist: {
		name: "test_cameraDynamicPitchSmartPivotCutoffDist",
		default: "10.000000",
		category: 4,
		help: "Dynamic pitch disables Smart Pivot within this camera distance",
	},
	test_cameraheadmovementdeadzone: {
		name: "test_cameraHeadMovementDeadZone",
		default: "0.015000",
		category: 4,
	},
	test_cameraheadmovementfirstpersondamprate: {
		name: "test_cameraHeadMovementFirstPersonDampRate",
		default: "20.000000",
		category: 4,
	},
	test_cameraheadmovementmovingdamprate: {
		name: "test_cameraHeadMovementMovingDampRate",
		default: "10.000000",
		category: 4,
	},
	test_cameraheadmovementmovingstrength: {
		name: "test_cameraHeadMovementMovingStrength",
		default: "0.500000",
		category: 4,
	},
	test_cameraheadmovementrangescale: {
		name: "test_cameraHeadMovementRangeScale",
		default: "5.000000",
		category: 4,
	},
	test_cameraheadmovementstandingdamprate: {
		name: "test_cameraHeadMovementStandingDampRate",
		default: "10.000000",
		category: 4,
	},
	test_cameraheadmovementstandingstrength: {
		name: "test_cameraHeadMovementStandingStrength",
		default: "0.300000",
		category: 4,
	},
	test_cameraheadmovementstrength: {
		name: "test_cameraHeadMovementStrength",
		default: "0.000000",
		category: 4,
	},
	test_cameraovershoulder: {
		name: "test_cameraOverShoulder",
		default: "0.000000",
		category: 4,
	},
	test_cameratargetfocusenemyenable: {
		name: "test_cameraTargetFocusEnemyEnable",
		default: "0",
		category: 4,
	},
	test_cameratargetfocusenemystrengthpitch: {
		name: "test_cameraTargetFocusEnemyStrengthPitch",
		default: "0.400000",
		category: 4,
	},
	test_cameratargetfocusenemystrengthyaw: {
		name: "test_cameraTargetFocusEnemyStrengthYaw",
		default: "0.500000",
		category: 4,
	},
	test_cameratargetfocusinteractenable: {
		name: "test_cameraTargetFocusInteractEnable",
		default: "0",
		category: 4,
	},
	test_cameratargetfocusinteractstrengthpitch: {
		name: "test_cameraTargetFocusInteractStrengthPitch",
		default: "0.750000",
		category: 4,
	},
	test_cameratargetfocusinteractstrengthyaw: {
		name: "test_cameraTargetFocusInteractStrengthYaw",
		default: "1.000000",
		category: 4,
	},
	textlocale: {
		name: "textLocale",
		default: "",
		category: 4,
		help: "Set the game locale for text",
	},
	texttospeech: {
		name: "textToSpeech",
		default: "0",
		category: 4,
		scope: "Character",
		help: "Reads chat text out loud using the voice text to speech system based on the selected options",
	},
	textureerrorcolors: {
		name: "textureErrorColors",
		default: "1",
		category: 1,
		help: "If enabled, replaceable textures that aren't specified will be purple",
	},
	texturefilteringmode: {
		name: "textureFilteringMode",
		default: "5",
		category: 1,
		help: "Texture filtering mode",
	},
	threatplaysounds: {
		name: "threatPlaySounds",
		default: "1",
		category: 4,
		scope: "Character",
		help: "Whether or not to sounds when certain threat transitions occur",
	},
	threatshownumeric: {
		name: "threatShowNumeric",
		default: "0",
		category: 4,
		scope: "Character",
		help: "Whether or not to show numeric threat on the target and focus frames",
	},
	threatwarning: {
		name: "threatWarning",
		default: "3",
		category: 4,
		scope: "Account",
		help: "Whether or not to show threat warning UI (0 = off, 1 = in dungeons, 2 = in party/raid, 3 = always)",
	},
	threatworldtext: {
		name: "threatWorldText",
		default: "1",
		category: 4,
		scope: "Character",
		help: "Whether or not to show threat floaters in combat",
	},
	timemgralarmenabled: {
		name: "timeMgrAlarmEnabled",
		default: "0",
		category: 4,
		scope: "Character",
		help: "Toggles whether or not the time manager's alarm will go off",
	},
	timemgralarmmessage: {
		name: "timeMgrAlarmMessage",
		default: "",
		category: 4,
		scope: "Character",
		help: "The time manager's alarm message",
	},
	timemgralarmtime: {
		name: "timeMgrAlarmTime",
		default: "0",
		category: 4,
		scope: "Character",
		help: "The time manager's alarm time in minutes",
	},
	timemgruselocaltime: {
		name: "timeMgrUseLocalTime",
		default: "0",
		category: 4,
		scope: "Character",
		help: "Toggles the use of either the realm time or your system time",
	},
	timemgrusemilitarytime: {
		name: "timeMgrUseMilitaryTime",
		default: "0",
		category: 4,
		scope: "Character",
		help: "Toggles the display of either 12 or 24 hour time",
	},
	timingmethod: {
		name: "timingMethod",
		default: "0",
		category: 5,
		help: "Desired method for game timing",
	},
	timingtesterror: {
		name: "timingTestError",
		default: "0",
		category: 5,
		help: "Error reported by the timing validation system",
	},
	titlebarshortname: {
		name: "titleBarShortName",
		default: "0",
		category: 5,
	},
	titlebarshowaccountname: {
		name: "titleBarShowAccountName",
		default: "0",
		category: 5,
	},
	titlebarshowbuildinfo: {
		name: "titleBarShowBuildInfo",
		default: "0",
		category: 5,
	},
	titlebarshowcharactername: {
		name: "titleBarShowCharacterName",
		default: "0",
		category: 5,
	},
	titlebarshowconfigname: {
		name: "titleBarShowConfigName",
		default: "0",
		category: 5,
	},
	titlebarshowgxinfo: {
		name: "titleBarShowGxInfo",
		default: "0",
		category: 5,
	},
	titlebarshowpid: {
		name: "titleBarShowPID",
		default: "0",
		category: 5,
	},
	titlebarshowrealmname: {
		name: "titleBarShowRealmName",
		default: "0",
		category: 5,
	},
	toastduration: {
		name: "toastDuration",
		default: "4",
		category: 4,
		scope: "Character",
		help: "How long to display Battle.net toast windows, in seconds",
	},
	toyboxcollectedfilters: {
		name: "toyBoxCollectedFilters",
		default: "0",
		category: 4,
		scope: "Character",
		help: "Bitfield for which collected filters are applied in the toybox",
	},
	toyboxexpansionfilters: {
		name: "toyBoxExpansionFilters",
		default: "0",
		category: 4,
		scope: "Character",
		help: "Bitfield for which expansion filters are applied in the toybox",
	},
	toyboxsourcefilters: {
		name: "toyBoxSourceFilters",
		default: "0",
		category: 4,
		scope: "Character",
		help: "Bitfield for which source filters are applied in the toybox",
	},
	trackquestsorting: {
		name: "trackQuestSorting",
		default: "top",
		category: 4,
		scope: "Character",
		help: "Whether to sort the last tracked quest to the top of the quest tracker or use proximity sorting",
	},
	trackedachievements: {
		name: "trackedAchievements",
		default: "",
		category: 4,
		scope: "Account",
		help: "Internal cvar for saving tracked achievements in order",
	},
	trackedperksactivities: {
		name: "trackedPerksActivities",
		default: "",
		category: 4,
		scope: "Account",
		help: "Internal cvar for saving tracked perks activities in order",
	},
	trackedprofessionrecipes: {
		name: "trackedProfessionRecipes",
		default: "",
		category: 4,
		scope: "Account",
		help: "Internal cvar for saving tracked recipes in order",
	},
	trackedprofessionrecraftrecipes: {
		name: "trackedProfessionRecraftRecipes",
		default: "",
		category: 4,
		scope: "Account",
		help: "Internal cvar for saving tracked recraft recipes in order",
	},
	trackedquests: {
		name: "trackedQuests",
		default: "",
		category: 4,
		scope: "Account",
		help: "Internal cvar for saving automatically tracked quests in order",
	},
	trackedworldquests: {
		name: "trackedWorldQuests",
		default: "",
		category: 4,
		scope: "Account",
		help: "Internal cvar for saving automatically tracked world quests",
	},
	transmogcurrentspeconly: {
		name: "transmogCurrentSpecOnly",
		default: "0",
		category: 4,
		scope: "Account",
		help: "Stores whether transmogs apply to current spec instead of all specs",
	},
	transmogrifyshowcollected: {
		name: "transmogrifyShowCollected",
		default: "1",
		category: 4,
		scope: "Character",
		help: "Whether to show collected transmogs in the at the transmogrifier",
	},
	transmogrifyshowuncollected: {
		name: "transmogrifyShowUncollected",
		default: "0",
		category: 4,
		scope: "Character",
		help: "Whether to show uncollected transmogs in the at the transmogrifier",
	},
	transmogrifysourcefilters: {
		name: "transmogrifySourceFilters",
		default: "0",
		category: 4,
		scope: "Character",
		help: "Bitfield for which source filters are applied in the  wardrobe at the transmogrifier",
	},
	twittergetconfigtime: {
		name: "twitterGetConfigTime",
		default: "0",
		category: 4,
		help: "Last time that we got Twitter configuration data successfully",
	},
	twittershorturllength: {
		name: "twitterShortUrlLength",
		default: "23",
		category: 4,
		help: "Number of characters that non-https URLS get shortened to",
	},
	twittershorturllengthhttps: {
		name: "twitterShortUrlLengthHttps",
		default: "23",
		category: 4,
		help: "Number of characters that https URLS get shortened to",
	},
	uiscale: {
		name: "uiScale",
		default: "1.0",
		category: 4,
		secure: true,
		help: "The current UI scale",
	},
	uiscalemultiplier: {
		name: "uiScaleMultiplier",
		default: "-1",
		category: 4,
		secure: true,
		help: "A multiplier for the default UI scale. -1=determine based on system/monitor DPI, 0.5-2.0=multiplier to use when calculating UI scale. Only applied when useUIScale is 0.",
	},
	unitclutter: {
		name: "unitClutter",
		default: "1",
		category: 4,
		help: "Enables/Disables unit clutter",
	},
	unitclutterinstancesonly: {
		name: "unitClutterInstancesOnly",
		default: "1",
		category: 4,
		help: "Whether or not to use unit clutter in instances only (0 or 1)",
	},
	unitclutterplayerthreshold: {
		name: "unitClutterPlayerThreshold",
		default: "10",
		category: 4,
		help: "The number of players that have to be nearby to trigger unit clutter",
	},
	unitfacingplayerdeadzonedeg: {
		name: "unitFacingPlayerDeadZoneDeg",
		default: "60",
		category: 4,
		help: "Degrees outside a unit's default facing a player has to be for the unit to face them on interact",
	},
	unitslookatplayers: {
		name: "unitsLookAtPlayers",
		default: "1",
		category: 4,
		help: "Enables units turning their head to look at players",
	},
	unlockedexpansionlandingpages: {
		name: "unlockedExpansionLandingPages",
		default: "",
		category: 4,
		scope: "Account",
		help: "Bitfield for which expansion landing pages have been unlocked/seen by the user",
	},
	unlockedmajorfactions: {
		name: "unlockedMajorFactions",
		default: "",
		category: 4,
		scope: "Account",
		help: "Internal cvar for tracking unlocked Major Factions. Used to play a toast when a new faction has been unlocked.",
	},
	usecommentatorselectioncircles: {
		name: "useCommentatorSelectionCircles",
		default: "1",
		category: 4,
		help: "Determines whether to use the commentator selection circles or the default selection circles while spectating or commentating a wargame",
	},
	usecompactpartyframes: {
		name: "useCompactPartyFrames",
		default: "",
		category: 5,
	},
	usehighrestextures: {
		name: "useHighResTextures",
		default: "1",
		category: 4,
		help: "Prefer upscaled versions of texture assets when available",
	},
	useipv6: {
		name: "useIPv6",
		default: "0",
		category: 6,
		help: "Enable the usage of IPv6 sockets",
	},
	usemaxfps: {
		name: "useMaxFPS",
		default: "0",
		category: 1,
		help: "Enables or disables FPS limit",
	},
	usemaxfpsbk: {
		name: "useMaxFPSBk",
		default: "1",
		category: 1,
		help: "Enables or disables background FPS limit",
	},
	usetargetfps: {
		name: "useTargetFPS",
		default: "1",
		category: 1,
		help: "Enables or disables background FPS limit",
	},
	useuiscale: {
		name: "useUiScale",
		default: "0",
		category: 4,
		secure: true,
		help: "Whether or not the UI scale should be used",
	},
	validateframexml: {
		name: "validateFrameXML",
		default: "1",
		category: 5,
		help: "Display warning when FrameXML detects unparsed elements",
	},
	videooptionsversion: {
		name: "videoOptionsVersion",
		default: "0",
		category: 1,
		help: "Video options version",
	},
	videooptionsversiondefault: {
		name: "videoOptionsVersionDefault",
		default: "0",
		category: 1,
	},
	violencelevel: {
		name: "violenceLevel",
		default: "2",
		category: 4,
		scope: "Character",
		help: "Sets the violence level of the game",
	},
	volumefog: {
		name: "volumeFog",
		default: "0",
		category: 1,
		help: "Volume Fog",
	},
	volumefoginterior: {
		name: "volumeFogInterior",
		default: "1",
		category: 1,
		help: "Volume Fog Interiors",
	},
	volumefoglevel: {
		name: "volumeFogLevel",
		default: "2",
		category: 1,
		help: "Volume Fog Level (0-3)",
	},
	vrsparticles: {
		name: "vrsParticles",
		default: "1x1",
		category: 1,
		help: "Render scale like effect for particles. Only used if lots of particles are on screen",
	},
	vrsvalar: {
		name: "vrsValar",
		default: "0",
		category: 1,
		help: "Generate a shading rate mask based on velocity and luminance. Requires VRS Tier 2.",
	},
	vrsvalaralwayson: {
		name: "vrsValarAlwaysOn",
		default: "0",
		category: 1,
		help: "Use VRS even when not GPU bound",
	},
	vrsvalarenvluma: {
		name: "vrsValarEnvLuma",
		default: "0.050000",
		category: 1,
		help: "Env. Luma for VALAR",
	},
	vrsvalargpumode: {
		name: "vrsValarGPUMode",
		default: "0",
		category: 1,
		help: "0 - Auto-detect, 1 - Standard (discrete GPU default), 2 - Low Power (integrated GPU default) modes for VALAR",
	},
	vrsvalarlpusecornersampling: {
		name: "vrsValarLPUseCornerSampling",
		default: "0",
		category: 1,
		help: "Use corner sampling for VALAR Low Power",
	},
	vrsvalaruseasynccompute: {
		name: "vrsValarUseAsyncCompute",
		default: "0",
		category: 1,
		help: "Use async compute for VALAR",
	},
	vrsvalarusemotionvectors: {
		name: "vrsValarUseMotionVectors",
		default: "0",
		category: 1,
		help: "Use motion vectors for VALAR",
	},
	vrsvalaruseweberfechner: {
		name: "vrsValarUseWeberFechner",
		default: "0",
		category: 1,
		help: "Use Weber-Fechner Algo for VALAR",
	},
	vrsvalarweberfechnerconstant: {
		name: "vrsValarWeberFechnerConstant",
		default: "1.000000",
		category: 1,
		help: "Weber-Fechner Constant for VALAR",
	},
	vrsworldgeo: {
		name: "vrsWorldGeo",
		default: "1x1",
		category: 1,
		help: "Render scale like effect for terrain, buildings and liquids",
	},
	vsync: {
		name: "vsync",
		default: "1",
		category: 1,
		help: "vsync on or off",
	},
	wardrobesetsfilters: {
		name: "wardrobeSetsFilters",
		default: "0",
		category: 4,
		scope: "Character",
		help: "Bitfield for which transmog sets filters are applied in the wardrobe in the collection journal",
	},
	wardrobeshowallfactions: {
		name: "wardrobeShowAllFactions",
		default: "0",
		category: 4,
		scope: "Account",
		help: "Stores whether to show both Alliance and Horde transmogs in the Wardrobe",
	},
	wardrobeshowallraces: {
		name: "wardrobeShowAllRaces",
		default: "0",
		category: 4,
		scope: "Account",
		help: "Stores whether to show race restricted transmogs in the Wardrobe",
	},
	wardrobeshowcollected: {
		name: "wardrobeShowCollected",
		default: "1",
		category: 4,
		scope: "Character",
		help: "Whether to show collected transmogs in the wardrobe",
	},
	wardrobeshowuncollected: {
		name: "wardrobeShowUncollected",
		default: "1",
		category: 4,
		scope: "Character",
		help: "Whether to show uncollected transmogs in the wardrobe",
	},
	wardrobesourcefilters: {
		name: "wardrobeSourceFilters",
		default: "0",
		category: 4,
		scope: "Character",
		help: "Bitfield for which source filters are applied in the wardrobe in the collection journal",
	},
	watchframebasealpha: {
		name: "watchFrameBaseAlpha",
		default: "0",
		category: 4,
		scope: "Character",
		help: "Objectives frame opacity.",
	},
	watchframeignorecursor: {
		name: "watchFrameIgnoreCursor",
		default: "0",
		category: 4,
		scope: "Character",
		help: "Disables Objectives frame mouseover and title dropdown.",
	},
	watchframestate: {
		name: "watchFrameState",
		default: "0",
		category: 4,
		scope: "Character",
		help: "Stores Objectives frame locked and collapsed states",
	},
	waterdetail: {
		name: "waterDetail",
		default: "0",
		category: 5,
		help: "Water surface detail",
	},
	weatherdensity: {
		name: "weatherDensity",
		default: "2",
		category: 1,
	},
	webchallengeurltimeout: {
		name: "webChallengeURLTimeout",
		default: "60",
		category: 5,
		help: "How long to wait for the web challenge URL (in seconds). 0 means wait forever.",
	},
	whispermode: {
		name: "whisperMode",
		default: "popout",
		category: 4,
		scope: "Character",
		help: "The action new whispers take by default: \"popout\", \"inline\", \"popout_and_inline\"",
	},
	wholechatwindowclickable: {
		name: "wholeChatWindowClickable",
		default: "1",
		category: 4,
		scope: "Character",
		help: "Whether the user may click anywhere on a chat window to change EditBox focus (only works in IM style)",
	},
	wmodoodaddist: {
		name: "wmoDoodadDist",
		default: "2000",
		category: 1,
		help: "Wmo doodad load distance",
	},
	wmoloddist: {
		name: "wmoLodDist",
		default: "300",
		category: 1,
		help: "Wmo level of detail distance",
	},
	wmoloddistscale: {
		name: "wmoLodDistScale",
		default: "1.0",
		category: 1,
		help: "Wmo level of detail distance scale",
	},
	wmoportalfadescale: {
		name: "wmoPortalFadeScale",
		default: "1000",
		category: 1,
		help: "Wmo portal fade scale",
	},
	wmoportalinteriorfade: {
		name: "wmoPortalInteriorFade",
		default: "1",
		category: 1,
		help: "Wmo portal interior fade",
	},
	worldbasemip: {
		name: "worldBaseMip",
		default: "0",
		category: 1,
		help: "World texture base mip",
	},
	worldintersectmaxjobs: {
		name: "worldIntersectMaxJobs",
		default: "32",
		category: 1,
		help: "Maximum job threads for culling",
	},
	worldloadsort: {
		name: "worldLoadSort",
		default: "1",
		category: 1,
		help: "Sort objects by distance when loading",
	},
	worldmaxmiplevel: {
		name: "worldMaxMipLevel",
		default: "12",
		category: 1,
		help: "World maximum texture mip level",
	},
	worldpreloadhighrestextures: {
		name: "worldPreloadHighResTextures",
		default: "1",
		category: 1,
		help: "Require high res textures to be loaded in streaming non critical radius when preloading",
	},
	worldpreloadnoncritical: {
		name: "worldPreloadNonCritical",
		default: "2",
		category: 1,
		help: "Require objects to be loaded in streaming non critical radius when preloading",
	},
	worldpreloadnoncriticaltimeout: {
		name: "worldPreloadNonCriticalTimeout",
		default: "45",
		category: 1,
		help: "World preload time (in seconds) when non-critical items are automatically ignored",
	},
	worldpreloadsort: {
		name: "worldPreloadSort",
		default: "1",
		category: 1,
		help: "Sort objects by distance when preloading",
	},
	worldquestfilteranima: {
		name: "worldQuestFilterAnima",
		default: "1",
		category: 4,
		scope: "Account",
		help: "If enabled, world quests with anima rewards will be shown on the map",
	},
	worldquestfilterartifactpower: {
		name: "worldQuestFilterArtifactPower",
		default: "1",
		category: 4,
		scope: "Account",
		help: "If enabled, world quests with artifact power rewards will be shown on the map",
	},
	worldquestfilterequipment: {
		name: "worldQuestFilterEquipment",
		default: "1",
		category: 4,
		scope: "Account",
		help: "If enabled, world quests with equipment rewards will be shown on the map",
	},
	worldquestfiltergold: {
		name: "worldQuestFilterGold",
		default: "1",
		category: 4,
		scope: "Account",
		help: "If enabled, world quests with gold rewards will be shown on the map",
	},
	worldquestfilterprofessionmaterials: {
		name: "worldQuestFilterProfessionMaterials",
		default: "1",
		category: 4,
		scope: "Account",
		help: "If enabled, world quests with profession material rewards will be shown on the map",
	},
	worldquestfilterreputation: {
		name: "worldQuestFilterReputation",
		default: "1",
		category: 4,
		scope: "Account",
		help: "If enabled, world quests with reputation rewards will be shown on the map",
	},
	worldquestfilterresources: {
		name: "worldQuestFilterResources",
		default: "1",
		category: 4,
		scope: "Account",
		help: "If enabled, world quests with order resource rewards or war resource rewards will be shown on the map",
	},
	worldviewcullmaxjobs: {
		name: "worldViewCullMaxJobs",
		default: "32",
		category: 1,
		help: "Maximum job threads for culling",
	},
	xpbartext: {
		name: "xpBarText",
		default: "0",
		category: 4,
		scope: "Character",
		help: "Whether the XP bar shows the numeric experience value",
	},
};
