== API Reference ==
<!-- https://github.com/Ketho/WowpediaApiDoc/tree/master/Pages/World_of_Warcraft_API -->
{{i-note|This list is up to date as of [[Patch_9.1.5/API_changes|Patch 9.1.5]] (40871) Oct 29 2021}}

=== Account ===
Relates to the subscription [[Account]]. See also [[#Battle.net|Battle.net]] functions.
: [[API GetBillingTimeRested|GetBillingTimeRested]]() - Returns the account rested time left. This function is only relevant on Chinese realms.
: [[API GetRestrictedAccountData|GetRestrictedAccountData]]() - Returns the cap on trial character level, money and profession skill.
: [[API GetSecondsUntilParentalControlsKick|GetSecondsUntilParentalControlsKick]]()
: [[API IsAccountSecured|IsAccountSecured]]() - Returns if the account has been secured with [[Blizzard Mobile Authenticator]].
: [[API IsRestrictedAccount|IsRestrictedAccount]]() - Returns if the acount has trial account restrictions.
: [[API IsTrialAccount|IsTrialAccount]]() : <span class="apiret">isTrialAccount</span> - Returns whether the player is using a trial (free-to-play) account.
: [[API IsVeteranTrialAccount|IsVeteranTrialAccount]]() : <span class="apiret">isVeteranTrialAccount</span> - Returns whether the wow account has no game time.
: [[API NoPlayTime|NoPlayTime]]() - Returns whether the account is considered "unhealthy". This function is only relevant on Chinese realms.
: [[API PartialPlayTime|PartialPlayTime]]() - Returns whether the account is considered "tired". This function is only relevant on Chinese realms.
: [[API SendSubscriptionInterstitialResponse|SendSubscriptionInterstitialResponse]](<span class="apiarg">response</span>)

=== Achievements ===
[[Achievement]]s were added in [[Patch 3.0.2]]
: [[API C_AchievementInfo.GetRewardItemID|C_AchievementInfo.GetRewardItemID]](<span class="apiarg">achievementID</span>) : <span class="apiret">rewardItemID</span>
: [[API C_AchievementInfo.GetSupercedingAchievements|C_AchievementInfo.GetSupercedingAchievements]](<span class="apiarg">achievementID</span>) : <span class="apiret">supercedingAchievements</span> - Returns the next achievement in a series.
: [[API C_AchievementInfo.IsValidAchievement|C_AchievementInfo.IsValidAchievement]](<span class="apiarg">achievementId</span>) : <span class="apiret">isValidAchievement</span>
: [[API C_AchievementInfo.SetPortraitTexture|C_AchievementInfo.SetPortraitTexture]](<span class="apiarg">textureObject</span>) - Sets a portrait texture for the unit being achievement compared.
: [[API AddTrackedAchievement|AddTrackedAchievement]](<span class="apiarg">achievementId</span>) - Add an achievement to tracking.
: [[API AreAccountAchievementsHidden|AreAccountAchievementsHidden]]()
: [[API CanShowAchievementUI|CanShowAchievementUI]]() - Returns if the AchievementUI can be displayed.
: [[API ClearAchievementComparisonUnit|ClearAchievementComparisonUnit]]() - Remove the unit being compared.
: [[API ClearAchievementSearchString|ClearAchievementSearchString]]()
: [[API GetAchievementCategory|GetAchievementCategory]](<span class="apiarg">achievementID</span>) - Returns the category number the requested achievement belongs to.
: [[API GetAchievementComparisonInfo|GetAchievementComparisonInfo]](<span class="apiarg">achievementID</span>) - Returns information about the comparison unit's achievements.
: [[API GetAchievementCriteriaInfo|GetAchievementCriteriaInfo]](<span class="apiarg">achievementID, criteriaNum</span>) - Returns information about the requested criteria.
: [[API GetAchievementCriteriaInfoByID|GetAchievementCriteriaInfoByID]](<span class="apiarg">achievementID, criteriaIndex</span>) - Returns achievement criteria info by criteriaIndex.
: [[API GetAchievementGuildRep|GetAchievementGuildRep]]()
: [[API GetAchievementInfo|GetAchievementInfo]](<span class="apiarg">achievementID or categoryID, index</span>) - Returns information about the requested achievement.
: [[API GetAchievementLink|GetAchievementLink]](<span class="apiarg">achievementID</span>) - Returns a [[achievementLink]] for the specified achievement.
: [[API GetAchievementNumCriteria|GetAchievementNumCriteria]](<span class="apiarg">achievementID</span>) - Returns the number of criteria the requested achievement has.
: [[API GetAchievementNumRewards|GetAchievementNumRewards]](<span class="apiarg">achievementID</span>) - Returns the number of rewards the requested achievement has.
: [[API GetAchievementReward|GetAchievementReward]](<span class="apiarg">achievementID, rewardIndex</span>) - Returns information about a reward item by rewardIndex.
: [[API GetAchievementSearchProgress|GetAchievementSearchProgress]]()
: [[API GetAchievementSearchSize|GetAchievementSearchSize]]()
: [[API GetCategoryAchievementPoints|GetCategoryAchievementPoints]](<span class="apiarg">categoryID, includeSubCategories</span>)
: [[API GetCategoryInfo|GetCategoryInfo]](<span class="apiarg">category</span>) - Returns information about the requested achievement category.
: [[API GetCategoryList|GetCategoryList]]() - Returns the list of achievement categories.
: [[API GetCategoryNumAchievements|GetCategoryNumAchievements]](<span class="apiarg">category [, includeAll</span>) - Returns the number of achievements, and number completed and incompleted for the specific category.
: [[API GetComparisonAchievementPoints|GetComparisonAchievementPoints]]() - Returns the total number of achievement points the comparison unit has earned.
: [[API GetComparisonCategoryNumAchievements|GetComparisonCategoryNumAchievements]](<span class="apiarg">achievementID</span>) - Returns a number of achievements in a category for the comparison player.
: [[API GetFilteredAchievementID|GetFilteredAchievementID]](<span class="apiarg">index</span>) - Returns the ID of a filtered achievement.
: [[API GetGuildAchievementMemberInfo|GetGuildAchievementMemberInfo]](<span class="apiarg">achievementID, index</span>)
: [[API GetGuildAchievementMembers|GetGuildAchievementMembers]](<span class="apiarg">achievementID</span>)
: [[API GetGuildAchievementNumMembers|GetGuildAchievementNumMembers]](<span class="apiarg">achievementID</span>)
: [[API GetLatestCompletedAchievements|GetLatestCompletedAchievements]]() - Returns the ID's of the last 5 completed Achievements.
: [[API GetLatestCompletedComparisonAchievements|GetLatestCompletedComparisonAchievements]]() - Returns a list of the latest updated achievements for the comparison player.
: [[API GetNextAchievement|GetNextAchievement]](<span class="apiarg">achievementID</span>) - Returns the next achievement in a chain.
: [[API GetNumComparisonCompletedAchievements|GetNumComparisonCompletedAchievements]]() - Returns the number of completed achievements for the comparison player.
: [[API GetNumCompletedAchievements|GetNumCompletedAchievements]]() - Returns the total number of achievements, and number completed.
: [[API GetNumFilteredAchievements|GetNumFilteredAchievements]]() - Returns the number of achievements that matches search text.
: [[API GetNumTrackedAchievements|GetNumTrackedAchievements]]() - Returns the total number of the currently tracked achievements.
: [[API GetPreviousAchievement|GetPreviousAchievement]](<span class="apiarg">achievementID</span>) - Returns previous related achievements.
: [[API GetTotalAchievementPoints|GetTotalAchievementPoints]]() - Returns the total number of achievement points earned.
: [[API GetTrackedAchievements|GetTrackedAchievements]]() - Returns the achievementID of the currently tracked achievements.
: [[API HasCompletedAnyAchievement|HasCompletedAnyAchievement]](<span class="apiarg">achievementID</span>)
: [[API IsAchievementEligible|IsAchievementEligible]](<span class="apiarg">achievementID</span>)
: [[API IsTrackedAchievement|IsTrackedAchievement]](<span class="apiarg">achievementID</span>)
: [[API RemoveTrackedAchievement|RemoveTrackedAchievement]](<span class="apiarg">achievementID</span>) - Stops an achievement from being tracked.
: [[API SetAchievementComparisonUnit|SetAchievementComparisonUnit]](<span class="apiarg">unitId</span>) - Set the unit to be compared to.
: [[API SetAchievementSearchString|SetAchievementSearchString]](<span class="apiarg">searchText</span>) - Starts a search for achievements containing the specified text.
: [[API SetFocusedAchievement|SetFocusedAchievement]](<span class="apiarg">achievementID</span>)
: [[API ShowAccountAchievements|ShowAccountAchievements]]()
: [[API SwitchAchievementSearchTab|SwitchAchievementSearchTab]](<span class="apiarg">index</span>)

==== Statistics ====
: [[API GetComparisonStatistic|GetComparisonStatistic]](<span class="apiarg">achievementID</span>) - Returns the value of the requested statistic for the comparison player.
: [[API GetLatestUpdatedComparisonStats|GetLatestUpdatedComparisonStats]]() - Returns a list of the latest updated statistics for the comparison player.
: [[API GetLatestUpdatedStats|GetLatestUpdatedStats]]() - Returns the ID's of the last 5 updated Statistics.
: [[API GetStatistic|GetStatistic]](<span class="apiarg">achievementID</span>) - Returns the value of the requested statistic.
: [[API GetStatisticsCategoryList|GetStatisticsCategoryList]]() - Returns the list of statistic categories.

=== AddOns ===
Relates to [[AddOn]]s.
: [[API DisableAddOn|DisableAddOn]](<span class="apiarg">addonIndex or AddOnName [, character]</span>) - Disable the specified AddOn for subsequent sessions.
: [[API DisableAllAddOns|DisableAllAddOns]](<span class="apiarg">[character]</span>) - Disable all AddOns for subsequent sessions.
: [[API EnableAddOn|EnableAddOn]](<span class="apiarg">addonIndex or AddOnName [, character]</span>) - Enable the specified AddOn for subsequent sessions.
: [[API EnableAllAddOns|EnableAllAddOns]](<span class="apiarg">[character]</span>) - Enable all AddOns for subsequent sessions.
: [[API GetAddOnDependencies|GetAddOnDependencies]](<span class="apiarg">addonIndex or AddOnName</span>) - Get dependency list for an AddOn.
: [[API GetAddOnEnableState|GetAddOnEnableState]](<span class="apiarg">[character], addonIndex or AddOnName</span>)
: [[API GetAddOnInfo|GetAddOnInfo]](<span class="apiarg">addonIndex or AddOnName</span>) - Get information about an AddOn.
: [[API GetAddOnMetadata|GetAddOnMetadata]](<span class="apiarg">addonIndex or AddOnName, variable</span>) - Retrieve metadata from addon's TOC file.
: [[API GetAddOnOptionalDependencies|GetAddOnOptionalDependencies]](<span class="apiarg">addonIndex or AddOnName</span>) - Returns a list of optional dependencies.
: [[API GetNumAddOns|GetNumAddOns]]() - Get the number of user supplied AddOns.
: [[API IsAddOnLoaded|IsAddOnLoaded]](<span class="apiarg">addonIndex or AddOnName</span>) - Returns true if the specified AddOn is loaded.
: [[API IsAddOnLoadOnDemand|IsAddOnLoadOnDemand]](<span class="apiarg">addonIndex or AddOnName</span>) - Test whether an AddOn is load-on-demand.
: [[API IsAddonVersionCheckEnabled|IsAddonVersionCheckEnabled]]()
: [[API LoadAddOn|LoadAddOn]](<span class="apiarg">addonIndex or AddOnName</span>) - Request loading of a Load-On-Demand AddOn.
: [[API ResetAddOns|ResetAddOns]]()
: [[API ResetDisabledAddOns|ResetDisabledAddOns]]()
: [[API SaveAddOns|SaveAddOns]]()
: [[API SetAddonVersionCheck|SetAddonVersionCheck]](<span class="apiarg">boolean</span>)
: <small>UI</small> [[API UIParentLoadAddOn|UIParentLoadAddOn]](<span class="apiarg">AddOnName</span>) - Loads or Reloads the specified AddOn, and pops up an error message if it fails to load for any reason.

=== Adventure Guide ===
The [[Adventure Guide]] was added in [[Patch 6.2.0]]
: [[API C_AdventureJournal.ActivateEntry|C_AdventureJournal.ActivateEntry]](<span class="apiarg">index</span>)
: [[API C_AdventureJournal.CanBeShown|C_AdventureJournal.CanBeShown]]()
: [[API C_AdventureJournal.GetNumAvailableSuggestions|C_AdventureJournal.GetNumAvailableSuggestions]]()
: [[API C_AdventureJournal.GetPrimaryOffset|C_AdventureJournal.GetPrimaryOffset]]()
: [[API C_AdventureJournal.GetReward|C_AdventureJournal.GetReward]]()
: [[API C_AdventureJournal.GetSuggestions|C_AdventureJournal.GetSuggestions]](<span class="apiarg">[suggestions]</span>)
: [[API C_AdventureJournal.SetPrimaryOffset|C_AdventureJournal.SetPrimaryOffset]](<span class="apiarg">offset</span>)
: [[API C_AdventureJournal.UpdateSuggestions|C_AdventureJournal.UpdateSuggestions]](<span class="apiarg">[levelUp]</span>)
==== Encounter Journal ====
The Encounter Journal was added in [[Patch 4.2.0]]
: [[API C_EncounterJournal.GetDungeonEntrancesForMap|C_EncounterJournal.GetDungeonEntrancesForMap]](<span class="apiarg">uiMapID</span>) : <span class="apiret">dungeonEntrances</span> - Returns the instance entrances for a map.
: [[API C_EncounterJournal.GetEncountersOnMap|C_EncounterJournal.GetEncountersOnMap]](<span class="apiarg">uiMapID</span>) : <span class="apiret">encounters</span> - Returns boss pin locations for an instance map.
: [[API C_EncounterJournal.GetSectionIconFlags|C_EncounterJournal.GetSectionIconFlags]](<span class="apiarg">sectionID</span>) : <span class="apiret">iconFlags</span> - Returns the icon flags for a section, such as Magic Effect and Heroic Difficulty
: [[API C_EncounterJournal.GetSectionInfo|C_EncounterJournal.GetSectionInfo]](<span class="apiarg">sectionID</span>) : <span class="apiret">info</span> - Returns information about an entry in the Abilities section of the Encounter Journal.
: [[API C_EncounterJournal.InstanceHasLoot|C_EncounterJournal.InstanceHasLoot]](<span class="apiarg">[instanceID]</span>) : <span class="apiret">hasLoot</span> - Returns whether an instance has a loot table in the journal.
: [[API C_EncounterJournal.IsEncounterComplete|C_EncounterJournal.IsEncounterComplete]](<span class="apiarg">journalEncounterID</span>) : <span class="apiret">isEncounterComplete</span> - Returns if a boss encounter has been completed.
: [[API C_EncounterJournal.SetPreviewMythicPlusLevel|C_EncounterJournal.SetPreviewMythicPlusLevel]](<span class="apiarg">level</span>)
: [[API C_EncounterJournal.SetPreviewPvpTier|C_EncounterJournal.SetPreviewPvpTier]](<span class="apiarg">tier</span>)
: [[API C_RaidLocks.IsEncounterComplete|C_RaidLocks.IsEncounterComplete]](<span class="apiarg">mapID, encounterID [, difficultyID]</span>) : <span class="apiret">encounterIsComplete</span>
: [[API EJ_ClearSearch|EJ_ClearSearch]]() - Clears the encounter journal search results.
: [[API EJ_EndSearch|EJ_EndSearch]]() - Ends any active encounter journal search.
: [[API EJ_GetContentTuningID|EJ_GetContentTuningID]]() - Returns the currently selected content tuning ID for BFA instances.
: [[API EJ_GetCreatureInfo|EJ_GetCreatureInfo]](<span class="apiarg">index [, encounterID]</span>) - Returns encounter boss info.
: [[API EJ_GetCurrentTier|EJ_GetCurrentTier]]() - Returns the currently active encounter journal tier index.
: [[API EJ_GetDifficulty|EJ_GetDifficulty]]() - Returns the currently viewed difficulty in the journal.
: [[API EJ_GetEncounterInfo|EJ_GetEncounterInfo]](<span class="apiarg">encounterID</span>) - Returns encounter info from the journal.
: [[API EJ_GetEncounterInfoByIndex|EJ_GetEncounterInfoByIndex]](<span class="apiarg">index [, instanceID]</span>) - idem
: [[API EJ_GetInstanceByIndex|EJ_GetInstanceByIndex]](<span class="apiarg">index, isRaid</span>) - Returns instance info for the Encounter Journal.
: [[API EJ_GetInstanceForMap|EJ_GetInstanceForMap]](<span class="apiarg">mapID</span>) - Returns any corresponding instance ID for a UiMapID.
: [[API EJ_GetInstanceInfo|EJ_GetInstanceInfo]]() - Returns instance info for the Encounter Journal.
: [[API EJ_GetMapEncounter|EJ_GetMapEncounter]](<span class="apiarg">mapID, index [, fromJournal]</span>) - Returns boss pin locations on instance maps.
: [[API EJ_GetNumEncountersForLootByIndex|EJ_GetNumEncountersForLootByIndex]](<span class="apiarg">index</span>) - Returns the amount of encounters that drop the same loot item.
: [[API EJ_GetNumSearchResults|EJ_GetNumSearchResults]]() - Returns the number of search results for the Encounter Journal.
: [[API EJ_GetNumTiers|EJ_GetNumTiers]]() - Returns the number of valid encounter journal tier indices.
: [[API EJ_GetSearchProgress|EJ_GetSearchProgress]]() - Returns the search bar's progress ratio.
: [[API EJ_GetSearchResult|EJ_GetSearchResult]](<span class="apiarg">index</span>) - Returns search results for the Encounter Journal.
: [[API EJ_GetSearchSize|EJ_GetSearchSize]]() - Returns the amount of Encounter Journal objects to search through.
: [[API EJ_GetSectionPath|EJ_GetSectionPath]](<span class="apiarg">sectionID</span>) - Returns the parent Section ID if available.
: [[API EJ_GetTierInfo|EJ_GetTierInfo]](<span class="apiarg">index</span>) - Get some information about the encounter journal tier for index.
: [[API EJ_HandleLinkPath|EJ_HandleLinkPath]](<span class="apiarg">jtype, id</span>) - Returns the supplementary instance and encounter ID for an encounter or section ID.
: [[API EJ_InstanceIsRaid|EJ_InstanceIsRaid]]() - Returns whether the selected instance is a raid.
: [[API EJ_IsSearchFinished|EJ_IsSearchFinished]]() - Returns whether the current search has finished.
: [[API EJ_IsValidInstanceDifficulty|EJ_IsValidInstanceDifficulty]](<span class="apiarg">difficultyID</span>) - Returns whether the difficultyID is valid for use in the journal.
: [[API EJ_SelectEncounter|EJ_SelectEncounter]](<span class="apiarg">encounterID</span>) - Selects an encounter for the Encounter Journal API state.
: [[API EJ_SelectInstance|EJ_SelectInstance]](<span class="apiarg">instanceID</span>) - Selects an instance for the Encounter Journal API state.
: [[API EJ_SelectTier|EJ_SelectTier]](<span class="apiarg">index</span>) - Selects a tier for the Encounter Journal API state.
: [[API EJ_SetDifficulty|EJ_SetDifficulty]](<span class="apiarg">difficultyID</span>) - Sets the encounter difficulty shown in the Encounter Journal.
: [[API EJ_SetSearch|EJ_SetSearch]](<span class="apiarg">text</span>) - Starts a search in the journal.
: [[API GetJournalInfoForSpellConfirmation|GetJournalInfoForSpellConfirmation]](<span class="apiarg">spellID</span>)
: [[API SetPortraitTextureFromCreatureDisplayID|SetPortraitTextureFromCreatureDisplayID]](<span class="apiarg">textureObject, creatureDisplayID</span>)
Loot Journal
: [[API C_EncounterJournal.GetLootInfo|C_EncounterJournal.GetLootInfo]](<span class="apiarg">id</span>) : <span class="apiret">itemInfo</span> - Returns loot info for an encounter or instance.
: [[API C_EncounterJournal.GetLootInfoByIndex|C_EncounterJournal.GetLootInfoByIndex]](<span class="apiarg">index [, encounterIndex]</span>) : <span class="apiret">itemInfo</span> - Returns loot info for an encounter or instance.
: [[API C_EncounterJournal.GetSlotFilter|C_EncounterJournal.GetSlotFilter]]() : <span class="apiret">filter</span> - Returns the current equipment type slot filter.
: [[API C_EncounterJournal.ResetSlotFilter|C_EncounterJournal.ResetSlotFilter]]() - Resets the current slot filter.
: [[API C_EncounterJournal.SetSlotFilter|C_EncounterJournal.SetSlotFilter]](<span class="apiarg">filterSlot</span>) - Sets the Encounter Journal's equipment slot filter.
: [[API EJ_GetInvTypeSortOrder|EJ_GetInvTypeSortOrder]](<span class="apiarg">invType</span>) - Returns the sort order for an inventory type.
: [[API EJ_GetLootFilter|EJ_GetLootFilter]]() - Returns the currently used loot filter.
: [[API EJ_GetNumLoot|EJ_GetNumLoot]]() - Returns the amount of loot for the currently selected instance or encounter.
: [[API EJ_IsLootListOutOfDate|EJ_IsLootListOutOfDate]]() - Returns whether the loot list is out of date in relation to any filters when getting new loot data.
: [[API EJ_ResetLootFilter|EJ_ResetLootFilter]]() - Clears any current loot filter in the journal.
: [[API EJ_SetLootFilter|EJ_SetLootFilter]](<span class="apiarg">classID, specID</span>) - Sets the loot filter for a specialization.

=== Auction House ===
The [[Auction House]] was revamped in [[Patch 8.3.0]]
: [[API C_AuctionHouse.GetNumReplicateItems|C_AuctionHouse.GetNumReplicateItems]]() : <span class="apiret">numReplicateItems</span> - Returns the amount of auctions.
: [[API C_AuctionHouse.GetReplicateItemBattlePetInfo|C_AuctionHouse.GetReplicateItemBattlePetInfo]](<span class="apiarg">index</span>) : <span class="apiret">creatureID, displayID</span>
: [[API C_AuctionHouse.GetReplicateItemInfo|C_AuctionHouse.GetReplicateItemInfo]](<span class="apiarg">index</span>) : <span class="apiret">name, texture, count, qualityID, usable, level, levelType, minBid, ...</span> - Returns information about the specified auction.
: [[API C_AuctionHouse.GetReplicateItemLink|C_AuctionHouse.GetReplicateItemLink]](<span class="apiarg">index</span>) : <span class="apiret">itemLink</span>
: [[API C_AuctionHouse.GetReplicateItemTimeLeft|C_AuctionHouse.GetReplicateItemTimeLeft]](<span class="apiarg">index</span>) : <span class="apiret">timeLeft</span> - Returns the time left for an auction.
: [[API C_AuctionHouse.ReplicateItems|C_AuctionHouse.ReplicateItems]]() - Queries all auctions listed on the Auction House.

: [[API C_AuctionHouse.CalculateCommodityDeposit|C_AuctionHouse.CalculateCommodityDeposit]](<span class="apiarg">itemID, duration, quantity</span>) : <span class="apiret">depositCost</span>
: [[API C_AuctionHouse.CalculateItemDeposit|C_AuctionHouse.CalculateItemDeposit]](<span class="apiarg">item, duration, quantity</span>) : <span class="apiret">depositCost</span>
: [[API C_AuctionHouse.CanCancelAuction|C_AuctionHouse.CanCancelAuction]](<span class="apiarg">ownedAuctionID</span>) : <span class="apiret">canCancelAuction</span>
: <small>HW, NOSCRIPT</small> [[API C_AuctionHouse.CancelAuction|C_AuctionHouse.CancelAuction]](<span class="apiarg">ownedAuctionID</span>) - Cancels an auction.
: [[API C_AuctionHouse.CancelCommoditiesPurchase|C_AuctionHouse.CancelCommoditiesPurchase]]()
: [[API C_AuctionHouse.CancelSell|C_AuctionHouse.CancelSell]]()
: [[API C_AuctionHouse.CloseAuctionHouse|C_AuctionHouse.CloseAuctionHouse]]()
: [[API C_AuctionHouse.ConfirmCommoditiesPurchase|C_AuctionHouse.ConfirmCommoditiesPurchase]](<span class="apiarg">itemID, quantity</span>) - Completes a commodity item purchase.
: [[API C_AuctionHouse.FavoritesAreAvailable|C_AuctionHouse.FavoritesAreAvailable]]() : <span class="apiret">favoritesAreAvailable</span>
: [[API C_AuctionHouse.GetAuctionItemSubClasses|C_AuctionHouse.GetAuctionItemSubClasses]](<span class="apiarg">classID</span>) : <span class="apiret">subClasses</span>
: [[API C_AuctionHouse.GetAvailablePostCount|C_AuctionHouse.GetAvailablePostCount]](<span class="apiarg">item</span>) : <span class="apiret">listCount</span>
: [[API C_AuctionHouse.GetBidInfo|C_AuctionHouse.GetBidInfo]](<span class="apiarg">bidIndex</span>) : <span class="apiret">bid</span>
: [[API C_AuctionHouse.GetBidType|C_AuctionHouse.GetBidType]](<span class="apiarg">bidTypeIndex</span>) : <span class="apiret">typeItemKey</span>
: [[API C_AuctionHouse.GetBrowseResults|C_AuctionHouse.GetBrowseResults]]() : <span class="apiret">browseResults</span>
: [[API C_AuctionHouse.GetCancelCost|C_AuctionHouse.GetCancelCost]](<span class="apiarg">ownedAuctionID</span>) : <span class="apiret">cancelCost</span>
: [[API C_AuctionHouse.GetCommoditySearchResultInfo|C_AuctionHouse.GetCommoditySearchResultInfo]](<span class="apiarg">itemID, commoditySearchResultIndex</span>) : <span class="apiret">result</span> - Returns search results for a commodity item.
: [[API C_AuctionHouse.GetCommoditySearchResultsQuantity|C_AuctionHouse.GetCommoditySearchResultsQuantity]](<span class="apiarg">itemID</span>) : <span class="apiret">totalQuantity</span>
: [[API C_AuctionHouse.GetExtraBrowseInfo|C_AuctionHouse.GetExtraBrowseInfo]](<span class="apiarg">itemKey</span>) : <span class="apiret">extraInfo</span>
: [[API C_AuctionHouse.GetFilterGroups|C_AuctionHouse.GetFilterGroups]]() : <span class="apiret">filterGroups</span>
: [[API C_AuctionHouse.GetItemCommodityStatus|C_AuctionHouse.GetItemCommodityStatus]](<span class="apiarg">item</span>) : <span class="apiret">isCommodity</span>
: [[API C_AuctionHouse.GetItemKeyFromItem|C_AuctionHouse.GetItemKeyFromItem]](<span class="apiarg">item</span>) : <span class="apiret">itemKey</span>
: [[API C_AuctionHouse.GetItemKeyInfo|C_AuctionHouse.GetItemKeyInfo]](<span class="apiarg">itemKey [, restrictQualityToFilter]</span>) : <span class="apiret">itemKeyInfo</span>
: [[API C_AuctionHouse.GetItemKeyRequiredLevel|C_AuctionHouse.GetItemKeyRequiredLevel]](<span class="apiarg">itemKey</span>) : <span class="apiret">requiredLevel</span>
: [[API C_AuctionHouse.GetItemSearchResultInfo|C_AuctionHouse.GetItemSearchResultInfo]](<span class="apiarg">itemKey, itemSearchResultIndex</span>) : <span class="apiret">result</span> - Returns search results for an item.
: [[API C_AuctionHouse.GetItemSearchResultsQuantity|C_AuctionHouse.GetItemSearchResultsQuantity]](<span class="apiarg">itemKey</span>) : <span class="apiret">totalQuantity</span>
: [[API C_AuctionHouse.GetMaxBidItemBid|C_AuctionHouse.GetMaxBidItemBid]]() : <span class="apiret">maxBid</span>
: [[API C_AuctionHouse.GetMaxBidItemBuyout|C_AuctionHouse.GetMaxBidItemBuyout]]() : <span class="apiret">maxBuyout</span>
: [[API C_AuctionHouse.GetMaxCommoditySearchResultPrice|C_AuctionHouse.GetMaxCommoditySearchResultPrice]](<span class="apiarg">itemID</span>) : <span class="apiret">maxUnitPrice</span>
: [[API C_AuctionHouse.GetMaxItemSearchResultBid|C_AuctionHouse.GetMaxItemSearchResultBid]](<span class="apiarg">itemKey</span>) : <span class="apiret">maxBid</span>
: [[API C_AuctionHouse.GetMaxItemSearchResultBuyout|C_AuctionHouse.GetMaxItemSearchResultBuyout]](<span class="apiarg">itemKey</span>) : <span class="apiret">maxBuyout</span>
: [[API C_AuctionHouse.GetMaxOwnedAuctionBid|C_AuctionHouse.GetMaxOwnedAuctionBid]]() : <span class="apiret">maxBid</span>
: [[API C_AuctionHouse.GetMaxOwnedAuctionBuyout|C_AuctionHouse.GetMaxOwnedAuctionBuyout]]() : <span class="apiret">maxBuyout</span>
: [[API C_AuctionHouse.GetNumBids|C_AuctionHouse.GetNumBids]]() : <span class="apiret">numBids</span>
: [[API C_AuctionHouse.GetNumBidTypes|C_AuctionHouse.GetNumBidTypes]]() : <span class="apiret">numBidTypes</span>
: [[API C_AuctionHouse.GetNumCommoditySearchResults|C_AuctionHouse.GetNumCommoditySearchResults]](<span class="apiarg">itemID</span>) : <span class="apiret">numSearchResults</span>
: [[API C_AuctionHouse.GetNumItemSearchResults|C_AuctionHouse.GetNumItemSearchResults]](<span class="apiarg">itemKey</span>) : <span class="apiret">numItemSearchResults</span>
: [[API C_AuctionHouse.GetNumOwnedAuctions|C_AuctionHouse.GetNumOwnedAuctions]]() : <span class="apiret">numOwnedAuctions</span>
: [[API C_AuctionHouse.GetNumOwnedAuctionTypes|C_AuctionHouse.GetNumOwnedAuctionTypes]]() : <span class="apiret">numOwnedAuctionTypes</span>
: [[API C_AuctionHouse.GetOwnedAuctionInfo|C_AuctionHouse.GetOwnedAuctionInfo]](<span class="apiarg">ownedAuctionIndex</span>) : <span class="apiret">ownedAuction</span>
: [[API C_AuctionHouse.GetOwnedAuctionType|C_AuctionHouse.GetOwnedAuctionType]](<span class="apiarg">ownedAuctionTypeIndex</span>) : <span class="apiret">typeItemKey</span>
: [[API C_AuctionHouse.GetQuoteDurationRemaining|C_AuctionHouse.GetQuoteDurationRemaining]]() : <span class="apiret">quoteDurationSeconds</span>
: [[API C_AuctionHouse.GetTimeLeftBandInfo|C_AuctionHouse.GetTimeLeftBandInfo]](<span class="apiarg">timeLeftBand</span>) : <span class="apiret">timeLeftMinSeconds, timeLeftMaxSeconds</span>
: [[API C_AuctionHouse.HasFavorites|C_AuctionHouse.HasFavorites]]() : <span class="apiret">hasFavorites</span>
: [[API C_AuctionHouse.HasFullBidResults|C_AuctionHouse.HasFullBidResults]]() : <span class="apiret">hasFullBidResults</span>
: [[API C_AuctionHouse.HasFullBrowseResults|C_AuctionHouse.HasFullBrowseResults]]() : <span class="apiret">hasFullBrowseResults</span>
: [[API C_AuctionHouse.HasFullCommoditySearchResults|C_AuctionHouse.HasFullCommoditySearchResults]](<span class="apiarg">itemID</span>) : <span class="apiret">hasFullResults</span>
: [[API C_AuctionHouse.HasFullItemSearchResults|C_AuctionHouse.HasFullItemSearchResults]](<span class="apiarg">itemKey</span>) : <span class="apiret">hasFullResults</span>
: [[API C_AuctionHouse.HasFullOwnedAuctionResults|C_AuctionHouse.HasFullOwnedAuctionResults]]() : <span class="apiret">hasFullOwnedAuctionResults</span>
: [[API C_AuctionHouse.HasMaxFavorites|C_AuctionHouse.HasMaxFavorites]]() : <span class="apiret">hasMaxFavorites</span>
: [[API C_AuctionHouse.HasSearchResults|C_AuctionHouse.HasSearchResults]](<span class="apiarg">itemKey</span>) : <span class="apiret">hasSearchResults</span>
: [[API C_AuctionHouse.IsFavoriteItem|C_AuctionHouse.IsFavoriteItem]](<span class="apiarg">itemKey</span>) : <span class="apiret">isFavorite</span>
: [[API C_AuctionHouse.IsSellItemValid|C_AuctionHouse.IsSellItemValid]](<span class="apiarg">item [, displayError]</span>) : <span class="apiret">valid</span>
: [[API C_AuctionHouse.IsThrottledMessageSystemReady|C_AuctionHouse.IsThrottledMessageSystemReady]]() : <span class="apiret">canSendThrottledMessage</span>
: [[API C_AuctionHouse.MakeItemKey|C_AuctionHouse.MakeItemKey]](<span class="apiarg">itemID [, itemLevel, itemSuffix, battlePetSpeciesID]</span>) : <span class="apiret">itemKey</span>
: <small>HW, NOSCRIPT</small> [[API C_AuctionHouse.PlaceBid|C_AuctionHouse.PlaceBid]](<span class="apiarg">auctionID, bidAmount</span>) - Places a bid on a non-commodity item.
: <small>HW, NOSCRIPT</small> [[API C_AuctionHouse.PostCommodity|C_AuctionHouse.PostCommodity]](<span class="apiarg">item, duration, quantity, unitPrice</span>) - Posts a commodity item on the auction house.
: <small>HW, NOSCRIPT</small> [[API C_AuctionHouse.PostItem|C_AuctionHouse.PostItem]](<span class="apiarg">item, duration, quantity [, bid, buyout]</span>) - Posts an item on the auction house.
: [[API C_AuctionHouse.QueryBids|C_AuctionHouse.QueryBids]](<span class="apiarg">sorts, auctionIDs</span>)
: [[API C_AuctionHouse.QueryOwnedAuctions|C_AuctionHouse.QueryOwnedAuctions]](<span class="apiarg">sorts</span>)
: [[API C_AuctionHouse.RefreshCommoditySearchResults|C_AuctionHouse.RefreshCommoditySearchResults]](<span class="apiarg">itemID</span>)
: [[API C_AuctionHouse.RefreshItemSearchResults|C_AuctionHouse.RefreshItemSearchResults]](<span class="apiarg">itemKey [, minLevelFilter, maxLevelFilter]</span>)
: [[API C_AuctionHouse.RequestMoreBrowseResults|C_AuctionHouse.RequestMoreBrowseResults]]()
: [[API C_AuctionHouse.RequestMoreCommoditySearchResults|C_AuctionHouse.RequestMoreCommoditySearchResults]](<span class="apiarg">itemID</span>) : <span class="apiret">hasFullResults</span>
: [[API C_AuctionHouse.RequestMoreItemSearchResults|C_AuctionHouse.RequestMoreItemSearchResults]](<span class="apiarg">itemKey</span>) : <span class="apiret">hasFullResults</span>
: [[API C_AuctionHouse.RequestOwnedAuctionBidderInfo|C_AuctionHouse.RequestOwnedAuctionBidderInfo]](<span class="apiarg">auctionID</span>) : <span class="apiret">bidderName</span>
: <small>NOSCRIPT</small> [[API C_AuctionHouse.SearchForFavorites|C_AuctionHouse.SearchForFavorites]](<span class="apiarg">sorts</span>) - Searches for favorited items.
: [[API C_AuctionHouse.SearchForItemKeys|C_AuctionHouse.SearchForItemKeys]](<span class="apiarg">itemKeys, sorts</span>)
: [[API C_AuctionHouse.SendBrowseQuery|C_AuctionHouse.SendBrowseQuery]](<span class="apiarg">query</span>)
: <small>NOSCRIPT</small> [[API C_AuctionHouse.SendSearchQuery|C_AuctionHouse.SendSearchQuery]](<span class="apiarg">itemKey, sorts, separateOwnerItems [, minLevelFilter, maxLevelFilter]</span>) - Queries an item in the auction house.
: [[API C_AuctionHouse.SendSellSearchQuery|C_AuctionHouse.SendSellSearchQuery]](<span class="apiarg">itemKey, sorts, separateOwnerItems</span>) - Search for all auctions that are variants of a piece of gear, determined a specific item ID.
: [[API C_AuctionHouse.SetFavoriteItem|C_AuctionHouse.SetFavoriteItem]](<span class="apiarg">itemKey, setFavorite</span>)
: <small>HW, NOSCRIPT</small> [[API C_AuctionHouse.StartCommoditiesPurchase|C_AuctionHouse.StartCommoditiesPurchase]](<span class="apiarg">itemID, quantity</span>) - Starts a commodity item purchase.

==== Black Market AH ====
The [[Black Market Auction House]] was added in [[Patch 5.0.4]]
: [[API C_BlackMarket.Close|C_BlackMarket.Close]]() - Notifies the server that the Black Market UI was closed.
: [[API C_BlackMarket.GetHotItem|C_BlackMarket.GetHotItem]]() - Returns information about the current "hot item" at the [[Black Market Auction House]].
: [[API C_BlackMarket.GetItemInfoByID|C_BlackMarket.GetItemInfoByID]](<span class="apiarg">marketID</span>) - Returns information about a specific black market auction.
: [[API C_BlackMarket.GetItemInfoByIndex|C_BlackMarket.GetItemInfoByIndex]](<span class="apiarg">index</span>) - Returns information about a specific black market auction.
: [[API C_BlackMarket.GetNumItems|C_BlackMarket.GetNumItems]]() - Returns the number of auctions on the [[Black Market Auction House]].
: [[API C_BlackMarket.IsViewOnly|C_BlackMarket.IsViewOnly]]()
: <small>HW</small> [[API C_BlackMarket.ItemPlaceBid|C_BlackMarket.ItemPlaceBid]](<span class="apiarg">marketID, bid</span>) - Places a bid on a black market auction.
: [[API C_BlackMarket.RequestItems|C_BlackMarket.RequestItems]]() - Requests updated black market auction information from the server.

==== WoW Tokens ====
[[WoW Token]]s were added in [[Patch 6.1.2]]
: [[API C_WowTokenPublic.BuyToken|C_WowTokenPublic.BuyToken]]()
: [[API C_WowTokenPublic.GetCommerceSystemStatus|C_WowTokenPublic.GetCommerceSystemStatus]]()
: [[API C_WowTokenPublic.GetCurrentMarketPrice|C_WowTokenPublic.GetCurrentMarketPrice]]()
: [[API C_WowTokenPublic.GetGuaranteedPrice|C_WowTokenPublic.GetGuaranteedPrice]]()
: [[API C_WowTokenPublic.GetListedAuctionableTokenInfo|C_WowTokenPublic.GetListedAuctionableTokenInfo]](<span class="apiarg">index</span>)
: [[API C_WowTokenPublic.GetNumListedAuctionableTokens|C_WowTokenPublic.GetNumListedAuctionableTokens]]()
: [[API C_WowTokenPublic.IsAuctionableWowToken|C_WowTokenPublic.IsAuctionableWowToken]](<span class="apiarg">itemID</span>)
: [[API C_WowTokenPublic.IsConsumableWowToken|C_WowTokenPublic.IsConsumableWowToken]]()
: [[API C_WowTokenPublic.UpdateListedAuctionableTokens|C_WowTokenPublic.UpdateListedAuctionableTokens]]()
: [[API C_WowTokenPublic.UpdateMarketPrice|C_WowTokenPublic.UpdateMarketPrice]]()
: [[API C_WowTokenPublic.UpdateTokenCount|C_WowTokenPublic.UpdateTokenCount]]()
: [[API C_WowTokenUI.StartTokenSell|C_WowTokenUI.StartTokenSell]](<span class="apiarg">tokenGUID</span>)

=== Bags ===
: [[API GetBackpackAutosortDisabled|GetBackpackAutosortDisabled]]()
: [[API GetBagName|GetBagName]](<span class="apiarg">bagID</span>) - Get the name of one of the player's bags.
: [[API GetBagSlotFlag|GetBagSlotFlag]](<span class="apiarg">index, flagIndex</span>)
: [[API GetInsertItemsLeftToRight|GetInsertItemsLeftToRight]]()
: [[API GetSortBagsRightToLeft|GetSortBagsRightToLeft]]()
: [[API IsBagSlotFlagEnabledOnOtherBags|IsBagSlotFlagEnabledOnOtherBags]](<span class="apiarg">index, flagIndex</span>)
: [[API IsInventoryItemProfessionBag|IsInventoryItemProfessionBag]](<span class="apiarg">unit, slot</span>)
: [[API PutItemInBackpack|PutItemInBackpack]]() - Attempts to place item in backpack (bag slot 0).
: [[API PutItemInBag|PutItemInBag]](<span class="apiarg">inventoryId</span>) - Attempts to place item in a specific bag.
: [[API SetBackpackAutosortDisabled|SetBackpackAutosortDisabled]](<span class="apiarg">disable</span>)
: [[API SetBagPortraitTexture|SetBagPortraitTexture]](<span class="apiarg">texture, slot</span>)
: [[API SetBagSlotFlag|SetBagSlotFlag]](<span class="apiarg">index, flagIndex, checked</span>)
: [[API SetBarSlotFromIntro|SetBarSlotFromIntro]](<span class="apiarg">slot</span>)
: [[API SetInsertItemsLeftToRight|SetInsertItemsLeftToRight]](<span class="apiarg">disable</span>)
: [[API SetItemSearch|SetItemSearch]](<span class="apiarg">search</span>)
: [[API SetSortBagsRightToLeft|SetSortBagsRightToLeft]](<span class="apiarg">disable</span>)
: [[API SortBags|SortBags]]()
: <small>UI</small> {{api|CloseAllBags}}(<span class="apiarg">callingFrame, forceUpdate</span>)
: <small>UI</small> {{api|CloseBackpack}}()
: <small>UI</small> {{api|CloseBag}}(<span class="apiarg">bagID</span>)
: <small>UI</small> {{api|IsBagOpen}}(<span class="apiarg">bagID</span>)
: <small>UI</small> {{api|OpenAllBags}}(<span class="apiarg">callingFrame, forceUpdate</span>)
: <small>UI</small> {{api|OpenBackpack}}()
: <small>UI</small> {{api|OpenBag}}(<span class="apiarg">bagID, force</span>)
: <small>UI</small> {{api|ToggleAllBags}}()
: <small>UI</small> {{api|ToggleBackpack}}() - Toggles your backpack open/closed.
: <small>UI</small> {{api|ToggleBag|ToggleBag}}(<span class="apiarg">bagID</span>) - Opens or closes the specified bag.

==== Containers ====
: [[API GetContainerFreeSlots|GetContainerFreeSlots]](<span class="apiarg">index [, returnTable]</span>)
: [[API GetContainerItemCooldown|GetContainerItemCooldown]](<span class="apiarg">bagID, slot</span>)
: [[API GetContainerItemDurability|GetContainerItemDurability]](<span class="apiarg">bag, slot</span>) - Get current and maximum durability of an item in the character's bags.
: [[API GetContainerItemEquipmentSetInfo|GetContainerItemEquipmentSetInfo]](<span class="apiarg">index, slot</span>)
: [[API GetContainerItemID|GetContainerItemID]](<span class="apiarg">bag, slot</span>) - Returns the item ID of the item in a particular container slot.
: [[API GetContainerItemInfo|GetContainerItemInfo]](<span class="apiarg">bagID, slot</span>) - Get the info for an item in one of the player's bags.
: [[API GetContainerItemLink|GetContainerItemLink]](<span class="apiarg">bagID, slot</span>) - Returns a link of the object located in the specified slot of a specified bag.
: [[API GetContainerItemPurchaseCurrency|GetContainerItemPurchaseCurrency]](<span class="apiarg">bag, slot, itemIndex [, isEquipped]</span>)
: [[API GetContainerItemPurchaseInfo|GetContainerItemPurchaseInfo]](<span class="apiarg">index, slot [, isEquipped]</span>)
: [[API GetContainerItemPurchaseItem|GetContainerItemPurchaseItem]](<span class="apiarg">bag, slot, itemIndex [, isEquipped]</span>)
: [[API GetContainerItemQuestInfo|GetContainerItemQuestInfo]](<span class="apiarg">bag, slot</span>) - Returns information about quest and quest-starting items in your bags.
: [[API GetContainerNumFreeSlots|GetContainerNumFreeSlots]](<span class="apiarg">bagID</span>) - Returns the number of free slots and type of slots in the bag specified by the index.
: [[API GetContainerNumSlots|GetContainerNumSlots]](<span class="apiarg">bagID</span>) - Returns the total number of slots in the bag specified by the index.
: [[API IsContainerFiltered|IsContainerFiltered]](<span class="apiarg">index</span>)
: [[API IsContainerItemAnUpgrade|IsContainerItemAnUpgrade]](<span class="apiarg">index, slot</span>)
: [[API SplitContainerItem|SplitContainerItem]](<span class="apiarg">bagID, slot, amount</span>) - Picks up part of a stack.
: [[API UseContainerItem|UseContainerItem]](<span class="apiarg">bagID, slot [, target]</span>) - Performs a "right click" action on, or targeted use of, on an item in bags.

==== Inventory ====
These functions manage your inventory, specifically '''equipped items'''.
: [[API CancelPendingEquip|CancelPendingEquip]](<span class="apiarg">index</span>) - This function is used to cancel a pending equip.
: <small>PROTECTED</small> [[API ConfirmBindOnUse|ConfirmBindOnUse]]()
: <small>PROTECTED</small> [[API ConfirmNoRefundOnUse|ConfirmNoRefundOnUse]]()
: [[API ContainerIDToInventoryID|ContainerIDToInventoryID]](<span class="apiarg">bagID</span>)
: [[API EquipPendingItem|EquipPendingItem]](<span class="apiarg">invSlot</span>) - Equips the currently pending Bind-on-Equip or Bind-on-Pickup item from the specified inventory slot.
: [[API GetAverageItemLevel|GetAverageItemLevel]]() - Returns the character's current average iLevel and current average iLevel equipped.
: [[API GetInventoryAlertStatus|GetInventoryAlertStatus]](<span class="apiarg">index</span>) - Returns one of several codes describing the "status" of an equipped item.
: [[API GetInventoryItemBroken|GetInventoryItemBroken]](<span class="apiarg">unit, invSlot</span>) - Determine if an inventory item is broken (no durability).
: [[API GetInventoryItemCooldown|GetInventoryItemCooldown]](<span class="apiarg">unit, invSlot</span>) - Get cooldown information for an inventory item.
: [[API GetInventoryItemCount|GetInventoryItemCount]](<span class="apiarg">unit, invSlot</span>) - Determine the quantity of an item in an inventory slot.
: [[API GetInventoryItemDurability|GetInventoryItemDurability]](<span class="apiarg">invSlot</span>) - Returns the maximum and remaining durability points for an inventory item.
: [[API GetInventoryItemID|GetInventoryItemID]](<span class="apiarg">unit, invSlot</span>) - Returns the item id of the item in the specified inventory slot.
: [[API GetInventoryItemLink|GetInventoryItemLink]](<span class="apiarg">unit, invSlot</span>) - Returns an [[itemLink]] for an inventory (equipped) item.
: [[API GetInventoryItemQuality|GetInventoryItemQuality]](<span class="apiarg">unit, invSlot</span>) - Returns the quality of an inventory item.
: [[API GetInventoryItemTexture|GetInventoryItemTexture]](<span class="apiarg">unit, invSlot</span>) - Returns the texture for an inventory item.
: [[API GetInventorySlotInfo|GetInventorySlotInfo]](<span class="apiarg">invSlotName</span>) - Get the info for a named inventory slot (slot ID and texture)
: [[API HasWandEquipped|HasWandEquipped]]() - Returns 1 if a wand is equipped, false otherwise.
: [[API IsInventoryItemLocked|IsInventoryItemLocked]](<span class="apiarg">id</span>) - Returns whether an inventory item is locked, usually as it awaits pending action.
: [[API SetInventoryPortraitTexture|SetInventoryPortraitTexture]](<span class="apiarg">texture, unit, slot</span>)
: [[API UpdateInventoryAlertStatus|UpdateInventoryAlertStatus]]()
: <small>PROTECTED</small> [[API UseInventoryItem|UseInventoryItem]](<span class="apiarg">invSlot</span>) - Use an item in a specific inventory slot.

=== Bank ===
Relates to the [[Bank]].
: [[API BankButtonIDToInvSlotID|BankButtonIDToInvSlotID]](<span class="apiarg">buttonID, isBag</span>) - Returns the ID number of a bank button or bag in terms of inventory slot ID.
: [[API BuyReagentBank|BuyReagentBank]]()
: [[API CloseBankFrame|CloseBankFrame]]() - Close the bank frame if it's open.
: [[API DepositReagentBank|DepositReagentBank]]()
: [[API GetBankAutosortDisabled|GetBankAutosortDisabled]]()
: [[API GetBankBagSlotFlag|GetBankBagSlotFlag]]()
: [[API GetBankSlotCost|GetBankSlotCost]](<span class="apiarg">numSlots</span>) - Returns the cost of the next bank slot.
: [[API GetNumBankSlots|GetNumBankSlots]]() - Returns total purchased bank bag slots, and a flag indicating if it's full.
: [[API GetReagentBankCost|GetReagentBankCost]]()
: [[API IsBagSlotFlagEnabledOnOtherBankBags|IsBagSlotFlagEnabledOnOtherBankBags]]()
: [[API IsReagentBankUnlocked|IsReagentBankUnlocked]]()
: [[API PurchaseSlot|PurchaseSlot]]() - Buys another bank slot if available.
: [[API ReagentBankButtonIDToInvSlotID|ReagentBankButtonIDToInvSlotID]]()
: [[API SetBankAutosortDisabled|SetBankAutosortDisabled]]()
: [[API SetBankBagSlotFlag|SetBankBagSlotFlag]]()
: [[API SortBankBags|SortBankBags]]()
: [[API SortReagentBankBags|SortReagentBankBags]]()

==== Guild Bank ====
The [[Guild bank]] was added in [[Patch 2.3.0]]
: [[API AutoStoreGuildBankItem|AutoStoreGuildBankItem]](<span class="apiarg">tab, slot</span>) - Withdraws an item from the bank, and automatically stores it in the player's inventory.
: [[API BuyGuildBankTab|BuyGuildBankTab]]() - Buys a guild bank tab, without confirmation.
: [[API CanEditGuildBankTabInfo|CanEditGuildBankTabInfo]]()
: [[API CanGuildBankRepair|CanGuildBankRepair]]()
: [[API CanWithdrawGuildBankMoney|CanWithdrawGuildBankMoney]]() - Boolean, true if player is permitted to withdraw funds. No bank proximity required.
: [[API CloseGuildBankFrame|CloseGuildBankFrame]]() - Closes the guild bank frame.
: [[API DepositGuildBankMoney|DepositGuildBankMoney]](<span class="apiarg">money</span>) - Deposits "money" amount in copper.
: [[API GetCurrentGuildBankTab|GetCurrentGuildBankTab]]() - Integer of selected tab, >= 1.
: [[API GetGuildBankBonusDepositMoney|GetGuildBankBonusDepositMoney]]()
: [[API GetGuildBankItemInfo|GetGuildBankItemInfo]](<span class="apiarg">tab, slot</span>) - Returns texture, amount and integer 1 or nil depending on locked state.
: [[API GetGuildBankItemLink|GetGuildBankItemLink]](<span class="apiarg">tab, slot</span>) - Returns itemLink.
: [[API GetGuildBankMoney|GetGuildBankMoney]]() - Integer, funds available in copper.
: [[API GetGuildBankMoneyTransaction|GetGuildBankMoneyTransaction]](<span class="apiarg">index</span>) - No bank proximity required, however QueryGuildBankLog function requires proximity.
: [[API GetGuildBankTabCost|GetGuildBankTabCost]]() - Integer OR nil - cost in copper OR no tabs available to buy.
: [[API GetGuildBankTabInfo|GetGuildBankTabInfo]](<span class="apiarg">tab</span>) - Returns the name and icon of the guild bank tab queried.
: [[API GetGuildBankTabPermissions|GetGuildBankTabPermissions]](<span class="apiarg">tab</span>) - Gets display / player's access info. Limited data available without bank proximity.
: [[API GetGuildBankText|GetGuildBankText]](<span class="apiarg">tab</span>) - Returns info text for a tab.
: [[API GetGuildBankTransaction|GetGuildBankTransaction]](<span class="apiarg">tab, index</span>) - Requires Guild Bank Proximity.
: [[API GetGuildBankWithdrawGoldLimit|GetGuildBankWithdrawGoldLimit]]() - Returns withdraw limit for currently selected rank in guild control.
: [[API GetGuildBankWithdrawMoney|GetGuildBankWithdrawMoney]]()
: [[API GetNumGuildBankMoneyTransactions|GetNumGuildBankMoneyTransactions]]() - Returns number of money log entries.
: [[API GetNumGuildBankTabs|GetNumGuildBankTabs]]() - Integer count of bought tabs, >= 0. No bank proximity required.
: [[API GetNumGuildBankTransactions|GetNumGuildBankTransactions]](<span class="apiarg">tab</span>) - Returns number of log transactions for tab "tab".
: [[API QueryGuildBankLog|QueryGuildBankLog]](<span class="apiarg">tab</span>) - Updates bank log data from the server, called before all transaction functions. "Money tab" is MAX_GUILDBANK_TABS+1.
: [[API QueryGuildBankTab|QueryGuildBankTab]](<span class="apiarg">tab</span>) - Updates bank tab data from the server, called before all item functions.
: [[API QueryGuildBankText|QueryGuildBankText]]()
: [[API SetCurrentGuildBankTab|SetCurrentGuildBankTab]](<span class="apiarg">tab</span>) - Select different bank tab in the UI.
: [[API SetGuildBankTabInfo|SetGuildBankTabInfo]](<span class="apiarg">tab, name, icon</span>) - Modifies name and icon for tab.
: [[API SetGuildBankTabItemWithdraw|SetGuildBankTabItemWithdraw]]()
: [[API SetGuildBankTabPermissions|SetGuildBankTabPermissions]](<span class="apiarg">tab, index, enabled</span>) - Modifies the permissions for the GuildBankTab. Guild Leader Only.
: [[API SetGuildBankText|SetGuildBankText]](<span class="apiarg">tab, infoText</span>) - Modifies info text for a tab.
: [[API SetGuildBankWithdrawGoldLimit|SetGuildBankWithdrawGoldLimit]](<span class="apiarg">amount</span>) - Sets the gold withdraw limit from the guild bank. Guild Leader Only.
: [[API SplitGuildBankItem|SplitGuildBankItem]](<span class="apiarg">tab, slot, amount</span>) - Picks up part of a stack.
: [[API WithdrawGuildBankMoney|WithdrawGuildBankMoney]](<span class="apiarg">money</span>) - Withdraws "money" copper from the guild bank.

==== Void Storage ====
[[Void Storage]] was added in [[Patch 4.3.0]]
: [[API CanUseVoidStorage|CanUseVoidStorage]]() - Returns if the player has access to the Void Storage.
: [[API ClearVoidTransferDepositSlot|ClearVoidTransferDepositSlot]](<span class="apiarg">slotIndex</span>) - Clears the specified Void Transfer deposit slot.
: [[API ClickVoidStorageSlot|ClickVoidStorageSlot]](<span class="apiarg">slotIndex [, isRightClick]</span>) - Clicks the specified Void Storage slot.
: [[API ClickVoidTransferDepositSlot|ClickVoidTransferDepositSlot]](<span class="apiarg">slotIndex [, isRightClick]</span>) - Clicks the specified Void Transfer deposit slot.
: [[API ClickVoidTransferWithdrawalSlot|ClickVoidTransferWithdrawalSlot]](<span class="apiarg">slotIndex [, isRightClick]</span>) - Clicks the specified Void Transfer withdrawal slot.
: [[API CloseVoidStorageFrame|CloseVoidStorageFrame]]()
: [[API ExecuteVoidTransfer|ExecuteVoidTransfer]]() - Applies all pending void transfers (and pays for the cost of any deposited items).
: [[API GetNumVoidTransferDeposit|GetNumVoidTransferDeposit]]() - Returns the number of items being deposited into the Void Storage.
: [[API GetNumVoidTransferWithdrawal|GetNumVoidTransferWithdrawal]]() - Returns the number of items being withdrawed from the Void Storage.
: [[API GetVoidItemHyperlinkString|GetVoidItemHyperlinkString]](<span class="apiarg">slotIndex</span>) - Returns the item link of an item in void storage.
: [[API GetVoidItemInfo|GetVoidItemInfo]](<span class="apiarg">slotIndex</span>) - Returns <code>itemID, textureName, locked, recentDeposit, isFiltered</code>.
: [[API GetVoidTransferCost|GetVoidTransferCost]]() - Returns the total Void Transfer cost.
: [[API GetVoidTransferDepositInfo|GetVoidTransferDepositInfo]](<span class="apiarg">slotIndex</span>) - Returns <code>itemID, textureName</code>.
: [[API GetVoidTransferWithdrawalInfo|GetVoidTransferWithdrawalInfo]](<span class="apiarg">slotIndex</span>) - Returns <code>itemID, textureName</code>.
: [[API IsVoidStorageReady|IsVoidStorageReady]]()
: [[API UnlockVoidStorage|UnlockVoidStorage]]() - Pays for and activates the Void Storage.
: [[API GetVoidStorageSlotPageIndex|GetVoidStorageSlotPageIndex]](<span class="apiarg">slot</span>)
: [[API GetVoidUnlockCost|GetVoidUnlockCost]]()

=== Books ===
Relates to item text from books, etc.
: [[API CloseItemText|CloseItemText]]() - Close an open item text (book, plaque, etc).
: [[API ItemTextGetCreator|ItemTextGetCreator]]() - Get the creator of the current text (if player-created).
: [[API ItemTextGetItem|ItemTextGetItem]]() - Get the name of the text.
: [[API ItemTextGetMaterial|ItemTextGetMaterial]]() - Get the material on which the text is printed.
: [[API ItemTextGetPage|ItemTextGetPage]]() - Get the page number of the currently viewed page.
: [[API ItemTextGetText|ItemTextGetText]]() - Get the page contents of the currently viewed page.
: [[API ItemTextHasNextPage|ItemTextHasNextPage]]() - Determine if there is another page after the current one.
: [[API ItemTextIsFullPage|ItemTextIsFullPage]]()
: [[API ItemTextNextPage|ItemTextNextPage]]() - Request the next page of the text.
: [[API ItemTextPrevPage|ItemTextPrevPage]]() - Request the previous page of the text.

=== Calendar ===
The [[Calendar]] was added in [[Patch 3.0.1]] and reworked in [[Patch 8.0.1]]
: <small>HW</small> [[API C_Calendar.AddEvent|C_Calendar.AddEvent]]() - Saves the new event currently being created to the server.
: [[API C_Calendar.AreNamesReady|C_Calendar.AreNamesReady]]() : <span class="apiret">ready</span>
: [[API C_Calendar.CanAddEvent|C_Calendar.CanAddEvent]]() : <span class="apiret">canAddEvent</span> - Returns whether the player can add an event.
: [[API C_Calendar.CanSendInvite|C_Calendar.CanSendInvite]]() : <span class="apiret">canSendInvite</span> - Returns whether the player can send invites.
: [[API C_Calendar.CloseEvent|C_Calendar.CloseEvent]]() - Closes the selected event without saving it.
: [[API C_Calendar.ContextMenuEventCanComplain|C_Calendar.ContextMenuEventCanComplain]](<span class="apiarg">offsetMonths, monthDay, eventIndex</span>) : <span class="apiret">canComplain</span> - Returns whether the player can report the event as spam.
: [[API C_Calendar.ContextMenuEventCanEdit|C_Calendar.ContextMenuEventCanEdit]](<span class="apiarg">offsetMonths, monthDay, eventIndex</span>) : <span class="apiret">canEdit</span> - Returns whether the player can edit the event.
: [[API C_Calendar.ContextMenuEventCanRemove|C_Calendar.ContextMenuEventCanRemove]](<span class="apiarg">offsetMonths, monthDay, eventIndex</span>) : <span class="apiret">canRemove</span> - Returns whether the player can remove the event.
: [[API C_Calendar.ContextMenuEventClipboard|C_Calendar.ContextMenuEventClipboard]]() : <span class="apiret">exists</span>
: [[API C_Calendar.ContextMenuEventComplain|C_Calendar.ContextMenuEventComplain]]() - Reports the event as spam.
: [[API C_Calendar.ContextMenuEventCopy|C_Calendar.ContextMenuEventCopy]]() - Copies the event to the clipboard.
: [[API C_Calendar.ContextMenuEventGetCalendarType|C_Calendar.ContextMenuEventGetCalendarType]]() : <span class="apiret">calendarType</span>
: [[API C_Calendar.ContextMenuEventPaste|C_Calendar.ContextMenuEventPaste]](<span class="apiarg">offsetMonths, monthDay</span>) - Pastes the clipboard event to the date.
: [[API C_Calendar.ContextMenuEventRemove|C_Calendar.ContextMenuEventRemove]]() - Deletes the event.
: [[API C_Calendar.ContextMenuEventSignUp|C_Calendar.ContextMenuEventSignUp]]()
: [[API C_Calendar.ContextMenuGetEventIndex|C_Calendar.ContextMenuGetEventIndex]]() : <span class="apiret">info</span>
: [[API C_Calendar.ContextMenuInviteAvailable|C_Calendar.ContextMenuInviteAvailable]]() - Accepts the invitation to the event.
: [[API C_Calendar.ContextMenuInviteDecline|C_Calendar.ContextMenuInviteDecline]]() - Declines the invitation to the event.
: [[API C_Calendar.ContextMenuInviteRemove|C_Calendar.ContextMenuInviteRemove]]() - Removes the event from the calendar.
: [[API C_Calendar.ContextMenuInviteTentative|C_Calendar.ContextMenuInviteTentative]]()
: [[API C_Calendar.ContextMenuSelectEvent|C_Calendar.ContextMenuSelectEvent]](<span class="apiarg">offsetMonths, monthDay, eventIndex</span>)
: [[API C_Calendar.CreateCommunitySignUpEvent|C_Calendar.CreateCommunitySignUpEvent]]()
: [[API C_Calendar.CreateGuildAnnouncementEvent|C_Calendar.CreateGuildAnnouncementEvent]]()
: [[API C_Calendar.CreateGuildSignUpEvent|C_Calendar.CreateGuildSignUpEvent]]()
: [[API C_Calendar.CreatePlayerEvent|C_Calendar.CreatePlayerEvent]]() - Creates a new calendar event candidate for the player.
: [[API C_Calendar.EventAvailable|C_Calendar.EventAvailable]]() - Accepts the invitation to the currently open event.
: [[API C_Calendar.EventCanEdit|C_Calendar.EventCanEdit]]() : <span class="apiret">canEdit</span> - Returns whether the event can be edited.
: [[API C_Calendar.EventClearAutoApprove|C_Calendar.EventClearAutoApprove]]() - Turns off automatic confirmations.
: [[API C_Calendar.EventClearLocked|C_Calendar.EventClearLocked]]() - Unlocks the event.
: [[API C_Calendar.EventClearModerator|C_Calendar.EventClearModerator]](<span class="apiarg">inviteIndex</span>)
: [[API C_Calendar.EventDecline|C_Calendar.EventDecline]]() - Declines the invitation to the currently open event.
: [[API C_Calendar.EventGetCalendarType|C_Calendar.EventGetCalendarType]]() : <span class="apiret">calendarType</span>
: [[API C_Calendar.EventGetClubId|C_Calendar.EventGetClubId]]() : <span class="apiret">info</span>
: [[API C_Calendar.EventGetInvite|C_Calendar.EventGetInvite]](<span class="apiarg">eventIndex</span>) : <span class="apiret">info</span> - Returns status information for an invitee for the currently opened event.
: [[API C_Calendar.EventGetInviteResponseTime|C_Calendar.EventGetInviteResponseTime]](<span class="apiarg">eventIndex</span>) : <span class="apiret">time</span>
: [[API C_Calendar.EventGetInviteSortCriterion|C_Calendar.EventGetInviteSortCriterion]]() : <span class="apiret">criterion, reverse</span>
: [[API C_Calendar.EventGetSelectedInvite|C_Calendar.EventGetSelectedInvite]]() : <span class="apiret">inviteIndex</span>
: [[API C_Calendar.EventGetStatusOptions|C_Calendar.EventGetStatusOptions]](<span class="apiarg">eventIndex</span>) : <span class="apiret">options</span>
: [[API C_Calendar.EventGetTextures|C_Calendar.EventGetTextures]](<span class="apiarg">eventType</span>) : <span class="apiret">textures</span>
: [[API C_Calendar.EventGetTypes|C_Calendar.EventGetTypes]]() : <span class="apiret">types</span>
: [[API C_Calendar.EventGetTypesDisplayOrdered|C_Calendar.EventGetTypesDisplayOrdered]]() : <span class="apiret">infos</span>
: [[API C_Calendar.EventHasPendingInvite|C_Calendar.EventHasPendingInvite]]() : <span class="apiret">hasPendingInvite</span> - Returns whether the player has an unanswered invitation to the currently selected event.
: [[API C_Calendar.EventHaveSettingsChanged|C_Calendar.EventHaveSettingsChanged]]() : <span class="apiret">haveSettingsChanged</span> - Returns whether the currently opened event has been modified.
: [[API C_Calendar.EventInvite|C_Calendar.EventInvite]](<span class="apiarg">name</span>) - Invites a player to the currently selected event.
: [[API C_Calendar.EventRemoveInvite|C_Calendar.EventRemoveInvite]](<span class="apiarg">inviteIndex</span>)
: [[API C_Calendar.EventRemoveInviteByGuid|C_Calendar.EventRemoveInviteByGuid]](<span class="apiarg">guid</span>)
: [[API C_Calendar.EventSelectInvite|C_Calendar.EventSelectInvite]](<span class="apiarg">inviteIndex</span>)
: [[API C_Calendar.EventSetAutoApprove|C_Calendar.EventSetAutoApprove]]()
: [[API C_Calendar.EventSetClubId|C_Calendar.EventSetClubId]](<span class="apiarg">[clubId]</span>)
: [[API C_Calendar.EventSetDate|C_Calendar.EventSetDate]](<span class="apiarg">month, monthDay, year</span>) - Sets the date for the currently opened event.
: [[API C_Calendar.EventSetDescription|C_Calendar.EventSetDescription]](<span class="apiarg">description</span>)
: [[API C_Calendar.EventSetInviteStatus|C_Calendar.EventSetInviteStatus]](<span class="apiarg">eventIndex, status</span>) - Sets the invitation status of a player to the current event.
: [[API C_Calendar.EventSetLocked|C_Calendar.EventSetLocked]]()
: [[API C_Calendar.EventSetModerator|C_Calendar.EventSetModerator]](<span class="apiarg">inviteIndex</span>)
: [[API C_Calendar.EventSetTextureID|C_Calendar.EventSetTextureID]](<span class="apiarg">textureIndex</span>)
: [[API C_Calendar.EventSetTime|C_Calendar.EventSetTime]](<span class="apiarg">hour, minute</span>) - Sets the time for the currently opened event.
: [[API C_Calendar.EventSetTitle|C_Calendar.EventSetTitle]](<span class="apiarg">title</span>) - Sets the title for the currently opened event.
: [[API C_Calendar.EventSetType|C_Calendar.EventSetType]](<span class="apiarg">typeIndex</span>) - Sets the event type for the current calendar event.
: [[API C_Calendar.EventSignUp|C_Calendar.EventSignUp]]()
: [[API C_Calendar.EventSortInvites|C_Calendar.EventSortInvites]](<span class="apiarg">criterion, reverse</span>)
: [[API C_Calendar.EventTentative|C_Calendar.EventTentative]]()
: [[API C_Calendar.GetClubCalendarEvents|C_Calendar.GetClubCalendarEvents]](<span class="apiarg">clubId, startTime, endTime</span>) : <span class="apiret">events</span>
: [[API C_Calendar.GetDayEvent|C_Calendar.GetDayEvent]](<span class="apiarg">monthOffset, monthDay, index</span>) : <span class="apiret">event</span> - Retrieve information about the specified event.
: [[API C_Calendar.GetDefaultGuildFilter|C_Calendar.GetDefaultGuildFilter]]() : <span class="apiret">info</span>
: [[API C_Calendar.GetEventIndex|C_Calendar.GetEventIndex]]() : <span class="apiret">info</span>
: [[API C_Calendar.GetEventIndexInfo|C_Calendar.GetEventIndexInfo]](<span class="apiarg">eventID [, monthOffset, monthDay]</span>) : <span class="apiret">eventIndexInfo</span>
: [[API C_Calendar.GetEventInfo|C_Calendar.GetEventInfo]]() : <span class="apiret">info</span> - Returns detailed information about an event.
: [[API C_Calendar.GetFirstPendingInvite|C_Calendar.GetFirstPendingInvite]](<span class="apiarg">offsetMonths, monthDay</span>) : <span class="apiret">firstPendingInvite</span>
: [[API C_Calendar.GetGuildEventInfo|C_Calendar.GetGuildEventInfo]](<span class="apiarg">index</span>) : <span class="apiret">info</span>
: [[API C_Calendar.GetGuildEventSelectionInfo|C_Calendar.GetGuildEventSelectionInfo]](<span class="apiarg">index</span>) : <span class="apiret">info</span>
: [[API C_Calendar.GetHolidayInfo|C_Calendar.GetHolidayInfo]](<span class="apiarg">monthOffset, monthDay, index</span>) : <span class="apiret">event</span> - Returns seasonal holiday info.
: [[API C_Calendar.GetMaxCreateDate|C_Calendar.GetMaxCreateDate]]() : <span class="apiret">maxCreateDate</span> - Returns the last day supported by the Calendar API.
: [[API C_Calendar.GetMinDate|C_Calendar.GetMinDate]]() : <span class="apiret">minDate</span> - Returns the first day supported by the Calendar API.
: [[API C_Calendar.GetMonthInfo|C_Calendar.GetMonthInfo]](<span class="apiarg">[offsetMonths]</span>) : <span class="apiret">monthInfo</span> - Returns information about the calendar month by offset.
: [[API C_Calendar.GetNextClubId|C_Calendar.GetNextClubId]]() : <span class="apiret">clubId</span>
: [[API C_Calendar.GetNumDayEvents|C_Calendar.GetNumDayEvents]](<span class="apiarg">offsetMonths, monthDay</span>) : <span class="apiret">numDayEvents</span> - Returns the number of events for a given day/month offset.
: [[API C_Calendar.GetNumGuildEvents|C_Calendar.GetNumGuildEvents]]() : <span class="apiret">numGuildEvents</span>
: [[API C_Calendar.GetNumInvites|C_Calendar.GetNumInvites]]() : <span class="apiret">num</span> - Returns the number of invitees for the currently opened event.
: [[API C_Calendar.GetNumPendingInvites|C_Calendar.GetNumPendingInvites]]() : <span class="apiret">num</span>
: [[API C_Calendar.GetRaidInfo|C_Calendar.GetRaidInfo]](<span class="apiarg">offsetMonths, monthDay, eventIndex</span>) : <span class="apiret">info</span>
: [[API C_Calendar.IsActionPending|C_Calendar.IsActionPending]]() : <span class="apiret">actionPending</span>
: [[API C_Calendar.IsEventOpen|C_Calendar.IsEventOpen]]() : <span class="apiret">isOpen</span>
: [[API C_Calendar.MassInviteCommunity|C_Calendar.MassInviteCommunity]](<span class="apiarg">clubId, minLevel, maxLevel [, maxRankOrder]</span>)
: [[API C_Calendar.MassInviteGuild|C_Calendar.MassInviteGuild]](<span class="apiarg">minLevel, maxLevel, maxRankOrder</span>)
: [[API C_Calendar.OpenCalendar|C_Calendar.OpenCalendar]]() - Requests calendar information from the server. Does not open the calendar frame.
: [[API C_Calendar.OpenEvent|C_Calendar.OpenEvent]](<span class="apiarg">offsetMonths, monthDay, index</span>) : <span class="apiret">success</span> - Establishes an event for future calendar API calls
: [[API C_Calendar.RemoveEvent|C_Calendar.RemoveEvent]]() - Removes the selected event from the calendar (invitees only).
: [[API C_Calendar.SetAbsMonth|C_Calendar.SetAbsMonth]](<span class="apiarg">month, year</span>) - Sets the reference month and year for functions which use a month offset.
: [[API C_Calendar.SetMonth|C_Calendar.SetMonth]](<span class="apiarg">offsetMonths</span>)
: [[API C_Calendar.SetNextClubId|C_Calendar.SetNextClubId]](<span class="apiarg">[clubId]</span>)
: <small>HW</small> [[API C_Calendar.UpdateEvent|C_Calendar.UpdateEvent]]() - Saves the selected event.

=== Chat ===
These are specific to chat messages and channels.
: [[API C_ChatInfo.GetChannelInfoFromIdentifier|C_ChatInfo.GetChannelInfoFromIdentifier]](<span class="apiarg">channelIdentifier</span>) : <span class="apiret">info</span>
: [[API C_ChatInfo.GetChannelRosterInfo|C_ChatInfo.GetChannelRosterInfo]](<span class="apiarg">channelIndex, rosterIndex</span>) : <span class="apiret">name, owner, moderator, guid</span>
: [[API C_ChatInfo.GetChannelRuleset|C_ChatInfo.GetChannelRuleset]](<span class="apiarg">channelIndex</span>) : <span class="apiret">ruleset</span>
: [[API C_ChatInfo.GetChannelRulesetForChannelID|C_ChatInfo.GetChannelRulesetForChannelID]](<span class="apiarg">channelID</span>) : <span class="apiret">ruleset</span>
: [[API C_ChatInfo.GetChannelShortcut|C_ChatInfo.GetChannelShortcut]](<span class="apiarg">channelIndex</span>) : <span class="apiret">shortcut</span>
: [[API C_ChatInfo.GetChannelShortcutForChannelID|C_ChatInfo.GetChannelShortcutForChannelID]](<span class="apiarg">channelID</span>) : <span class="apiret">shortcut</span>
: [[API C_ChatInfo.GetChatTypeName|C_ChatInfo.GetChatTypeName]](<span class="apiarg">typeID</span>) : <span class="apiret">name</span>
: [[API C_ChatInfo.GetClubStreamIDs|C_ChatInfo.GetClubStreamIDs]](<span class="apiarg">clubID</span>) : <span class="apiret">ids</span>
: [[API C_ChatInfo.GetGeneralChannelID|C_ChatInfo.GetGeneralChannelID]]() : <span class="apiret">channelID</span>
: [[API C_ChatInfo.GetGeneralChannelLocalID|C_ChatInfo.GetGeneralChannelLocalID]]() : <span class="apiret">localID</span>
: [[API C_ChatInfo.GetMentorChannelID|C_ChatInfo.GetMentorChannelID]]() : <span class="apiret">channelID</span>
: [[API C_ChatInfo.GetNumActiveChannels|C_ChatInfo.GetNumActiveChannels]]() : <span class="apiret">numChannels</span>
: [[API C_ChatInfo.GetNumReservedChatWindows|C_ChatInfo.GetNumReservedChatWindows]]() : <span class="apiret">numReserved</span>
: [[API C_ChatInfo.IsChannelRegional|C_ChatInfo.IsChannelRegional]](<span class="apiarg">channelIndex</span>) : <span class="apiret">isRegional</span>
: [[API C_ChatInfo.IsChannelRegionalForChannelID|C_ChatInfo.IsChannelRegionalForChannelID]](<span class="apiarg">channelID</span>) : <span class="apiret">isRegional</span>
: [[API C_ChatInfo.IsPartyChannelType|C_ChatInfo.IsPartyChannelType]](<span class="apiarg">channelType</span>) : <span class="apiret">isPartyChannelType</span>
: [[API C_ChatInfo.IsRegionalServiceAvailable|C_ChatInfo.IsRegionalServiceAvailable]]() : <span class="apiret">available</span>
: [[API C_ChatInfo.IsValidChatLine|C_ChatInfo.IsValidChatLine]](<span class="apiarg">[chatLine]</span>) : <span class="apiret">isValid</span>
: [[API C_ChatInfo.ReplaceIconAndGroupExpressions|C_ChatInfo.ReplaceIconAndGroupExpressions]](<span class="apiarg">input [, noIconReplacement, noGroupReplacement]</span>) : <span class="apiret">output</span> - Replaces icon and group tags like {rt4}, {diamond} and {g1}.
: [[API C_ChatInfo.ResetDefaultZoneChannels|C_ChatInfo.ResetDefaultZoneChannels]]()
: [[API C_ChatInfo.SwapChatChannelsByChannelIndex|C_ChatInfo.SwapChatChannelsByChannelIndex]](<span class="apiarg">firstChannelIndex, secondChannelIndex</span>)
: [[API C_ChatBubbles.GetAllChatBubbles|C_ChatBubbles.GetAllChatBubbles]](<span class="apiarg">[includeForbidden]</span>) : <span class="apiret">chatBubbles</span> - Returns all active chat bubbles.
: [[API CancelEmote|CancelEmote]]() - Stops an active emote, e.g. when closing the map.
: [[API ChannelBan|ChannelBan]](<span class="apiarg">channel, name</span>) - Bans a player from the specified channel.
: [[API ChannelInvite|ChannelInvite]](<span class="apiarg">channel, name</span>) - Invites the specified user to the channel.
: [[API ChannelKick|ChannelKick]](<span class="apiarg">channel, name</span>) - Kicks the specified user from the channel.
: [[API ChannelModerator|ChannelModerator]](<span class="apiarg">channel, name</span>) - Sets the specified player as the channel moderator.
: [[API ChannelToggleAnnouncements|ChannelToggleAnnouncements]](<span class="apiarg">channel</span>) - Toggles the channel to display announcements either on or off.
: [[API ChannelUnban|ChannelUnban]](<span class="apiarg">channel, name</span>) - Unbans a player from a channel.
: [[API ChannelUnmoderator|ChannelUnmoderator]](<span class="apiarg">channel, name</span>) - Takes the specified user away from the moderator status.
: [[API DeclineChannelInvite|DeclineChannelInvite]](<span class="apiarg">channel</span>)
: [[API DisplayChannelOwner|DisplayChannelOwner]](<span class="apiarg">channel</span>) - Displays the owner of the specified channel in the default chat.
: [[API DoEmote|DoEmote]](<span class="apiarg">emote [, target]</span>) - Perform a voice emote.
: [[API EnumerateServerChannels|EnumerateServerChannels]]() - Retrieves all available server channels (zone dependent).
: [[API GetAlternativeDefaultLanguage|GetAlternativeDefaultLanguage]]()
: [[API GetChannelDisplayInfo|GetChannelDisplayInfo]](<span class="apiarg">channelID</span>) -  Returns the name of the channel according to the given id.
: [[API GetChannelList|GetChannelList]]() - Retrieves joined channels.
: [[API GetChannelName|GetChannelName]](<span class="apiarg">channel or index</span>) - Retrieves the name from a specific channel.
: [[API GetDefaultLanguage|GetDefaultLanguage]](<span class="apiarg">unit</span>) - Returns the default language that the unit is speaking after logon.
: [[API GetLanguageByIndex|GetLanguageByIndex]](<span class="apiarg">index</span>) - Returns the language specified by the index.
: [[API GetNumChannelMembers|GetNumChannelMembers]]()
: [[API GetNumDisplayChannels|GetNumDisplayChannels]]()
: [[API GetNumGroupChannels|GetNumGroupChannels]]()
: [[API GetNumLanguages|GetNumLanguages]]() - Returns the number of languages your character can speak.
: [[API GetSelectedDisplayChannel|GetSelectedDisplayChannel]]()
: [[API IsDisplayChannelModerator|IsDisplayChannelModerator]]()
: [[API IsDisplayChannelOwner|IsDisplayChannelOwner]]()
: [[API JoinChannelByName|JoinChannelByName]](<span class="apiarg">channelName [, password, frameID, hasVoice]</span>) - Join the specified chat channel (with optional password, and register for specified frame).
: [[API JoinPermanentChannel|JoinPermanentChannel]](<span class="apiarg">channelName [, password, frameID, hasVoice]</span>) - Permanently join the specified chat channel (with optional password, and register for specified frame)
: [[API JoinTemporaryChannel|JoinTemporaryChannel]](<span class="apiarg">channelName [, password, frameID, hasVoice]</span>) - Temporary join the specified chat channel (with optional password, and register for specified frame)
: [[API LeaveChannelByLocalID|LeaveChannelByLocalID]](<span class="apiarg">localID</span>)
: [[API LeaveChannelByName|LeaveChannelByName]](<span class="apiarg">channel</span>) - Leaves the channel with the specified name.
: [[API ListChannelByName|ListChannelByName]](<span class="apiarg">channelMatch</span>) - Lists members in the given channel to the chat window.
: [[API ListChannels|ListChannels]]() - Lists all of the channels into the chat window.
: [[API LoggingChat|LoggingChat]](<span class="apiarg">newState</span>) - Gets or sets whether logging chat to Logs\WoWChatLog.txt is enabled.
: [[API LoggingCombat|LoggingCombat]](<span class="apiarg">newState</span>) - Gets or sets whether logging combat to Logs\WoWCombatLog.txt is enabled.
: [[API SendChatMessage|SendChatMessage]](<span class="apiarg">msg [, chatType, languageID, target]</span>) - Sends a chat message.
: [[API SetChannelOwner|SetChannelOwner]](<span class="apiarg">channel, name</span>) - Sets the channel owner.
: [[API SetChannelPassword|SetChannelPassword]](<span class="apiarg">channel, password</span>) - Changes the password of the current channel.
: [[API SetSelectedDisplayChannel|SetSelectedDisplayChannel]](<span class="apiarg">channelID</span>)

==== Chat Window ====
These are specific to chat ''window'' management.
: [[API AddChatWindowChannel|AddChatWindowChannel]](<span class="apiarg">chatFrameIndex, channel</span>) - Make a chat channel visible in a specific ChatFrame.
: [[API AddChatWindowMessages|AddChatWindowMessages]]() - Adds a messaging group to the specified chat window.
: [[API ChangeChatColor|ChangeChatColor]](<span class="apiarg">channelName, r, g, b</span>) - Update the color for a type of chat message.
: [[API GetChatTypeIndex|GetChatTypeIndex]](<span class="apiarg">type</span>) - Get the numeric ID of a type of chat message.
: [[API GetChatWindowChannels|GetChatWindowChannels]](<span class="apiarg">index</span>) - Get the chat channels received by a chat window.
: [[API GetChatWindowInfo|GetChatWindowInfo]](<span class="apiarg">index</span>) - Get setup information about a chat window.
: [[API GetChatWindowMessages|GetChatWindowMessages]](<span class="apiarg">index</span>) - Get the chat message types received by a chat window.
: [[API GetChatWindowSavedDimensions|GetChatWindowSavedDimensions]](<span class="apiarg">index</span>)
: [[API GetChatWindowSavedPosition|GetChatWindowSavedPosition]](<span class="apiarg">index</span>)
: [[API RedockChatWindows|RedockChatWindows]]()
: [[API RemoveChatWindowChannel|RemoveChatWindowChannel]](<span class="apiarg">chatFrameIndex, channel</span>) - Make a chat channel invisible (hidden) in a specific ChatFrame.
: [[API RemoveChatWindowMessages|RemoveChatWindowMessages]](<span class="apiarg">chatFrameIndex, messageGroup</span>) - Remove a set of chat messages from this window.
: [[API ResetChatColors|ResetChatColors]]()
: [[API ResetChatWindows|ResetChatWindows]]()
: [[API SetChatColorNameByClass|SetChatColorNameByClass]](<span class="apiarg">chatType, colorNameByClass</span>)
: [[API SetChatWindowAlpha|SetChatWindowAlpha]](<span class="apiarg">index, alpha</span>) - Sets the Alpha value(transparency) of ChatFrame<index> (alpha - 0-100)
: [[API SetChatWindowColor|SetChatWindowColor]](<span class="apiarg">index, r, g, b</span>) - Sets the background color of a a chat window. (r/g/b - 0-255)
: [[API SetChatWindowDocked|SetChatWindowDocked]](<span class="apiarg">index, docked</span>) - Set whether a chat window is docked. (docked - 0/1)
: [[API SetChatWindowLocked|SetChatWindowLocked]](<span class="apiarg">index, locked</span>) - Sets ChatFrame<index> so that it is or is not movable. (locked - 0/1)
: [[API SetChatWindowName|SetChatWindowName]](<span class="apiarg">index, name</span>) - Sets the alpha value of ChatFrame.
: [[API SetChatWindowSavedDimensions|SetChatWindowSavedDimensions]](<span class="apiarg">index, width, height</span>)
: [[API SetChatWindowSavedPosition|SetChatWindowSavedPosition]](<span class="apiarg">index, point, xOffsetRatio, yOffsetRatio</span>)
: [[API SetChatWindowShown|SetChatWindowShown]](<span class="apiarg">index, shown</span>) - Shows or Hides ChatFrame<index> depending on value of <shown> (shown - 0/1)
: [[API SetChatWindowSize|SetChatWindowSize]](<span class="apiarg">index, size</span>) - Sets the font size of a chat window. (size - default 14)
: [[API SetChatWindowUninteractable|SetChatWindowUninteractable]](<span class="apiarg">id, isUninteractable</span>)
: <small>UI</small> [[API ChatFrame_AddChannel|ChatFrame_AddChannel]](<span class="apiarg">chatFrame, channelName</span>) - Activate channel in chatFrame.
: <small>UI</small> [[API ChatFrame_AddMessageEventFilter|ChatFrame_AddMessageEventFilter]](<span class="apiarg">event, filterFunc</span>) - Add a chat message filtering function.
: <small>UI</small> [[API ChatFrame_GetMessageEventFilters|ChatFrame_GetMessageEventFilters]](<span class="apiarg">event</span>) - Retreive the list of chat message filtering functions.
: <small>UI</small> [[API ChatFrame_OnHyperlinkShow|ChatFrame_OnHyperlinkShow]](<span class="apiarg">reference, link, button</span>) - Called when the user clicks on a chatlink.
: <small>UI</small> [[API ChatFrame_RemoveMessageEventFilter|ChatFrame_RemoveMessageEventFilter]](<span class="apiarg">event, filterFunc</span>) - Unregister a chat message filtering function.

==== AddOn Messages ====
: [[API C_ChatInfo.GetRegisteredAddonMessagePrefixes|C_ChatInfo.GetRegisteredAddonMessagePrefixes]]() : <span class="apiret">registeredPrefixes</span> - Returns addon message prefixes the client is currently registered to receive.
: [[API C_ChatInfo.IsAddonMessagePrefixRegistered|C_ChatInfo.IsAddonMessagePrefixRegistered]](<span class="apiarg">prefix</span>) : <span class="apiret">isRegistered</span> - Returns whether the prefix is registered.
: [[API C_ChatInfo.RegisterAddonMessagePrefix|C_ChatInfo.RegisterAddonMessagePrefix]](<span class="apiarg">prefix</span>) : <span class="apiret">successfulRequest</span> - Registers an addon message prefix.
: [[API C_ChatInfo.SendAddonMessage|C_ChatInfo.SendAddonMessage]](<span class="apiarg">prefix, message [, chatType, target]</span>) : <span class="apiret">success</span> - Sends a message to the hidden addon channel.
: [[API C_ChatInfo.SendAddonMessageLogged|C_ChatInfo.SendAddonMessageLogged]](<span class="apiarg">prefix, message [, chatType, target]</span>) : <span class="apiret">success</span> - Sends a message to the hidden addon channel, the messages are logged server side.

==== Communities ====
[[Guild_%26_Communities|Communities]] were added in [[Patch 8.0.1]]
: [[API C_Club.AcceptInvitation|C_Club.AcceptInvitation]](<span class="apiarg">clubId</span>)
: [[API C_Club.AddClubStreamChatChannel|C_Club.AddClubStreamChatChannel]](<span class="apiarg">clubId, streamId</span>)
: [[API C_Club.AdvanceStreamViewMarker|C_Club.AdvanceStreamViewMarker]](<span class="apiarg">clubId, streamId</span>)
: [[API C_Club.AssignMemberRole|C_Club.AssignMemberRole]](<span class="apiarg">clubId, memberId, roleId</span>)
: [[API C_Club.CanResolvePlayerLocationFromClubMessageData|C_Club.CanResolvePlayerLocationFromClubMessageData]](<span class="apiarg">clubId, streamId, epoch, position</span>) : <span class="apiret">canResolve</span>
: [[API C_Club.ClearAutoAdvanceStreamViewMarker|C_Club.ClearAutoAdvanceStreamViewMarker]]()
: [[API C_Club.ClearClubPresenceSubscription|C_Club.ClearClubPresenceSubscription]]()
: [[API C_Club.CompareBattleNetDisplayName|C_Club.CompareBattleNetDisplayName]](<span class="apiarg">clubId, lhsMemberId, rhsMemberId</span>) : <span class="apiret">comparison</span>
: [[API C_Club.CreateClub|C_Club.CreateClub]](<span class="apiarg">name, [shortName], description, clubType, avatarId</span>)
: [[API C_Club.CreateStream|C_Club.CreateStream]](<span class="apiarg">clubId, name, subject, leadersAndModeratorsOnly</span>)
: [[API C_Club.CreateTicket|C_Club.CreateTicket]](<span class="apiarg">clubId [, allowedRedeemCount, duration, defaultStreamId]</span>)
: [[API C_Club.DeclineInvitation|C_Club.DeclineInvitation]](<span class="apiarg">clubId</span>)
: [[API C_Club.DestroyClub|C_Club.DestroyClub]](<span class="apiarg">clubId</span>)
: [[API C_Club.DestroyMessage|C_Club.DestroyMessage]](<span class="apiarg">clubId, streamId, messageId</span>)
: [[API C_Club.DestroyStream|C_Club.DestroyStream]](<span class="apiarg">clubId, streamId</span>)
: [[API C_Club.DestroyTicket|C_Club.DestroyTicket]](<span class="apiarg">clubId, ticketId</span>)
: [[API C_Club.EditClub|C_Club.EditClub]](<span class="apiarg">clubId [, name, shortName, description, avatarId, broadcast]</span>)
: [[API C_Club.EditMessage|C_Club.EditMessage]](<span class="apiarg">clubId, streamId, messageId, message</span>)
: [[API C_Club.EditStream|C_Club.EditStream]](<span class="apiarg">clubId, streamId [, name, subject, leadersAndModeratorsOnly]</span>)
: [[API C_Club.Flush|C_Club.Flush]]()
: [[API C_Club.FocusCommunityStreams|C_Club.FocusCommunityStreams]]()
: [[API C_Club.FocusStream|C_Club.FocusStream]](<span class="apiarg">clubId, streamId</span>) : <span class="apiret">focused</span>
: [[API C_Club.GetAssignableRoles|C_Club.GetAssignableRoles]](<span class="apiarg">clubId, memberId</span>) : <span class="apiret">assignableRoles</span>
: [[API C_Club.GetAvatarIdList|C_Club.GetAvatarIdList]](<span class="apiarg">clubType</span>) : <span class="apiret">avatarIds</span>
: [[API C_Club.GetClubCapacity|C_Club.GetClubCapacity]]() : <span class="apiret">capacity</span>
: [[API C_Club.GetClubInfo|C_Club.GetClubInfo]](<span class="apiarg">clubId</span>) : <span class="apiret">info</span>
: [[API C_Club.GetClubLimits|C_Club.GetClubLimits]](<span class="apiarg">clubType</span>) : <span class="apiret">clubLimits</span>
: [[API C_Club.GetClubMembers|C_Club.GetClubMembers]](<span class="apiarg">clubId [, streamId]</span>) : <span class="apiret">members</span>
: [[API C_Club.GetClubPrivileges|C_Club.GetClubPrivileges]](<span class="apiarg">clubId</span>) : <span class="apiret">privilegeInfo</span>
: [[API C_Club.GetClubStreamNotificationSettings|C_Club.GetClubStreamNotificationSettings]](<span class="apiarg">clubId</span>) : <span class="apiret">settings</span>
: [[API C_Club.GetCommunityNameResultText|C_Club.GetCommunityNameResultText]](<span class="apiarg">result</span>) : <span class="apiret">errorCode</span>
: [[API C_Club.GetGuildClubId|C_Club.GetGuildClubId]]() : <span class="apiret">guildClubId</span>
: [[API C_Club.GetInfoFromLastCommunityChatLine|C_Club.GetInfoFromLastCommunityChatLine]]() : <span class="apiret">messageInfo, clubId, streamId, clubType</span>
: [[API C_Club.GetInvitationCandidates|C_Club.GetInvitationCandidates]](<span class="apiarg">[filter], [maxResults], [cursorPosition], [allowFullMatch], clubId</span>) : <span class="apiret">candidates</span>
: [[API C_Club.GetInvitationInfo|C_Club.GetInvitationInfo]](<span class="apiarg">clubId</span>) : <span class="apiret">invitation</span>
: [[API C_Club.GetInvitationsForClub|C_Club.GetInvitationsForClub]](<span class="apiarg">clubId</span>) : <span class="apiret">invitations</span>
: [[API C_Club.GetInvitationsForSelf|C_Club.GetInvitationsForSelf]]() : <span class="apiret">invitations</span>
: [[API C_Club.GetLastTicketResponse|C_Club.GetLastTicketResponse]](<span class="apiarg">ticket</span>) : <span class="apiret">error, info, showError</span>
: [[API C_Club.GetMemberInfo|C_Club.GetMemberInfo]](<span class="apiarg">clubId, memberId</span>) : <span class="apiret">info</span>
: [[API C_Club.GetMemberInfoForSelf|C_Club.GetMemberInfoForSelf]](<span class="apiarg">clubId</span>) : <span class="apiret">info</span>
: [[API C_Club.GetMessageInfo|C_Club.GetMessageInfo]](<span class="apiarg">clubId, streamId, messageId</span>) : <span class="apiret">message</span>
: [[API C_Club.GetMessageRanges|C_Club.GetMessageRanges]](<span class="apiarg">clubId, streamId</span>) : <span class="apiret">ranges</span>
: [[API C_Club.GetMessagesBefore|C_Club.GetMessagesBefore]](<span class="apiarg">clubId, streamId, newest, count</span>) : <span class="apiret">messages</span>
: [[API C_Club.GetMessagesInRange|C_Club.GetMessagesInRange]](<span class="apiarg">clubId, streamId, oldest, newest</span>) : <span class="apiret">messages</span>
: [[API C_Club.GetStreamInfo|C_Club.GetStreamInfo]](<span class="apiarg">clubId, streamId</span>) : <span class="apiret">streamInfo</span>
: [[API C_Club.GetStreams|C_Club.GetStreams]](<span class="apiarg">clubId</span>) : <span class="apiret">streams</span>
: [[API C_Club.GetStreamViewMarker|C_Club.GetStreamViewMarker]](<span class="apiarg">clubId, streamId</span>) : <span class="apiret">lastReadTime</span>
: [[API C_Club.GetSubscribedClubs|C_Club.GetSubscribedClubs]]() : <span class="apiret">clubs</span>
: [[API C_Club.GetTickets|C_Club.GetTickets]](<span class="apiarg">clubId</span>) : <span class="apiret">tickets</span>
: [[API C_Club.IsAccountMuted|C_Club.IsAccountMuted]](<span class="apiarg">clubId</span>) : <span class="apiret">accountMuted</span>
: [[API C_Club.IsBeginningOfStream|C_Club.IsBeginningOfStream]](<span class="apiarg">clubId, streamId, messageId</span>) : <span class="apiret">isBeginningOfStream</span>
: [[API C_Club.IsEnabled|C_Club.IsEnabled]]() : <span class="apiret">clubsEnabled</span>
: [[API C_Club.IsRestricted|C_Club.IsRestricted]]() : <span class="apiret">restrictionReason</span>
: [[API C_Club.IsSubscribedToStream|C_Club.IsSubscribedToStream]](<span class="apiarg">clubId, streamId</span>) : <span class="apiret">subscribed</span>
: [[API C_Club.KickMember|C_Club.KickMember]](<span class="apiarg">clubId, memberId</span>)
: [[API C_Club.LeaveClub|C_Club.LeaveClub]](<span class="apiarg">clubId</span>)
: [[API C_Club.RedeemTicket|C_Club.RedeemTicket]](<span class="apiarg">ticketId</span>)
: [[API C_Club.RequestInvitationsForClub|C_Club.RequestInvitationsForClub]](<span class="apiarg">clubId</span>)
: [[API C_Club.RequestMoreMessagesBefore|C_Club.RequestMoreMessagesBefore]](<span class="apiarg">clubId, streamId [, messageId, count]</span>) : <span class="apiret">alreadyHasMessages</span>
: [[API C_Club.RequestTicket|C_Club.RequestTicket]](<span class="apiarg">ticketId</span>)
: [[API C_Club.RequestTickets|C_Club.RequestTickets]](<span class="apiarg">clubId</span>)
: [[API C_Club.RevokeInvitation|C_Club.RevokeInvitation]](<span class="apiarg">clubId, memberId</span>)
: [[API C_Club.SendBattleTagFriendRequest|C_Club.SendBattleTagFriendRequest]](<span class="apiarg">guildClubId, memberId</span>)
: [[API C_Club.SendCharacterInvitation|C_Club.SendCharacterInvitation]](<span class="apiarg">clubId, character</span>)
: [[API C_Club.SendInvitation|C_Club.SendInvitation]](<span class="apiarg">clubId, memberId</span>)
: [[API C_Club.SendMessage|C_Club.SendMessage]](<span class="apiarg">clubId, streamId, message</span>)
: [[API C_Club.SetAutoAdvanceStreamViewMarker|C_Club.SetAutoAdvanceStreamViewMarker]](<span class="apiarg">clubId, streamId</span>)
: [[API C_Club.SetAvatarTexture|C_Club.SetAvatarTexture]](<span class="apiarg">texture, avatarId, clubType</span>)
: [[API C_Club.SetClubMemberNote|C_Club.SetClubMemberNote]](<span class="apiarg">clubId, memberId, note</span>)
: [[API C_Club.SetClubPresenceSubscription|C_Club.SetClubPresenceSubscription]](<span class="apiarg">clubId</span>)
: [[API C_Club.SetClubStreamNotificationSettings|C_Club.SetClubStreamNotificationSettings]](<span class="apiarg">clubId, settings</span>)
: [[API C_Club.SetFavorite|C_Club.SetFavorite]](<span class="apiarg">clubId, isFavorite</span>)
: [[API C_Club.SetSocialQueueingEnabled|C_Club.SetSocialQueueingEnabled]](<span class="apiarg">clubId, enabled</span>)
: [[API C_Club.ShouldAllowClubType|C_Club.ShouldAllowClubType]](<span class="apiarg">clubType</span>) : <span class="apiret">clubTypeIsAllowed</span>
: [[API C_Club.UnfocusAllStreams|C_Club.UnfocusAllStreams]](<span class="apiarg">unsubscribe</span>)
: [[API C_Club.UnfocusStream|C_Club.UnfocusStream]](<span class="apiarg">clubId, streamId</span>)
: [[API C_Club.ValidateText|C_Club.ValidateText]](<span class="apiarg">clubType, text, clubFieldType</span>) : <span class="apiret">result</span>
: [[API C_Cursor.DropCursorCommunitiesStream|C_Cursor.DropCursorCommunitiesStream]]()
: [[API C_Cursor.GetCursorCommunitiesStream|C_Cursor.GetCursorCommunitiesStream]]() : <span class="apiret">clubId, streamId</span>
: [[API C_Cursor.GetCursorItem|C_Cursor.GetCursorItem]]() : <span class="apiret">item</span>
: [[API C_Cursor.SetCursorCommunitiesStream|C_Cursor.SetCursorCommunitiesStream]](<span class="apiarg">clubId, streamId</span>)
The Club Finder was added in [[Patch 8.2.0]] and enabled in [[Patch 8.2.5]]
: [[API C_ClubFinder.ApplicantAcceptClubInvite|C_ClubFinder.ApplicantAcceptClubInvite]](<span class="apiarg">clubFinderGUID</span>)
: [[API C_ClubFinder.ApplicantDeclineClubInvite|C_ClubFinder.ApplicantDeclineClubInvite]](<span class="apiarg">clubFinderGUID</span>)
: [[API C_ClubFinder.CancelMembershipRequest|C_ClubFinder.CancelMembershipRequest]](<span class="apiarg">clubFinderGUID</span>)
: [[API C_ClubFinder.CheckAllPlayerApplicantSettings|C_ClubFinder.CheckAllPlayerApplicantSettings]]()
: [[API C_ClubFinder.ClearAllFinderCache|C_ClubFinder.ClearAllFinderCache]]()
: [[API C_ClubFinder.ClearClubApplicantsCache|C_ClubFinder.ClearClubApplicantsCache]]()
: [[API C_ClubFinder.ClearClubFinderPostingsCache|C_ClubFinder.ClearClubFinderPostingsCache]]()
: [[API C_ClubFinder.DoesPlayerBelongToClubFromClubGUID|C_ClubFinder.DoesPlayerBelongToClubFromClubGUID]](<span class="apiarg">clubFinderGUID</span>) : <span class="apiret">belongsToClub</span>
: [[API C_ClubFinder.GetClubFinderDisableReason|C_ClubFinder.GetClubFinderDisableReason]]() : <span class="apiret">disableReason</span>
: [[API C_ClubFinder.GetClubRecruitmentSettings|C_ClubFinder.GetClubRecruitmentSettings]]() : <span class="apiret">settings</span>
: [[API C_ClubFinder.GetClubTypeFromFinderGUID|C_ClubFinder.GetClubTypeFromFinderGUID]](<span class="apiarg">clubFinderGUID</span>) : <span class="apiret">clubType</span>
: [[API C_ClubFinder.GetFocusIndexFromFlag|C_ClubFinder.GetFocusIndexFromFlag]](<span class="apiarg">flags</span>) : <span class="apiret">index</span>
: [[API C_ClubFinder.GetPlayerApplicantLocaleFlags|C_ClubFinder.GetPlayerApplicantLocaleFlags]]() : <span class="apiret">localeFlags</span>
: [[API C_ClubFinder.GetPlayerApplicantSettings|C_ClubFinder.GetPlayerApplicantSettings]]() : <span class="apiret">settings</span>
: [[API C_ClubFinder.GetPlayerClubApplicationStatus|C_ClubFinder.GetPlayerClubApplicationStatus]](<span class="apiarg">clubFinderGUID</span>) : <span class="apiret">clubStatus</span>
: [[API C_ClubFinder.GetPlayerSettingsFocusFlagsSelectedCount|C_ClubFinder.GetPlayerSettingsFocusFlagsSelectedCount]]() : <span class="apiret">focusCount</span>
: [[API C_ClubFinder.GetPostingIDFromClubFinderGUID|C_ClubFinder.GetPostingIDFromClubFinderGUID]](<span class="apiarg">clubFinderGUID</span>) : <span class="apiret">postingID</span>
: [[API C_ClubFinder.GetRecruitingClubInfoFromClubID|C_ClubFinder.GetRecruitingClubInfoFromClubID]](<span class="apiarg">clubId</span>) : <span class="apiret">clubInfo</span>
: [[API C_ClubFinder.GetRecruitingClubInfoFromFinderGUID|C_ClubFinder.GetRecruitingClubInfoFromFinderGUID]](<span class="apiarg">clubFinderGUID</span>) : <span class="apiret">clubInfo</span>
: [[API C_ClubFinder.GetStatusOfPostingFromClubId|C_ClubFinder.GetStatusOfPostingFromClubId]](<span class="apiarg">postingID</span>) : <span class="apiret">postingFlags</span>
: [[API C_ClubFinder.GetTotalMatchingCommunityListSize|C_ClubFinder.GetTotalMatchingCommunityListSize]]() : <span class="apiret">totalSize</span>
: [[API C_ClubFinder.GetTotalMatchingGuildListSize|C_ClubFinder.GetTotalMatchingGuildListSize]]() : <span class="apiret">totalSize</span>
: [[API C_ClubFinder.HasAlreadyAppliedToLinkedPosting|C_ClubFinder.HasAlreadyAppliedToLinkedPosting]](<span class="apiarg">clubFinderGUID</span>) : <span class="apiret">hasAlreadyApplied</span>
: [[API C_ClubFinder.HasPostingBeenDelisted|C_ClubFinder.HasPostingBeenDelisted]](<span class="apiarg">postingID</span>) : <span class="apiret">postingDelisted</span>
: [[API C_ClubFinder.IsEnabled|C_ClubFinder.IsEnabled]]() : <span class="apiret">isEnabled</span>
: [[API C_ClubFinder.IsListingEnabledFromFlags|C_ClubFinder.IsListingEnabledFromFlags]](<span class="apiarg">flags</span>) : <span class="apiret">isListed</span>
: [[API C_ClubFinder.IsPostingBanned|C_ClubFinder.IsPostingBanned]](<span class="apiarg">postingID</span>) : <span class="apiret">postingBanned</span>
: [[API C_ClubFinder.LookupClubPostingFromClubFinderGUID|C_ClubFinder.LookupClubPostingFromClubFinderGUID]](<span class="apiarg">clubFinderGUID, isLinkedPosting</span>)
: [[API C_ClubFinder.PlayerGetClubInvitationList|C_ClubFinder.PlayerGetClubInvitationList]]() : <span class="apiret">inviteList</span>
: [[API C_ClubFinder.PlayerRequestPendingClubsList|C_ClubFinder.PlayerRequestPendingClubsList]](<span class="apiarg">type</span>)
: [[API C_ClubFinder.PlayerReturnPendingCommunitiesList|C_ClubFinder.PlayerReturnPendingCommunitiesList]]() : <span class="apiret">info</span>
: [[API C_ClubFinder.PlayerReturnPendingGuildsList|C_ClubFinder.PlayerReturnPendingGuildsList]]() : <span class="apiret">info</span>
: [[API C_ClubFinder.PostClub|C_ClubFinder.PostClub]](<span class="apiarg">clubId, itemLevelRequirement, name, description, avatarId, specs, type</span>) : <span class="apiret">succesful</span>
: [[API C_ClubFinder.ReportPosting|C_ClubFinder.ReportPosting]](<span class="apiarg">reportType, clubFinderGUID, playerGUID, complaintNote</span>)
: [[API C_ClubFinder.RequestApplicantList|C_ClubFinder.RequestApplicantList]](<span class="apiarg">type</span>)
: [[API C_ClubFinder.RequestClubsList|C_ClubFinder.RequestClubsList]](<span class="apiarg">guildListRequested, searchString, specIDs</span>)
: [[API C_ClubFinder.RequestMembershipToClub|C_ClubFinder.RequestMembershipToClub]](<span class="apiarg">clubFinderGUID, comment, specIDs</span>)
: [[API C_ClubFinder.RequestNextCommunityPage|C_ClubFinder.RequestNextCommunityPage]](<span class="apiarg">startingIndex, pageSize</span>)
: [[API C_ClubFinder.RequestNextGuildPage|C_ClubFinder.RequestNextGuildPage]](<span class="apiarg">startingIndex, pageSize</span>)
: [[API C_ClubFinder.RequestPostingInformationFromClubId|C_ClubFinder.RequestPostingInformationFromClubId]](<span class="apiarg">clubId</span>) : <span class="apiret">success</span>
: [[API C_ClubFinder.RequestSubscribedClubPostingIDs|C_ClubFinder.RequestSubscribedClubPostingIDs]]()
: [[API C_ClubFinder.ResetClubPostingMapCache|C_ClubFinder.ResetClubPostingMapCache]]()
: [[API C_ClubFinder.RespondToApplicant|C_ClubFinder.RespondToApplicant]](<span class="apiarg">clubFinderGUID, playerGUID, shouldAccept, requestType, playerName, forceAccept [, reported]</span>)
: [[API C_ClubFinder.ReturnClubApplicantList|C_ClubFinder.ReturnClubApplicantList]](<span class="apiarg">clubId</span>) : <span class="apiret">info</span>
: [[API C_ClubFinder.ReturnMatchingCommunityList|C_ClubFinder.ReturnMatchingCommunityList]]() : <span class="apiret">recruitingClubs</span>
: [[API C_ClubFinder.ReturnMatchingGuildList|C_ClubFinder.ReturnMatchingGuildList]]() : <span class="apiret">recruitingClubs</span>
: [[API C_ClubFinder.ReturnPendingClubApplicantList|C_ClubFinder.ReturnPendingClubApplicantList]](<span class="apiarg">clubId</span>) : <span class="apiret">info</span>
: [[API C_ClubFinder.SetAllRecruitmentSettings|C_ClubFinder.SetAllRecruitmentSettings]](<span class="apiarg">value</span>)
: [[API C_ClubFinder.SetPlayerApplicantLocaleFlags|C_ClubFinder.SetPlayerApplicantLocaleFlags]](<span class="apiarg">localeFlags</span>)
: [[API C_ClubFinder.SetPlayerApplicantSettings|C_ClubFinder.SetPlayerApplicantSettings]](<span class="apiarg">index, checked</span>)
: [[API C_ClubFinder.SetRecruitmentLocale|C_ClubFinder.SetRecruitmentLocale]](<span class="apiarg">locale</span>)
: [[API C_ClubFinder.SetRecruitmentSettings|C_ClubFinder.SetRecruitmentSettings]](<span class="apiarg">index, checked</span>)
: [[API C_ClubFinder.ShouldShowClubFinder|C_ClubFinder.ShouldShowClubFinder]]() : <span class="apiret">shouldShow</span>

==== Reporting ====
: [[API C_BehavioralMessaging.SendNotificationReceipt|C_BehavioralMessaging.SendNotificationReceipt]](<span class="apiarg">dbId, openTimeSeconds, readTimeSeconds</span>)
: [[API C_ReportSystem.CanReportPlayer|C_ReportSystem.CanReportPlayer]](<span class="apiarg">playerLocation</span>) : <span class="apiret">canReport</span> - Returns if a player can be reported.
: [[API C_ReportSystem.CanReportPlayerForLanguage|C_ReportSystem.CanReportPlayerForLanguage]](<span class="apiarg">playerLocation</span>) : <span class="apiret">canReport</span>
: <small>PROTECTED</small> [[API C_ReportSystem.InitiateReportPlayer|C_ReportSystem.InitiateReportPlayer]](<span class="apiarg">complaintType [, playerLocation]</span>) : <span class="apiret">token</span> - Initiates a report against a player.
: [[API C_ReportSystem.OpenReportPlayerDialog|C_ReportSystem.OpenReportPlayerDialog]](<span class="apiarg">reportType, playerName [, playerLocation]</span>) - Opens a dialog for reporting a player.
: [[API C_ReportSystem.ReportServerLag|C_ReportSystem.ReportServerLag]]()
: [[API C_ReportSystem.ReportStuckInCombat|C_ReportSystem.ReportStuckInCombat]]()
: <small>PROTECTED</small> [[API C_ReportSystem.SendReportPlayer|C_ReportSystem.SendReportPlayer]](<span class="apiarg">token [, comment]</span>) - Sends an initiated report against a player.
: [[API C_ReportSystem.SetPendingReportPetTarget|C_ReportSystem.SetPendingReportPetTarget]](<span class="apiarg">[target]</span>) : <span class="apiret">set</span> - Report a pet for an inappropriate name.
: [[API C_ReportSystem.SetPendingReportTarget|C_ReportSystem.SetPendingReportTarget]](<span class="apiarg">[target]</span>) : <span class="apiret">set</span>
: [[API C_ReportSystem.SetPendingReportTargetByGuid|C_ReportSystem.SetPendingReportTargetByGuid]](<span class="apiarg">[guid]</span>) : <span class="apiret">set</span>
Restrictions
: [[API C_SocialRestrictions.AcknowledgeRegionalChatDisabled|C_SocialRestrictions.AcknowledgeRegionalChatDisabled]]()
: [[API C_SocialRestrictions.IsChatDisabled|C_SocialRestrictions.IsChatDisabled]]() : <span class="apiret">disabled</span>
: [[API C_SocialRestrictions.IsMuted|C_SocialRestrictions.IsMuted]]() : <span class="apiret">isMuted</span>
: [[API C_SocialRestrictions.IsSilenced|C_SocialRestrictions.IsSilenced]]() : <span class="apiret">isSilenced</span>
: [[API C_SocialRestrictions.IsSquelched|C_SocialRestrictions.IsSquelched]]() : <span class="apiret">isSquelched</span>
: [[API C_SocialRestrictions.SetChatDisabled|C_SocialRestrictions.SetChatDisabled]](<span class="apiarg">disabled</span>)

==== Voice Chat ====
[[Voice Chat]] was added in [[Patch 2.2]] and reworked in [[Patch 8.0.1]]
: [[API C_VoiceChat.ActivateChannel|C_VoiceChat.ActivateChannel]](<span class="apiarg">channelID</span>)
: [[API C_VoiceChat.BeginLocalCapture|C_VoiceChat.BeginLocalCapture]](<span class="apiarg">listenToLocalUser</span>)
: [[API C_VoiceChat.CanPlayerUseVoiceChat|C_VoiceChat.CanPlayerUseVoiceChat]]() : <span class="apiret">canUseVoiceChat</span>
: [[API C_VoiceChat.CreateChannel|C_VoiceChat.CreateChannel]](<span class="apiarg">channelDisplayName</span>) : <span class="apiret">status</span>
: [[API C_VoiceChat.DeactivateChannel|C_VoiceChat.DeactivateChannel]](<span class="apiarg">channelID</span>)
: [[API C_VoiceChat.EndLocalCapture|C_VoiceChat.EndLocalCapture]]()
: [[API C_VoiceChat.GetActiveChannelID|C_VoiceChat.GetActiveChannelID]]() : <span class="apiret">channelID</span>
: [[API C_VoiceChat.GetActiveChannelType|C_VoiceChat.GetActiveChannelType]]() : <span class="apiret">channelType</span>
: [[API C_VoiceChat.GetAvailableInputDevices|C_VoiceChat.GetAvailableInputDevices]]() : <span class="apiret">inputDevices</span>
: [[API C_VoiceChat.GetAvailableOutputDevices|C_VoiceChat.GetAvailableOutputDevices]]() : <span class="apiret">outputDevices</span>
: [[API C_VoiceChat.GetChannel|C_VoiceChat.GetChannel]](<span class="apiarg">channelID</span>) : <span class="apiret">channel</span>
: [[API C_VoiceChat.GetChannelForChannelType|C_VoiceChat.GetChannelForChannelType]](<span class="apiarg">channelType</span>) : <span class="apiret">channel</span>
: [[API C_VoiceChat.GetChannelForCommunityStream|C_VoiceChat.GetChannelForCommunityStream]](<span class="apiarg">clubId, streamId</span>) : <span class="apiret">channel</span>
: [[API C_VoiceChat.GetCommunicationMode|C_VoiceChat.GetCommunicationMode]]() : <span class="apiret">communicationMode</span>
: [[API C_VoiceChat.GetCurrentVoiceChatConnectionStatusCode|C_VoiceChat.GetCurrentVoiceChatConnectionStatusCode]]() : <span class="apiret">statusCode</span>
: [[API C_VoiceChat.GetInputVolume|C_VoiceChat.GetInputVolume]]() : <span class="apiret">volume</span>
: [[API C_VoiceChat.GetJoinClubVoiceChannelError|C_VoiceChat.GetJoinClubVoiceChannelError]](<span class="apiarg">clubId</span>) : <span class="apiret">errorReason</span>
: [[API C_VoiceChat.GetLocalPlayerActiveChannelMemberInfo|C_VoiceChat.GetLocalPlayerActiveChannelMemberInfo]]() : <span class="apiret">memberInfo</span>
: [[API C_VoiceChat.GetLocalPlayerMemberID|C_VoiceChat.GetLocalPlayerMemberID]](<span class="apiarg">channelID</span>) : <span class="apiret">memberID</span>
: [[API C_VoiceChat.GetMasterVolumeScale|C_VoiceChat.GetMasterVolumeScale]]() : <span class="apiret">scale</span>
: [[API C_VoiceChat.GetMemberGUID|C_VoiceChat.GetMemberGUID]](<span class="apiarg">memberID, channelID</span>) : <span class="apiret">memberGUID</span>
: [[API C_VoiceChat.GetMemberID|C_VoiceChat.GetMemberID]](<span class="apiarg">channelID, memberGUID</span>) : <span class="apiret">memberID</span>
: [[API C_VoiceChat.GetMemberInfo|C_VoiceChat.GetMemberInfo]](<span class="apiarg">memberID, channelID</span>) : <span class="apiret">memberInfo</span>
: [[API C_VoiceChat.GetMemberName|C_VoiceChat.GetMemberName]](<span class="apiarg">memberID, channelID</span>) : <span class="apiret">memberName</span>
: [[API C_VoiceChat.GetMemberVolume|C_VoiceChat.GetMemberVolume]](<span class="apiarg">playerLocation</span>) : <span class="apiret">volume</span>
: [[API C_VoiceChat.GetOutputVolume|C_VoiceChat.GetOutputVolume]]() : <span class="apiret">volume</span>
: [[API C_VoiceChat.GetProcesses|C_VoiceChat.GetProcesses]]() : <span class="apiret">processes</span>
: [[API C_VoiceChat.GetPTTButtonPressedState|C_VoiceChat.GetPTTButtonPressedState]]() : <span class="apiret">isPressed</span>
: [[API C_VoiceChat.GetPushToTalkBinding|C_VoiceChat.GetPushToTalkBinding]]() : <span class="apiret">keys</span>
: [[API C_VoiceChat.GetVADSensitivity|C_VoiceChat.GetVADSensitivity]]() : <span class="apiret">sensitivity</span>
: [[API C_VoiceChat.IsChannelJoinPending|C_VoiceChat.IsChannelJoinPending]](<span class="apiarg">channelType [, clubId, streamId]</span>) : <span class="apiret">isPending</span>
: [[API C_VoiceChat.IsDeafened|C_VoiceChat.IsDeafened]]() : <span class="apiret">isDeafened</span>
: [[API C_VoiceChat.IsEnabled|C_VoiceChat.IsEnabled]]() : <span class="apiret">isEnabled</span>
: [[API C_VoiceChat.IsLoggedIn|C_VoiceChat.IsLoggedIn]]() : <span class="apiret">isLoggedIn</span>
: [[API C_VoiceChat.IsMemberLocalPlayer|C_VoiceChat.IsMemberLocalPlayer]](<span class="apiarg">memberID, channelID</span>) : <span class="apiret">isLocalPlayer</span>
: [[API C_VoiceChat.IsMemberMuted|C_VoiceChat.IsMemberMuted]](<span class="apiarg">playerLocation</span>) : <span class="apiret">mutedForMe</span>
: [[API C_VoiceChat.IsMemberMutedForAll|C_VoiceChat.IsMemberMutedForAll]](<span class="apiarg">memberID, channelID</span>) : <span class="apiret">mutedForAll</span>
: [[API C_VoiceChat.IsMemberSilenced|C_VoiceChat.IsMemberSilenced]](<span class="apiarg">memberID, channelID</span>) : <span class="apiret">silenced</span>
: [[API C_VoiceChat.IsMuted|C_VoiceChat.IsMuted]]() : <span class="apiret">isMuted</span>
: [[API C_VoiceChat.IsParentalDisabled|C_VoiceChat.IsParentalDisabled]]() : <span class="apiret">isParentalDisabled</span>
: [[API C_VoiceChat.IsParentalMuted|C_VoiceChat.IsParentalMuted]]() : <span class="apiret">isParentalMuted</span>
: [[API C_VoiceChat.IsPlayerUsingVoice|C_VoiceChat.IsPlayerUsingVoice]](<span class="apiarg">playerLocation</span>) : <span class="apiret">isUsingVoice</span>
: [[API C_VoiceChat.IsSilenced|C_VoiceChat.IsSilenced]]() : <span class="apiret">isSilenced</span>
: [[API C_VoiceChat.LeaveChannel|C_VoiceChat.LeaveChannel]](<span class="apiarg">channelID</span>)
: [[API C_VoiceChat.Login|C_VoiceChat.Login]]() : <span class="apiret">status</span>
: [[API C_VoiceChat.Logout|C_VoiceChat.Logout]]() : <span class="apiret">status</span>
: [[API C_VoiceChat.MarkChannelsDiscovered|C_VoiceChat.MarkChannelsDiscovered]]()
: [[API C_VoiceChat.RequestJoinAndActivateCommunityStreamChannel|C_VoiceChat.RequestJoinAndActivateCommunityStreamChannel]](<span class="apiarg">clubId, streamId</span>)
: [[API C_VoiceChat.RequestJoinChannelByChannelType|C_VoiceChat.RequestJoinChannelByChannelType]](<span class="apiarg">channelType [, autoActivate]</span>)
: [[API C_VoiceChat.SetCommunicationMode|C_VoiceChat.SetCommunicationMode]](<span class="apiarg">communicationMode</span>)
: [[API C_VoiceChat.SetDeafened|C_VoiceChat.SetDeafened]](<span class="apiarg">isDeafened</span>)
: [[API C_VoiceChat.SetInputDevice|C_VoiceChat.SetInputDevice]](<span class="apiarg">deviceID</span>)
: [[API C_VoiceChat.SetInputVolume|C_VoiceChat.SetInputVolume]](<span class="apiarg">volume</span>)
: [[API C_VoiceChat.SetMasterVolumeScale|C_VoiceChat.SetMasterVolumeScale]](<span class="apiarg">scale</span>)
: [[API C_VoiceChat.SetMemberMuted|C_VoiceChat.SetMemberMuted]](<span class="apiarg">playerLocation, muted</span>)
: [[API C_VoiceChat.SetMemberVolume|C_VoiceChat.SetMemberVolume]](<span class="apiarg">playerLocation, volume</span>)
: [[API C_VoiceChat.SetMuted|C_VoiceChat.SetMuted]](<span class="apiarg">isMuted</span>)
: [[API C_VoiceChat.SetOutputDevice|C_VoiceChat.SetOutputDevice]](<span class="apiarg">deviceID</span>)
: [[API C_VoiceChat.SetOutputVolume|C_VoiceChat.SetOutputVolume]](<span class="apiarg">volume</span>)
: [[API C_VoiceChat.SetPortraitTexture|C_VoiceChat.SetPortraitTexture]](<span class="apiarg">textureObject, memberID, channelID</span>)
: [[API C_VoiceChat.SetPushToTalkBinding|C_VoiceChat.SetPushToTalkBinding]](<span class="apiarg">keys</span>)
: [[API C_VoiceChat.SetVADSensitivity|C_VoiceChat.SetVADSensitivity]](<span class="apiarg">sensitivity</span>)
: [[API C_VoiceChat.ShouldDiscoverChannels|C_VoiceChat.ShouldDiscoverChannels]]() : <span class="apiret">shouldDiscoverChannels</span>
: [[API C_VoiceChat.ToggleDeafened|C_VoiceChat.ToggleDeafened]]()
: [[API C_VoiceChat.ToggleMemberMuted|C_VoiceChat.ToggleMemberMuted]](<span class="apiarg">playerLocation</span>)
: [[API C_VoiceChat.ToggleMuted|C_VoiceChat.ToggleMuted]]()
: [[API ChannelSetAllSilent|ChannelSetAllSilent]](<span class="apiarg">[channelNumber | channelName], memberName, silenceOn</span>)
: [[API ChannelSetPartyMemberSilent|ChannelSetPartyMemberSilent]](<span class="apiarg">partyMemberName, silenceOn</span>)
: [[API IsChatChannelRaid|IsChatChannelRaid]]()

==== Text-to-Speech ====
[[Wikipedia:Speech synthesis|Text-to-Speech]] was added in [[Patch 9.1.0]]
: [[API C_VoiceChat.ActivateChannelTranscription|C_VoiceChat.ActivateChannelTranscription]](<span class="apiarg">channelID</span>)
: [[API C_VoiceChat.DeactivateChannelTranscription|C_VoiceChat.DeactivateChannelTranscription]](<span class="apiarg">channelID</span>)
: [[API C_VoiceChat.GetRemoteTtsVoices|C_VoiceChat.GetRemoteTtsVoices]]() : <span class="apiret">ttsVoices</span>
: [[API C_VoiceChat.GetTtsVoices|C_VoiceChat.GetTtsVoices]]() : <span class="apiret">ttsVoices</span>
: [[API C_VoiceChat.IsSpeakForMeActive|C_VoiceChat.IsSpeakForMeActive]]() : <span class="apiret">isActive</span>
: [[API C_VoiceChat.IsSpeakForMeAllowed|C_VoiceChat.IsSpeakForMeAllowed]]() : <span class="apiret">isAllowed</span>
: [[API C_VoiceChat.IsTranscriptionAllowed|C_VoiceChat.IsTranscriptionAllowed]]() : <span class="apiret">isAllowed</span>
: [[API C_VoiceChat.SpeakRemoteTextSample|C_VoiceChat.SpeakRemoteTextSample]](<span class="apiarg">text</span>)
: [[API C_VoiceChat.SpeakText|C_VoiceChat.SpeakText]](<span class="apiarg">voiceID, text, destination, rate, volume</span>)
: [[API C_VoiceChat.StopSpeakingText|C_VoiceChat.StopSpeakingText]]()
: [[API C_TTSSettings.GetChannelEnabled|C_TTSSettings.GetChannelEnabled]](<span class="apiarg">channelInfo</span>) : <span class="apiret">enabled</span>
: [[API C_TTSSettings.GetCharacterSettingsSaved|C_TTSSettings.GetCharacterSettingsSaved]]() : <span class="apiret">settingsBeenSaved</span>
: [[API C_TTSSettings.GetChatTypeEnabled|C_TTSSettings.GetChatTypeEnabled]](<span class="apiarg">chatName</span>) : <span class="apiret">enabled</span>
: [[API C_TTSSettings.GetSetting|C_TTSSettings.GetSetting]](<span class="apiarg">setting</span>) : <span class="apiret">enabled</span>
: [[API C_TTSSettings.GetSpeechRate|C_TTSSettings.GetSpeechRate]]() : <span class="apiret">rate</span>
: [[API C_TTSSettings.GetSpeechVolume|C_TTSSettings.GetSpeechVolume]]() : <span class="apiret">volume</span>
: [[API C_TTSSettings.GetVoiceOptionID|C_TTSSettings.GetVoiceOptionID]](<span class="apiarg">voiceType</span>) : <span class="apiret">voiceID</span>
: [[API C_TTSSettings.GetVoiceOptionName|C_TTSSettings.GetVoiceOptionName]](<span class="apiarg">voiceType</span>) : <span class="apiret">voiceName</span>
: [[API C_TTSSettings.MarkCharacterSettingsSaved|C_TTSSettings.MarkCharacterSettingsSaved]]()
: [[API C_TTSSettings.SetChannelEnabled|C_TTSSettings.SetChannelEnabled]](<span class="apiarg">channelInfo [, newVal]</span>)
: [[API C_TTSSettings.SetChannelKeyEnabled|C_TTSSettings.SetChannelKeyEnabled]](<span class="apiarg">channelKey [, newVal]</span>)
: [[API C_TTSSettings.SetChatTypeEnabled|C_TTSSettings.SetChatTypeEnabled]](<span class="apiarg">chatName [, newVal]</span>)
: [[API C_TTSSettings.SetDefaultSettings|C_TTSSettings.SetDefaultSettings]]()
: [[API C_TTSSettings.SetSetting|C_TTSSettings.SetSetting]](<span class="apiarg">setting [, newVal]</span>)
: [[API C_TTSSettings.SetSpeechRate|C_TTSSettings.SetSpeechRate]](<span class="apiarg">newVal</span>)
: [[API C_TTSSettings.SetSpeechVolume|C_TTSSettings.SetSpeechVolume]](<span class="apiarg">newVal</span>)
: [[API C_TTSSettings.SetVoiceOption|C_TTSSettings.SetVoiceOption]](<span class="apiarg">voiceType, voiceID</span>)
: [[API C_TTSSettings.SetVoiceOptionName|C_TTSSettings.SetVoiceOptionName]](<span class="apiarg">voiceType, voiceName</span>)

==== Twitter ====
Twitter integration was added in [[Patch 6.1.0]]
: [[API C_Social.GetLastAchievement|C_Social.GetLastAchievement]]() : <span class="apiret">achievementID, achievementName, achievementDesc, iconFileID</span>
: [[API C_Social.GetLastItem|C_Social.GetLastItem]]() : <span class="apiret">itemID, itemName, iconFileID, itemQuality, itemLevel, ...</span>
: [[API C_Social.GetLastScreenshotIndex|C_Social.GetLastScreenshotIndex]]() : <span class="apiret">screenShotIndex</span> - Returns the index of the last screenshot.
: [[API C_Social.GetMaxTweetLength|C_Social.GetMaxTweetLength]]() : <span class="apiret">maxTweetLength</span> - Returns the max character length of a tweet.
: [[API C_Social.GetScreenshotInfoByIndex|C_Social.GetScreenshotInfoByIndex]](<span class="apiarg">index</span>) : <span class="apiret">screenWidth, screenHeight</span> - Returns the display resolution of a screenshot.
: [[API C_Social.GetTweetLength|C_Social.GetTweetLength]](<span class="apiarg">tweetText</span>) : <span class="apiret">tweetLength</span>
: [[API C_Social.IsSocialEnabled|C_Social.IsSocialEnabled]]() : <span class="apiret">isEnabled</span>
: <small>PROTECTED</small> [[API C_Social.RegisterSocialBrowser|C_Social.RegisterSocialBrowser]]()
: [[API C_Social.SetTextureToScreenshot|C_Social.SetTextureToScreenshot]](<span class="apiarg">texture, index</span>)
: <small>PROTECTED</small> [[API C_Social.TwitterCheckStatus|C_Social.TwitterCheckStatus]]()
: <small>PROTECTED</small> [[API C_Social.TwitterConnect|C_Social.TwitterConnect]]()
: <small>PROTECTED</small> [[API C_Social.TwitterDisconnect|C_Social.TwitterDisconnect]]()
: [[API C_Social.TwitterGetMSTillCanPost|C_Social.TwitterGetMSTillCanPost]]() : <span class="apiret">msTimeLeft</span>
: <small>PROTECTED</small> [[API C_Social.TwitterPostAchievement|C_Social.TwitterPostAchievement]](<span class="apiarg">text, width, height, snapshotId, offScreenFrame, lastAchievementID, usedCustomText</span>)
: <small>PROTECTED</small> [[API C_Social.TwitterPostItem|C_Social.TwitterPostItem]](<span class="apiarg">text, width, height, snapshotId, offScreenFrame, lastItemID, usedCustomText</span>)
: <small>PROTECTED</small> [[API C_Social.TwitterPostMessage|C_Social.TwitterPostMessage]](<span class="apiarg">message</span>)
: <small>PROTECTED</small> [[API C_Social.TwitterPostScreenshot|C_Social.TwitterPostScreenshot]](<span class="apiarg">text, screenshotIndex, texture, usedCustomText</span>)

=== Character ===
: [[API CheckBinderDist|CheckBinderDist]]() - Check whether the player is close enough to interact with the Hearthstone binder.
: [[API ConfirmBinder|ConfirmBinder]]() - Confirm the request to set the binding of the player's Hearthstone.
: [[API Dismount|Dismount]]() - The player dismounts the current mount.
: [[API GetBindLocation|GetBindLocation]]() - Get the name of the location for your Hearthstone.
: [[API GetComboPoints|GetComboPoints]]() - Get the current number of combo points.
: [[API GetCurrentLevelFeatures|GetCurrentLevelFeatures]](<span class="apiarg">level</span>) - For Level Up Display
: [[API GetCurrentTitle|GetCurrentTitle]]() - Returns the player's current [[titleId]].
: [[API GetMirrorTimerInfo|GetMirrorTimerInfo]](<span class="apiarg">id</span>) - Returns information about a mirror timer (exhaustion, breath and feign death timers)
: [[API GetMirrorTimerProgress|GetMirrorTimerProgress]](<span class="apiarg">id</span>) - Returns the current value of a mirror timer (exhaustion, breath and feign death timers)
: [[API GetMoney|GetMoney]]() - Returns an integer value of your held money in copper.
: [[API GetNumTitles|GetNumTitles]]() - Returns the maximum [[titleId]].
: [[API GetRestState|GetRestState]]() - Returns information about a player's rest state. (saved up experience bonus)
: [[API GetRuneCooldown|GetRuneCooldown]](<span class="apiarg">id</span>) - Returns cooldown information about a given rune.
: [[API GetRuneCount|GetRuneCount]](<span class="apiarg">slot</span>) - Returns the number of Runes in the given slot. (Death Knight)
: [[API GetSheathState|GetSheathState]]() - Returns the sheath state of the player's weapons.
: [[API GetSpellsForCharacterUpgradeTier|GetSpellsForCharacterUpgradeTier]](<span class="apiarg">tierIndex</span>) - For Level Up Display
: [[API GetTimeToWellRested|GetTimeToWellRested]]()
: [[API GetTitleName|GetTitleName]](<span class="apiarg">titleId</span>) - Returns the player's current title name.
: [[API GetXPExhaustion|GetXPExhaustion]]() - Returns your character's current rested XP, nil if character is not rested.
: [[API HasFullControl|HasFullControl]]()
: [[API IsChatAFK|IsChatAFK]]()
: [[API IsChatDND|IsChatDND]]()
: [[API IsEncounterInProgress|IsEncounterInProgress]]()
: [[API IsFalling|IsFalling]]() - Returns 1 if your character is currently plummeting to their doom.
: [[API IsFlyableArea|IsFlyableArea]]() - Returns 1 if it is possible to fly here, nil otherwise.
: [[API IsFlying|IsFlying]]() - Returns 1 if flying, otherwise nil.
: [[API IsIndoors|IsIndoors]]() - Returns 1 if you are indoors, otherwise nil. Returns nil for indoor areas where you can still mount.
: [[API IsInsane|IsInsane]]() - Used for the Insanity bar
: [[API IsMounted|IsMounted]]() - Returns 1 if mounted, otherwise nil.
: [[API IsOutOfBounds|IsOutOfBounds]]() - Returns 1 if you fell off the map.
: [[API IsOutdoors|IsOutdoors]]() - Returns 1 if you are outdoors, otherwise nil. Returns 1 for indoor areas where you can still mount.
: [[API IsPlayerInWorld|IsPlayerInWorld]]()
: [[API IsPlayerNeutral|IsPlayerNeutral]]()
: [[API IsResting|IsResting]]() - Returns 1 if your character is currently resting.
: [[API IsStealthed|IsStealthed]]() - Returns 1 if stealthed or shadowmeld, otherwise nil.
: [[API IsSubmerged|IsSubmerged]]()
: [[API IsSwimming|IsSwimming]]() - Returns 1 if your character is currently swimming.
: [[API IsThreatWarningEnabled|IsThreatWarningEnabled]]() - Returns whether threat warnings should currently be displayed.
: [[API IsTitleKnown|IsTitleKnown]](<span class="apiarg">index</span>) - Returns 1 if the title is valid for the player, otherwise 0.
: [[API IsXPUserDisabled|IsXPUserDisabled]]() - Returns 1 if the character has disabled experience gain.
: [[API PlayerHasHearthstone|PlayerHasHearthstone]]() - Returns the hearthstone ID
: [[API RandomRoll|RandomRoll]](<span class="apiarg">min, max</span>) - Does a random roll between the two values.
: <small>HW</small> [[API SetCurrentTitle|SetCurrentTitle]](<span class="apiarg">titleId</span>) - Sets the player's current title by id.
: [[API ToggleSheath|ToggleSheath]]() - Toggles sheathed or unsheathed weapons.
: <small>PROTECTED</small> [[API UseHearthstone|UseHearthstone]]()
: <small>DEPRECATED</small> [[API HasAlternateForm|HasAlternateForm]]()

==== Paper Doll ====
Relates to the [[Paper doll]] (also known as Character sheet).
: [[API C_PaperDollInfo.GetArmorEffectiveness|C_PaperDollInfo.GetArmorEffectiveness]](<span class="apiarg">armor, attackerLevel</span>) : <span class="apiret">effectiveness</span>
: [[API C_PaperDollInfo.GetArmorEffectivenessAgainstTarget|C_PaperDollInfo.GetArmorEffectivenessAgainstTarget]](<span class="apiarg">armor</span>) : <span class="apiret">effectiveness</span>
: [[API C_PaperDollInfo.GetInspectItemLevel|C_PaperDollInfo.GetInspectItemLevel]](<span class="apiarg">unit</span>) : <span class="apiret">equippedItemLevel</span> - Returns the average item level for the unit being inspected.
: [[API C_PaperDollInfo.GetMinItemLevel|C_PaperDollInfo.GetMinItemLevel]]() : <span class="apiret">minItemLevel</span>
: [[API C_PaperDollInfo.GetStaggerPercentage|C_PaperDollInfo.GetStaggerPercentage]](<span class="apiarg">unit</span>) : <span class="apiret">stagger, staggerAgainstTarget</span>
: [[API C_PaperDollInfo.OffhandHasShield|C_PaperDollInfo.OffhandHasShield]]() : <span class="apiret">offhandHasShield</span>
: [[API C_PaperDollInfo.OffhandHasWeapon|C_PaperDollInfo.OffhandHasWeapon]]() : <span class="apiret">offhandHasWeapon</span>
: [[API CanDualWield|CanDualWield]]()
: [[API GetAttackPowerForStat|GetAttackPowerForStat]](<span class="apiarg">stat, value</span>) - Returns the amount of attack power contributed by a specified amount of a particular stat.
: [[API GetAvoidance|GetAvoidance]]()
: [[API GetBlockChance|GetBlockChance]]() - Returns the player's percentage block chance.
: [[API GetCombatRating|GetCombatRating]](<span class="apiarg">ratingID</span>) - Returns the player's combat rating for a particular combat rating.
: [[API GetCombatRatingBonus|GetCombatRatingBonus]](<span class="apiarg">ratingID</span>) - Returns the player's combat rating bonus for a particular combat rating.
: [[API GetCombatRatingBonusForCombatRatingValue|GetCombatRatingBonusForCombatRatingValue]](<span class="apiarg">ratingIndex, value</span>)
: [[API GetCritChance|GetCritChance]]() - Returns the player's melee critical hit chance.
: [[API GetCritChanceProvidesParryEffect|GetCritChanceProvidesParryEffect]]()
: [[API GetDodgeChance|GetDodgeChance]]() - Returns the player's percentage dodge chance.
: [[API GetDodgeChanceFromAttribute|GetDodgeChanceFromAttribute]]()
: [[API GetExpertise|GetExpertise]]() - Returns the player's expertise percentage for main hand, offhand and ranged attacks.
: [[API GetHaste|GetHaste]]() - Returns the player's haste percentage.
: [[API GetHitModifier|GetHitModifier]]()
: [[API GetLifesteal|GetLifesteal]]()
: [[API GetManaRegen|GetManaRegen]]() - Returns the player's mana regeneration rates.
: [[API GetMastery|GetMastery]]() - Returns the player's mastery before mastery rating.
: [[API GetMasteryEffect|GetMasteryEffect]]() - Returns the player's buffed mastery in percentage and (unknown number value).
: [[API GetMaxCombatRatingBonus|GetMaxCombatRatingBonus]](<span class="apiarg">ratingIndex</span>)
: [[API GetMeleeHaste|GetMeleeHaste]]() - Returns player's Melee attack haste.
: [[API GetModResilienceDamageReduction|GetModResilienceDamageReduction]]()
: [[API GetOverrideAPBySpellPower|GetOverrideAPBySpellPower]]()
: [[API GetOverrideSpellPowerByAP|GetOverrideSpellPowerByAP]]()
: [[API GetParryChance|GetParryChance]]() - Returns the player's percentage parry chance.
: [[API GetParryChanceFromAttribute|GetParryChanceFromAttribute]]()
: [[API GetPetMeleeHaste|GetPetMeleeHaste]]()
: [[API GetPetSpellBonusDamage|GetPetSpellBonusDamage]]()
: [[API GetPowerRegen|GetPowerRegen]]() - Returns normal and combat power regeneration rates.
: [[API GetPowerRegenForPowerType|GetPowerRegenForPowerType]](<span class="apiarg">POWER_TYPE</span>)
: [[API GetPVPGearStatRules|GetPVPGearStatRules]]()
: [[API GetPvpPowerDamage|GetPvpPowerDamage]]()
: [[API GetPvpPowerHealing|GetPvpPowerHealing]]()
: [[API GetRangedCritChance|GetRangedCritChance]]() - Returns the players ranged critical strike chance.
: [[API GetRangedHaste|GetRangedHaste]]()
: [[API GetShieldBlock|GetShieldBlock]]()
: [[API GetSpeed|GetSpeed]]()
: [[API GetSpellBonusDamage|GetSpellBonusDamage]](<span class="apiarg">spellTreeID</span>) - Returns the raw spell damage of the player for a given spell tree.
: [[API GetSpellBonusHealing|GetSpellBonusHealing]]() - Returns the raw bonus healing of the player.
: [[API GetSpellCritChance|GetSpellCritChance]](<span class="apiarg">school</span>) - Returns the players critical hit chance with a particular spell school.
: [[API GetSpellHitModifier|GetSpellHitModifier]]()
: [[API GetSpellPenetration|GetSpellPenetration]]()
: [[API GetSturdiness|GetSturdiness]]()
: [[API GetUnitHealthModifier|GetUnitHealthModifier]](<span class="apiarg">unit</span>)
: [[API GetUnitMaxHealthModifier|GetUnitMaxHealthModifier]](<span class="apiarg">unit</span>)
: [[API GetUnitPowerModifier|GetUnitPowerModifier]](<span class="apiarg">unit</span>)
: [[API GetVersatilityBonus|GetVersatilityBonus]](<span class="apiarg">COMBAT_RATING</span>)
: [[API HasAPEffectsSpellPower|HasAPEffectsSpellPower]]()
: [[API HasDualWieldPenalty|HasDualWieldPenalty]]()
: [[API HasIgnoreDualWieldWeapon|HasIgnoreDualWieldWeapon]]()
: [[API HasSPEffectsAttackPower|HasSPEffectsAttackPower]]()
: [[API IsDualWielding|IsDualWielding]]()
: [[API IsRangedWeapon|IsRangedWeapon]]()
: [[API PlayerEffectiveAttackPower|PlayerEffectiveAttackPower]]()
: [[API ResistancePercent|ResistancePercent]](<span class="apiarg">resistance, casterLevel</span>)

==== Equipment Manager ====
The [[Equipment Manager]] was added in [[Patch 3.1.2]]
: [[API C_EquipmentSet.AssignSpecToEquipmentSet|C_EquipmentSet.AssignSpecToEquipmentSet]](<span class="apiarg">equipmentSetID, specIndex</span>) - Assigns an equipment set to a specialization.
: [[API C_EquipmentSet.CanUseEquipmentSets|C_EquipmentSet.CanUseEquipmentSets]]() : <span class="apiret">canUseEquipmentSets</span> - Returns whether any equipment sets can be used.
: [[API C_EquipmentSet.ClearIgnoredSlotsForSave|C_EquipmentSet.ClearIgnoredSlotsForSave]]() - Clears ignored slots for saving.
: [[API C_EquipmentSet.CreateEquipmentSet|C_EquipmentSet.CreateEquipmentSet]](<span class="apiarg">equipmentSetName [, icon]</span>) - Creates an equipment set.
: [[API C_EquipmentSet.DeleteEquipmentSet|C_EquipmentSet.DeleteEquipmentSet]](<span class="apiarg">equipmentSetID</span>) - Deletes an equipment set.
: [[API C_EquipmentSet.EquipmentSetContainsLockedItems|C_EquipmentSet.EquipmentSetContainsLockedItems]](<span class="apiarg">equipmentSetID</span>) : <span class="apiret">hasLockedItems</span> - Returns whether an equipment set has locked items
: [[API C_EquipmentSet.GetEquipmentSetAssignedSpec|C_EquipmentSet.GetEquipmentSetAssignedSpec]](<span class="apiarg">equipmentSetID</span>) : <span class="apiret">specIndex</span> - Returns the specialization assigned to an equipment set.
: [[API C_EquipmentSet.GetEquipmentSetForSpec|C_EquipmentSet.GetEquipmentSetForSpec]](<span class="apiarg">specIndex</span>) : <span class="apiret">equipmentSetID</span> - Returns the equipment set currently assigned to a specific specialization.
: [[API C_EquipmentSet.GetEquipmentSetID|C_EquipmentSet.GetEquipmentSetID]](<span class="apiarg">equipmentSetName</span>) : <span class="apiret">equipmentSetID</span> - Returns the set ID of an equipment set with the specified name.
: [[API C_EquipmentSet.GetEquipmentSetIDs|C_EquipmentSet.GetEquipmentSetIDs]]() : <span class="apiret">equipmentSetIDs</span> - Returns an array containing all currently saved equipment set IDs.
: [[API C_EquipmentSet.GetEquipmentSetInfo|C_EquipmentSet.GetEquipmentSetInfo]](<span class="apiarg">equipmentSetID</span>) : <span class="apiret">name, iconFileID, setID, isEquipped, numItems, numEquipped, numInInventory, ...</span> - Returns information about a saved equipment set.
: [[API C_EquipmentSet.GetIgnoredSlots|C_EquipmentSet.GetIgnoredSlots]](<span class="apiarg">equipmentSetID</span>) : <span class="apiret">slotIgnored</span> - Returns ignored slots of an equipment set.
: [[API C_EquipmentSet.GetItemIDs|C_EquipmentSet.GetItemIDs]](<span class="apiarg">equipmentSetID</span>) : <span class="apiret">itemIDs</span> - Returns the item IDs of an equipment set.
: [[API C_EquipmentSet.GetItemLocations|C_EquipmentSet.GetItemLocations]](<span class="apiarg">equipmentSetID</span>) : <span class="apiret">locations</span> - Returns the location of all items in an equipment set.
: [[API C_EquipmentSet.GetNumEquipmentSets|C_EquipmentSet.GetNumEquipmentSets]]() : <span class="apiret">numEquipmentSets</span> - Returns the number of saved equipment sets.
: [[API C_EquipmentSet.IgnoreSlotForSave|C_EquipmentSet.IgnoreSlotForSave]](<span class="apiarg">slot</span>) - Ignores an equipment slot for saving.
: [[API C_EquipmentSet.IsSlotIgnoredForSave|C_EquipmentSet.IsSlotIgnoredForSave]](<span class="apiarg">slot</span>) : <span class="apiret">isSlotIgnored</span> - Returns whether a slot is ignored for saving.
: [[API C_EquipmentSet.ModifyEquipmentSet|C_EquipmentSet.ModifyEquipmentSet]](<span class="apiarg">equipmentSetID, newName [, newIcon]</span>) - Modifies an equipment set.
: [[API C_EquipmentSet.PickupEquipmentSet|C_EquipmentSet.PickupEquipmentSet]](<span class="apiarg">equipmentSetID</span>) - Picks up an equipment set, placing it on the cursor.
: [[API C_EquipmentSet.SaveEquipmentSet|C_EquipmentSet.SaveEquipmentSet]](<span class="apiarg">equipmentSetID [, icon]</span>) - Saves your currently equipped items into an equipment set.
: [[API C_EquipmentSet.UnassignEquipmentSetSpec|C_EquipmentSet.UnassignEquipmentSetSpec]](<span class="apiarg">equipmentSetID</span>) - Unassigns an equipment set from a specialization.
: [[API C_EquipmentSet.UnignoreSlotForSave|C_EquipmentSet.UnignoreSlotForSave]](<span class="apiarg">slot</span>) - Unignores a slot for saving.
: <small>NOCOMBAT</small> [[API C_EquipmentSet.UseEquipmentSet|C_EquipmentSet.UseEquipmentSet]](<span class="apiarg">equipmentSetID</span>) : <span class="apiret">setWasEquipped</span> - Equips items from a specified equipment set.
: [[API GetInventoryItemEquippedUnusable|GetInventoryItemEquippedUnusable]](<span class="apiarg">unit, slot</span>)
: [[API GetInventoryItemsForSlot|GetInventoryItemsForSlot]](<span class="apiarg">slot, returnTable [, transmogrify]</span>)
: [[API IsInventoryItemAnUpgrade|IsInventoryItemAnUpgrade]](<span class="apiarg">unit, slot</span>)
: <small>UI</small> [[API EquipmentManager_UnpackLocation|EquipmentManager_UnpackLocation]]() - Unpacks a location integer to determine the actual inventory location.

==== Dressing Room ====
The [[Dressing room]] was added in [[Patch 1.7.0]]
: <small>UI</small> [https://www.townlong-yak.com/framexml/go/DressUpItemLink DressUpItemLink](<span class="apiarg">itemLink</span>) - Shows the Dressing Room with the given item equipped.
: <small>UI</small> [https://www.townlong-yak.com/framexml/go/DressUpMountLink DressUpMountLink](<span class="apiarg">itemLink | spellLink</span>) - Shows the Dressing Room for the mount.
: <small>UI</small> [https://www.townlong-yak.com/framexml/go/DressUpTransmogLink DressUpTransmogLink](<span class="apiarg">transmogLink</span>) - Shows the Dressing Room for transmog appearance or illusion.
: <small>UI</small> [https://www.townlong-yak.com/framexml/go/SetDressUpBackground SetDressUpBackground](<span class="apiarg">frame, fileName, atlasPostfix</span>)

==== Transmogrification ====
[[Transmogrification]] was added in [[Patch 4.3.0]]. See also [[#Appearances|Appearances]] functions.
: [[API C_Transmog.ApplyAllPending|C_Transmog.ApplyAllPending]](<span class="apiarg">[currentSpecOnly]</span>) : <span class="apiret">requestSent</span> - Applies all pending transmogrifications, and pays for the cost.
: [[API C_Transmog.CanHaveSecondaryAppearanceForSlotID|C_Transmog.CanHaveSecondaryAppearanceForSlotID]](<span class="apiarg">slotID</span>) : <span class="apiret">canHaveSecondaryAppearance</span>
: [[API C_Transmog.CanTransmogItem|C_Transmog.CanTransmogItem]](<span class="apiarg">itemInfo</span>) : <span class="apiret">canBeTransmogged, selfFailureReason, canTransmogOthers, ...</span>
: [[API C_Transmog.CanTransmogItemWithItem|C_Transmog.CanTransmogItemWithItem]](<span class="apiarg">targetItemInfo, sourceItemInfo</span>) : <span class="apiret">canTransmog, failureReason</span> - Returns whether an item can be transmogrified to look like another item.
: [[API C_Transmog.ClearAllPending|C_Transmog.ClearAllPending]]()
: [[API C_Transmog.ClearPending|C_Transmog.ClearPending]](<span class="apiarg">transmogLocation</span>) - Clears the specified transmogrify slot.
: [[API C_Transmog.Close|C_Transmog.Close]]()
: [[API C_Transmog.GetApplyCost|C_Transmog.GetApplyCost]]() : <span class="apiret">cost</span>
: [[API C_Transmog.GetApplyWarnings|C_Transmog.GetApplyWarnings]]() : <span class="apiret">warnings</span>
: [[API C_Transmog.GetBaseCategory|C_Transmog.GetBaseCategory]](<span class="apiarg">transmogID</span>) : <span class="apiret">categoryID</span>
: [[API C_Transmog.GetCreatureDisplayIDForSource|C_Transmog.GetCreatureDisplayIDForSource]](<span class="apiarg">itemModifiedAppearanceID</span>) : <span class="apiret">creatureDisplayID</span>
: [[API C_Transmog.GetItemIDForSource|C_Transmog.GetItemIDForSource]](<span class="apiarg">itemModifiedAppearanceID</span>) : <span class="apiret">itemID</span>
: [[API C_Transmog.GetPending|C_Transmog.GetPending]](<span class="apiarg">transmogLocation</span>) : <span class="apiret">pendingInfo</span>
: [[API C_Transmog.GetSlotEffectiveCategory|C_Transmog.GetSlotEffectiveCategory]](<span class="apiarg">transmogLocation</span>) : <span class="apiret">categoryID</span>
: [[API C_Transmog.GetSlotForInventoryType|C_Transmog.GetSlotForInventoryType]](<span class="apiarg">inventoryType</span>) : <span class="apiret">slot</span> - Returns the equipment slot for an inventory type.
: [[API C_Transmog.GetSlotInfo|C_Transmog.GetSlotInfo]](<span class="apiarg">transmogLocation</span>) : <span class="apiret">isTransmogrified, hasPending, isPendingCollected, canTransmogrify, ...</span>
: [[API C_Transmog.GetSlotUseError|C_Transmog.GetSlotUseError]](<span class="apiarg">transmogLocation</span>) : <span class="apiret">errorCode, errorString</span>
: [[API C_Transmog.GetSlotVisualInfo|C_Transmog.GetSlotVisualInfo]](<span class="apiarg">transmogLocation</span>) : <span class="apiret">baseSourceID, baseVisualID, appliedSourceID, appliedVisualID, ...</span>
: [[API C_Transmog.IsAtTransmogNPC|C_Transmog.IsAtTransmogNPC]]() : <span class="apiret">isAtNPC</span>
: [[API C_Transmog.IsSlotBeingCollapsed|C_Transmog.IsSlotBeingCollapsed]](<span class="apiarg">transmogLocation</span>) : <span class="apiret">isBeingCollapsed</span>
: [[API C_Transmog.LoadOutfit|C_Transmog.LoadOutfit]](<span class="apiarg">outfitID</span>)
: [[API C_Transmog.SetPending|C_Transmog.SetPending]](<span class="apiarg">transmogLocation, pendingInfo</span>)
: [[API C_Item.CanItemTransmogAppearance|C_Item.CanItemTransmogAppearance]](<span class="apiarg">itemLoc</span>) : <span class="apiret">canTransmog, errorCode</span>
: [[API C_Item.GetAppliedItemTransmogInfo|C_Item.GetAppliedItemTransmogInfo]](<span class="apiarg">itemLoc</span>) : <span class="apiret">info</span>
: [[API C_Item.GetBaseItemTransmogInfo|C_Item.GetBaseItemTransmogInfo]](<span class="apiarg">itemLoc</span>) : <span class="apiret">info</span>
: [[API C_Item.GetCurrentItemTransmogInfo|C_Item.GetCurrentItemTransmogInfo]](<span class="apiarg">itemLoc</span>) : <span class="apiret">info</span>
: [[API C_Item.IsDressableItemByID|C_Item.IsDressableItemByID]](<span class="apiarg">itemInfo</span>) : <span class="apiret">isDressableItem</span>
: [[API IsCosmeticItem|IsCosmeticItem]]()
: <small>DEPRECATED</small> [[API C_Transmog.GetCost|C_Transmog.GetCost]]()

==== Barber Shop ====
The [[Barbershop]] was added in [[Patch 3.0.2]] and reworked in patch [[Patch 9.0.1]]
: [[API C_BarberShop.ApplyCustomizationChoices|C_BarberShop.ApplyCustomizationChoices]]() : <span class="apiret">success</span>
: [[API C_BarberShop.Cancel|C_BarberShop.Cancel]]()
: [[API C_BarberShop.ClearPreviewChoices|C_BarberShop.ClearPreviewChoices]](<span class="apiarg">[clearSavedChoices]</span>)
: [[API C_BarberShop.GetAvailableCustomizations|C_BarberShop.GetAvailableCustomizations]]() : <span class="apiret">categories</span>
: [[API C_BarberShop.GetCurrentCameraZoom|C_BarberShop.GetCurrentCameraZoom]]() : <span class="apiret">zoomLevel</span>
: [[API C_BarberShop.GetCurrentCharacterData|C_BarberShop.GetCurrentCharacterData]]() : <span class="apiret">characterData</span>
: [[API C_BarberShop.GetCurrentCost|C_BarberShop.GetCurrentCost]]() : <span class="apiret">cost</span>
: [[API C_BarberShop.HasAnyChanges|C_BarberShop.HasAnyChanges]]() : <span class="apiret">hasChanges</span>
: [[API C_BarberShop.IsViewingAlteredForm|C_BarberShop.IsViewingAlteredForm]]() : <span class="apiret">isViewingAlteredForm</span>
: [[API C_BarberShop.MarkCustomizationChoiceAsSeen|C_BarberShop.MarkCustomizationChoiceAsSeen]](<span class="apiarg">choiceID</span>)
: [[API C_BarberShop.MarkCustomizationOptionAsSeen|C_BarberShop.MarkCustomizationOptionAsSeen]](<span class="apiarg">optionID</span>)
: [[API C_BarberShop.PreviewCustomizationChoice|C_BarberShop.PreviewCustomizationChoice]](<span class="apiarg">optionID, choiceID</span>)
: [[API C_BarberShop.RandomizeCustomizationChoices|C_BarberShop.RandomizeCustomizationChoices]]()
: [[API C_BarberShop.ResetCameraRotation|C_BarberShop.ResetCameraRotation]]()
: [[API C_BarberShop.ResetCustomizationChoices|C_BarberShop.ResetCustomizationChoices]]()
: [[API C_BarberShop.RotateCamera|C_BarberShop.RotateCamera]](<span class="apiarg">diffDegrees</span>)
: [[API C_BarberShop.SaveSeenChoices|C_BarberShop.SaveSeenChoices]]()
: [[API C_BarberShop.SetCameraDistanceOffset|C_BarberShop.SetCameraDistanceOffset]](<span class="apiarg">offset</span>)
: [[API C_BarberShop.SetCameraZoomLevel|C_BarberShop.SetCameraZoomLevel]](<span class="apiarg">zoomLevel [, keepCustomZoom]</span>)
: [[API C_BarberShop.SetCustomizationChoice|C_BarberShop.SetCustomizationChoice]](<span class="apiarg">optionID, choiceID</span>)
: [[API C_BarberShop.SetModelDressState|C_BarberShop.SetModelDressState]](<span class="apiarg">dressedState</span>)
: [[API C_BarberShop.SetSelectedSex|C_BarberShop.SetSelectedSex]](<span class="apiarg">sex</span>)
: [[API C_BarberShop.SetViewingAlteredForm|C_BarberShop.SetViewingAlteredForm]](<span class="apiarg">isViewingAlteredForm</span>)
: [[API C_BarberShop.SetViewingShapeshiftForm|C_BarberShop.SetViewingShapeshiftForm]](<span class="apiarg">[shapeshiftFormID]</span>)
: [[API C_BarberShop.ZoomCamera|C_BarberShop.ZoomCamera]](<span class="apiarg">zoomAmount</span>)

=== Cinematics ===
Relates to in-game cinematics/cutscenes.
: [[API CanCancelScene|CanCancelScene]]()
: [[API CancelScene|CancelScene]]()
: [[API InCinematic|InCinematic]]()
: [[API IsInCinematicScene|IsInCinematicScene]]()
: [[API MouseOverrideCinematicDisable|MouseOverrideCinematicDisable]]()
: [[API OpeningCinematic|OpeningCinematic]]() - Shows the opening cinematic for a player's race. Only works as long as the player has earned zero exp.
: [[API StopCinematic|StopCinematic]]()
Relates to pre-rendered movies.
: [[API CancelPreloadingMovie|CancelPreloadingMovie]](<span class="apiarg">movieId</span>)
: [[API GetMovieDownloadProgress|GetMovieDownloadProgress]](<span class="apiarg">movieId</span>)
: [[API GameMovieFinished|GameMovieFinished]]() - Ends the movie.
: [[API IsMovieLocal|IsMovieLocal]](<span class="apiarg">movieId</span>)
: [[API IsMoviePlayable|IsMoviePlayable]](<span class="apiarg">movieId</span>) - Returns if a movie can be played.
: [[API PreloadMovie|PreloadMovie]](<span class="apiarg">movieId</span>)
: <small>UI</small> [[API MovieFrame_PlayMovie|MovieFrame_PlayMovie]](<span class="apiarg">MovieFrame, movieID</span>) - Plays a movie.

=== Class ===
: [[API C_ClassColor.GetClassColor|C_ClassColor.GetClassColor]](<span class="apiarg">className</span>) : <span class="apiret">classColor</span> -  Returns information about a class' color.
: [[API C_CreatureInfo.GetClassInfo|C_CreatureInfo.GetClassInfo]](<span class="apiarg">classID</span>) : <span class="apiret">classInfo</span> - Returns both localized and locale-independent class names.
: [[API FillLocalizedClassList|FillLocalizedClassList]](<span class="apiarg">classTable [, isFemale]</span>) - Fills table with localized class names.
: [[API GetClassInfo|GetClassInfo]](<span class="apiarg">index</span>) - Returns information about a class.
: [[API GetNumClasses|GetNumClasses]]() - Returns the amount of classes in the game.
: [[API IsDemonHunterAvailable|IsDemonHunterAvailable]]()
: <small>UI</small> [[API GetClassColor|GetClassColor]](<span class="apiarg">classFilename</span>) - Returns a class color from RAID_CLASS_COLORS.
[[Shaman totem]]s
: <small>PROTECTED</small> [[API DestroyTotem|DestroyTotem]](<span class="apiarg">slot</span>) - Destroys a totem/minion.
: [[API GetMultiCastTotemSpells|GetMultiCastTotemSpells]](<span class="apiarg">totemslot</span>) - Returns a list of spellIDs that are applicable for the specified totem slot (1-4)
: [[API GetTotemCannotDismiss|GetTotemCannotDismiss]](<span class="apiarg">slot</span>)
: [[API GetTotemInfo|GetTotemInfo]](<span class="apiarg">slot</span>) - Returns information about a totem.
: [[API GetTotemTimeLeft|GetTotemTimeLeft]](<span class="apiarg">slot</span>)
: [[API TargetTotem|TargetTotem]](<span class="apiarg">slot</span>)
: <small>PROTECTED</small> [[API SetMultiCastSpell|SetMultiCastSpell]](<span class="apiarg">actionID, spellID</span>) - Assigns a spellID to a multicast (totem bar) actionID.
[[Druid shapeshift forms]]
: <small>PROTECTED</small> [[API CancelShapeshiftForm|CancelShapeshiftForm]]() - Cancels a druid's shapeshift form buff.
: <small>PROTECTED</small> [[API CastShapeshiftForm|CastShapeshiftForm]](<span class="apiarg">index</span>)
: [[API GetNumShapeshiftForms|GetNumShapeshiftForms]]()
: [[API GetShapeshiftForm|GetShapeshiftForm]](<span class="apiarg">unknown</span>) - Returns zero-based index of current form/stance.
: [[API GetShapeshiftFormCooldown|GetShapeshiftFormCooldown]](<span class="apiarg">index</span>)
: [[API GetShapeshiftFormID|GetShapeshiftFormID]]() - Returns the current shapeshift form as a constant. If the player is not shapeshifted it returns nil.
: [[API GetShapeshiftFormInfo|GetShapeshiftFormInfo]](<span class="apiarg">index</span>) - Retrieves information about an available ShapeshiftForm or Stance.

==== Talents ====
Relates to [[Specialization|Specializations]].
: [[API C_SpecializationInfo.CanPlayerUsePVPTalentUI|C_SpecializationInfo.CanPlayerUsePVPTalentUI]]() : <span class="apiret">canUse, failureReason</span>
: [[API C_SpecializationInfo.CanPlayerUseTalentSpecUI|C_SpecializationInfo.CanPlayerUseTalentSpecUI]]() : <span class="apiret">canUse, failureReason</span>
: [[API C_SpecializationInfo.CanPlayerUseTalentUI|C_SpecializationInfo.CanPlayerUseTalentUI]]() : <span class="apiret">canUse, failureReason</span>
: [[API C_SpecializationInfo.GetAllSelectedPvpTalentIDs|C_SpecializationInfo.GetAllSelectedPvpTalentIDs]]() : <span class="apiret">selectedPvpTalentIDs</span>
: [[API C_SpecializationInfo.GetInspectSelectedPvpTalent|C_SpecializationInfo.GetInspectSelectedPvpTalent]](<span class="apiarg">inspectedUnit, talentIndex</span>) : <span class="apiret">selectedTalentID</span>
: [[API C_SpecializationInfo.GetPvpTalentAlertStatus|C_SpecializationInfo.GetPvpTalentAlertStatus]]() : <span class="apiret">hasUnspentSlot, hasNewTalent</span>
: [[API C_SpecializationInfo.GetPvpTalentSlotInfo|C_SpecializationInfo.GetPvpTalentSlotInfo]](<span class="apiarg">talentIndex</span>) : <span class="apiret">slotInfo</span>
: [[API C_SpecializationInfo.GetPvpTalentSlotUnlockLevel|C_SpecializationInfo.GetPvpTalentSlotUnlockLevel]](<span class="apiarg">talentIndex</span>) : <span class="apiret">requiredLevel</span>
: [[API C_SpecializationInfo.GetPvpTalentUnlockLevel|C_SpecializationInfo.GetPvpTalentUnlockLevel]](<span class="apiarg">talentID</span>) : <span class="apiret">requiredLevel</span>
: [[API C_SpecializationInfo.GetSpecIDs|C_SpecializationInfo.GetSpecIDs]](<span class="apiarg">specSetID</span>) : <span class="apiret">specIDs</span>
: [[API C_SpecializationInfo.GetSpellsDisplay|C_SpecializationInfo.GetSpellsDisplay]](<span class="apiarg">specializationID</span>) : <span class="apiret">spellID</span>
: [[API C_SpecializationInfo.IsInitialized|C_SpecializationInfo.IsInitialized]]() : <span class="apiret">isSpecializationDataInitialized</span>
: [[API C_SpecializationInfo.IsPvpTalentLocked|C_SpecializationInfo.IsPvpTalentLocked]](<span class="apiarg">talentID</span>) : <span class="apiret">locked</span>
: [[API C_SpecializationInfo.MatchesCurrentSpecSet|C_SpecializationInfo.MatchesCurrentSpecSet]](<span class="apiarg">specSetID</span>) : <span class="apiret">matches</span>
: [[API C_SpecializationInfo.SetPvpTalentLocked|C_SpecializationInfo.SetPvpTalentLocked]](<span class="apiarg">talentID, locked</span>)
: [[API AreTalentsLocked|AreTalentsLocked]]()
: [[API CheckTalentMasterDist|CheckTalentMasterDist]]() - Returns nil if the player is too far away from the talent master to use the talent methods.
: [[API ClearFailedPVPTalentIDs|ClearFailedPVPTalentIDs]]()
: [[API ClearFailedTalentIDs|ClearFailedTalentIDs]]()
: [[API ConfirmTalentWipe|ConfirmTalentWipe]]() - Confirms freeing all talent points.
: [[API GetActiveSpecGroup|GetActiveSpecGroup]](<span class="apiarg">[isInspect]</span>) - Returns the index of the current active specialization/talent/glyph group.
: [[API GetFailedPVPTalentIDs|GetFailedPVPTalentIDs]]()
: [[API GetFailedTalentIDs|GetFailedTalentIDs]]()
: [[API GetMaxTalentTier|GetMaxTalentTier]]() - Returns the number of available talent tiers.
: [[API GetNumSpecGroups|GetNumSpecGroups]](<span class="apiarg">[isInspect]</span>) - Returns the number of specialization group (dual specs) the player has.
: [[API GetNumSpecializations|GetNumSpecializations]](<span class="apiarg">[isInspect, isPet]</span>) - Returns the number of available specializations.
: [[API GetNumSpecializationsForClassID|GetNumSpecializationsForClassID]](<span class="apiarg">classID</span>) - Returns the number of specializations available to a particular class.
: [[API GetNumUnspentPvpTalents|GetNumUnspentPvpTalents]]()
: [[API GetNumUnspentTalents|GetNumUnspentTalents]]() - Returns the number of unspent talents.
: [[API GetPetTalentTree|GetPetTalentTree]]()
: [[API GetPrimarySpecialization|GetPrimarySpecialization]]()
: [[API GetPvpTalentInfoByID|GetPvpTalentInfoByID]](<span class="apiarg">talentID [, specGroupIndex, isInspect, inspectUnit]</span>)
: [[API GetPvpTalentInfoBySpecialization|GetPvpTalentInfoBySpecialization]]()
: [[API GetPvpTalentLink|GetPvpTalentLink]]()
: [[API GetSetBonusesForSpecializationByItemID|GetSetBonusesForSpecializationByItemID]](<span class="apiarg">specID, itemID</span>)
: [[API GetSpecChangeCost|GetSpecChangeCost]]()
: [[API GetSpecialization|GetSpecialization]](<span class="apiarg">[isInspect, isPet, specGroup]</span>) - Returns the index of the player's current specialization.
: [[API GetSpecializationInfo|GetSpecializationInfo]](<span class="apiarg">specIndex [, isInspect, isPet, inspectTarget, sex]</span>) - Returns information about the player's specializations.
: [[API GetSpecializationInfoByID|GetSpecializationInfoByID]](<span class="apiarg">specID</span>) - Returns information about the specified specialization.
: [[API GetSpecializationInfoForClassID|GetSpecializationInfoForClassID]](<span class="apiarg">classID, specIndex</span>) - Returns information about the specified specialization.
: [[API GetSpecializationInfoForSpecID|GetSpecializationInfoForSpecID]](<span class="apiarg">specID [, sex]</span>)
: [[API GetSpecializationMasterySpells|GetSpecializationMasterySpells]](<span class="apiarg">specIndex [, isInspect, isPet]</span>) - Returns the mastery spellID of the current player's specialization.
: [[API GetSpecializationNameForSpecID|GetSpecializationNameForSpecID]](<span class="apiarg">specID [, sex]</span>)
: [[API GetSpecializationRole|GetSpecializationRole]](<span class="apiarg">specIndex [, isInspect, isPet]</span>) - Returns the role a specialization is intended to perform.
: [[API GetSpecializationRoleByID|GetSpecializationRoleByID]](<span class="apiarg">specID</span>) - Returns the role a specialization is intended to perform.
: [[API GetSpecializationSpells|GetSpecializationSpells]](<span class="apiarg">specIndex [, isInspect, isPet]</span>) - Returns the spellID of key abilities used by the specified specialization.
: [[API GetSpecsForSpell|GetSpecsForSpell]](<span class="apiarg">spellName or spellIndex, bookType</span>) - Returns the specs for which the specified spell can be used.
: [[API GetTalentInfo|GetTalentInfo]](<span class="apiarg">tier, column, specGroupIndex [, isInspect, inspectUnit]</span>) - Returns information about a talent.
: [[API GetTalentInfoByID|GetTalentInfoByID]](<span class="apiarg">talentID, specGroupIndex [, isInspect, inspectUnit]</span>) - Returns information about a talent.
: [[API GetTalentInfoBySpecialization|GetTalentInfoBySpecialization]](<span class="apiarg">specGroupIndex, tier, column</span>)
: [[API GetTalentLink|GetTalentLink]](<span class="apiarg">talentID [, isInspect, specGroup, inspectID, classID]</span>) - Returns the talent link.
: [[API GetTalentTierInfo|GetTalentTierInfo]](<span class="apiarg">tier</span>)
: [[API IsPvpTalentSpell|IsPvpTalentSpell]]()
: [[API IsSpellClassOrSpec|IsSpellClassOrSpec]](<span class="apiarg">spellName or spellIndex, bookType</span>) - Returns whether a given spell is specific to a specialization and/or class.
: [[API IsTalentSpell|IsTalentSpell]](<span class="apiarg">slot, bookType</span>) - Returns whether or not the specified spell is learned from a talent.
: [[API LearnPvpTalent|LearnPvpTalent]]()
: [[API LearnPvpTalents|LearnPvpTalents]]()
: [[API LearnTalent|LearnTalent]]()
: <small>NOCOMBAT</small> [[API LearnTalents|LearnTalents]](<span class="apiarg">talentID1, talentID2, ...</span>) - Learns the talents listed.
: [[API RemovePvpTalent|RemovePvpTalent]]()
: <small>NOCOMBAT</small> [[API RemoveTalent|RemoveTalent]](<span class="apiarg">talentID</span>) - Removes the specified talent.
: <small>NOCOMBAT</small> [[API SetSpecialization|SetSpecialization]](<span class="apiarg">specIndex [, isPet]</span>) - Selects a specialization.
: <small>NOCOMBAT</small> [[API UnlearnSpecialization|UnlearnSpecialization]](<span class="apiarg">specIndex [, isPet]</span>)

=== Collections ===
The [[Collections]] window was added in [[Patch 5.0.4]]

==== Mount Journal ====
The [[Mounts_tab|Mount Journal]] was added in [[Patch 6.0.2]]
: [[API C_MountJournal.ClearFanfare|C_MountJournal.ClearFanfare]](<span class="apiarg">mountID</span>)
: [[API C_MountJournal.ClearRecentFanfares|C_MountJournal.ClearRecentFanfares]]()
: [[API C_MountJournal.Dismiss|C_MountJournal.Dismiss]]() - Dismisses the currently summoned mount.
: [[API C_MountJournal.GetCollectedFilterSetting|C_MountJournal.GetCollectedFilterSetting]](<span class="apiarg">filterIndex</span>) : <span class="apiret">isChecked</span> - Indicates whether the specified mount journal filter is enabled.
: [[API C_MountJournal.GetDisplayedMountAllCreatureDisplayInfo|C_MountJournal.GetDisplayedMountAllCreatureDisplayInfo]](<span class="apiarg">mountIndex</span>) : <span class="apiret">allDisplayInfo</span> - Returns all display IDs for a mount by index.
: [[API C_MountJournal.GetDisplayedMountInfo|C_MountJournal.GetDisplayedMountInfo]](<span class="apiarg">displayIndex</span>) : <span class="apiret">name, spellID, icon, isActive, isUsable, sourceType, isFavorite, ...</span> - Returns information about the specified mount.
: [[API C_MountJournal.GetDisplayedMountInfoExtra|C_MountJournal.GetDisplayedMountInfoExtra]](<span class="apiarg">mountIndex</span>) : <span class="apiret">creatureDisplayInfoID, description, source, isSelfMount, mountTypeID, ...</span> - Returns extra information about the specified mount.
: [[API C_MountJournal.GetIsFavorite|C_MountJournal.GetIsFavorite]](<span class="apiarg">mountIndex</span>) : <span class="apiret">isFavorite, canSetFavorite</span> - Indicates whether the specified mount is marked as a favorite.
: [[API C_MountJournal.GetMountAllCreatureDisplayInfoByID|C_MountJournal.GetMountAllCreatureDisplayInfoByID]](<span class="apiarg">mountID</span>) : <span class="apiret">allDisplayInfo</span> - Returns all display IDs for a mount by ID.
: [[API C_MountJournal.GetMountFromItem|C_MountJournal.GetMountFromItem]](<span class="apiarg">itemID</span>) : <span class="apiret">mountID</span> - Returns the mount for an item ID.
: [[API C_MountJournal.GetMountFromSpell|C_MountJournal.GetMountFromSpell]](<span class="apiarg">spellID</span>) : <span class="apiret">mountID</span> - Returns the mount for a spell ID.
: [[API C_MountJournal.GetMountIDs|C_MountJournal.GetMountIDs]]() : <span class="apiret">mountIDs</span> - Returns the IDs of mounts listed in the mount journal.
: [[API C_MountJournal.GetMountInfoByID|C_MountJournal.GetMountInfoByID]](<span class="apiarg">mountID</span>) : <span class="apiret">name, spellID, icon, isActive, isUsable, sourceType, isFavorite, ...</span> - Returns information about the specified mount.
: [[API C_MountJournal.GetMountInfoExtraByID|C_MountJournal.GetMountInfoExtraByID]](<span class="apiarg">mountID</span>) : <span class="apiret">creatureDisplayInfoID, description, source, isSelfMount, mountTypeID, ...</span> - Returns extra information about the specified mount.
: [[API C_MountJournal.GetMountUsabilityByID|C_MountJournal.GetMountUsabilityByID]](<span class="apiarg">mountID, checkIndoors</span>) : <span class="apiret">isUsable, useError</span> - Returns if a mount is currently usable by the player.
: [[API C_MountJournal.GetNumDisplayedMounts|C_MountJournal.GetNumDisplayedMounts]]() : <span class="apiret">numMounts</span> - Returns the number of mounts shown in the mount journal.
: [[API C_MountJournal.GetNumMounts|C_MountJournal.GetNumMounts]]() : <span class="apiret">numMounts</span> - Returns the number of mounts listed in the mount journal.
: [[API C_MountJournal.GetNumMountsNeedingFanfare|C_MountJournal.GetNumMountsNeedingFanfare]]() : <span class="apiret">numMountsNeedingFanfare</span>
: [[API C_MountJournal.IsSourceChecked|C_MountJournal.IsSourceChecked]](<span class="apiarg">filterIndex</span>) : <span class="apiret">isChecked</span>
: [[API C_MountJournal.IsTypeChecked|C_MountJournal.IsTypeChecked]](<span class="apiarg">filterIndex</span>) : <span class="apiret">isChecked</span>
: [[API C_MountJournal.IsValidSourceFilter|C_MountJournal.IsValidSourceFilter]](<span class="apiarg">filterIndex</span>) : <span class="apiret">isValid</span>
: [[API C_MountJournal.IsValidTypeFilter|C_MountJournal.IsValidTypeFilter]](<span class="apiarg">filterIndex</span>) : <span class="apiret">isValid</span>
: [[API C_MountJournal.NeedsFanfare|C_MountJournal.NeedsFanfare]](<span class="apiarg">mountID</span>) : <span class="apiret">needsFanfare</span>
: [[API C_MountJournal.Pickup|C_MountJournal.Pickup]](<span class="apiarg">displayIndex</span>) - Picks up the specified mount onto the cursor, usually in preparation for placing it on an action button.
: [[API C_MountJournal.SetAllSourceFilters|C_MountJournal.SetAllSourceFilters]](<span class="apiarg">isChecked</span>)
: [[API C_MountJournal.SetAllTypeFilters|C_MountJournal.SetAllTypeFilters]](<span class="apiarg">isChecked</span>)
: [[API C_MountJournal.SetCollectedFilterSetting|C_MountJournal.SetCollectedFilterSetting]](<span class="apiarg">filterIndex, isChecked</span>) - Enables or disables the specified mount journal filter.
: [[API C_MountJournal.SetIsFavorite|C_MountJournal.SetIsFavorite]](<span class="apiarg">mountIndex, isFavorite</span>) - Marks or unmarks the specified mount as a favorite.
: [[API C_MountJournal.SetSearch|C_MountJournal.SetSearch]](<span class="apiarg">searchValue</span>)
: [[API C_MountJournal.SetSourceFilter|C_MountJournal.SetSourceFilter]](<span class="apiarg">filterIndex, isChecked</span>)
: [[API C_MountJournal.SetTypeFilter|C_MountJournal.SetTypeFilter]](<span class="apiarg">filterIndex, isChecked</span>)
: [[API C_MountJournal.SummonByID|C_MountJournal.SummonByID]](<span class="apiarg">mountID</span>) - Summons the specified mount.
[[Mount equipment]] was added in [[Patch 8.2.0]]
: <small>PROTECTED</small> [[API C_MountJournal.ApplyMountEquipment|C_MountJournal.ApplyMountEquipment]](<span class="apiarg">itemLocation</span>) : <span class="apiret">canContinue</span>
: [[API C_MountJournal.AreMountEquipmentEffectsSuppressed|C_MountJournal.AreMountEquipmentEffectsSuppressed]]() : <span class="apiret">areEffectsSuppressed</span>
: [[API C_MountJournal.GetAppliedMountEquipmentID|C_MountJournal.GetAppliedMountEquipmentID]]() : <span class="apiret">itemID</span>
: [[API C_MountJournal.GetMountEquipmentUnlockLevel|C_MountJournal.GetMountEquipmentUnlockLevel]]() : <span class="apiret">level</span>
: [[API C_MountJournal.IsItemMountEquipment|C_MountJournal.IsItemMountEquipment]](<span class="apiarg">itemLocation</span>) : <span class="apiret">isMountEquipment</span>
: [[API C_MountJournal.IsMountEquipmentApplied|C_MountJournal.IsMountEquipmentApplied]]() : <span class="apiret">isApplied</span>
: [[API C_PlayerInfo.CanPlayerUseMountEquipment|C_PlayerInfo.CanPlayerUseMountEquipment]]() : <span class="apiret">canUseMountEquipment, failureReason</span> - Returns true if the player can use mount equipment.
The old companion API (non-combat pets and mounts) was added in [[Patch 3.0.2]]
: [[API CallCompanion|CallCompanion]](<span class="apiarg">type, slotid</span>) - Summons a companion.
: [[API DismissCompanion|DismissCompanion]](<span class="apiarg">type</span>) - Dismisses an active companion.
: [[API GetCompanionInfo|GetCompanionInfo]](<span class="apiarg">type, slotid</span>) - Returns info about a selected companion.
: [[API GetNumCompanions|GetNumCompanions]](<span class="apiarg">type</span>) - Get the number of companions of the specified type.
: [[API SummonRandomCritter|SummonRandomCritter]]() - Summons a random critter companion.

==== Pet Journal ====
The [[Pet Journal]] was added in [[Patch 5.0.4]]. See also [[#Pet Battles|Pet Battle]] functions.
: [[API C_PetInfo.GetPetTamersForMap|C_PetInfo.GetPetTamersForMap]](<span class="apiarg">uiMapID</span>) : <span class="apiret">petTamers</span> - Returns the pet tamers on a map.
: [[API C_PetJournal.CagePetByID|C_PetJournal.CagePetByID]](<span class="apiarg">petID</span>) - Puts the pet into a cage.
: [[API C_PetJournal.ClearFanfare|C_PetJournal.ClearFanfare]]()
: [[API C_PetJournal.ClearRecentFanfares|C_PetJournal.ClearRecentFanfares]]()
: [[API C_PetJournal.ClearSearchFilter|C_PetJournal.ClearSearchFilter]]() - Clears the search box in the pet journal.
: [[API C_PetJournal.FindPetIDByName|C_PetJournal.FindPetIDByName]]()
: [[API C_PetJournal.GetBattlePetLink|C_PetJournal.GetBattlePetLink]](<span class="apiarg">petID</span>) - Returns a battle pet hyperlink for the given petID.
: [[API C_PetJournal.GetDisplayIDByIndex|C_PetJournal.GetDisplayIDByIndex]](<span class="apiarg">speciesID, index</span>) : <span class="apiret">displayID</span>
: [[API C_PetJournal.GetDisplayProbabilityByIndex|C_PetJournal.GetDisplayProbabilityByIndex]](<span class="apiarg">speciesID, index</span>) : <span class="apiret">displayProbability</span>
: [[API C_PetJournal.GetNumCollectedInfo|C_PetJournal.GetNumCollectedInfo]]()
: [[API C_PetJournal.GetNumDisplays|C_PetJournal.GetNumDisplays]](<span class="apiarg">speciesID</span>) : <span class="apiret">numDisplays</span>
: [[API C_PetJournal.GetNumPets|C_PetJournal.GetNumPets]]() - Returns information about the number of battle pets.
: [[API C_PetJournal.GetNumPetsNeedingFanfare|C_PetJournal.GetNumPetsNeedingFanfare]]()
: [[API C_PetJournal.GetNumPetSources|C_PetJournal.GetNumPetSources]]() - Returns information about the number of pet sources.
: [[API C_PetJournal.GetNumPetTypes|C_PetJournal.GetNumPetTypes]]() - Returns information about the number of pet types.
: [[API C_PetJournal.GetOwnedBattlePetString|C_PetJournal.GetOwnedBattlePetString]](<span class="apiarg">speciesID</span>) - Returns string about numbers of battle pets in journal.
: [[API C_PetJournal.GetPetAbilityInfo|C_PetJournal.GetPetAbilityInfo]](<span class="apiarg">abilityID</span>) : <span class="apiret">name, icon, petType</span>
: [[API C_PetJournal.GetPetAbilityList|C_PetJournal.GetPetAbilityList]](<span class="apiarg">speciesID [, idTable, levelTable]</span>)
: [[API C_PetJournal.GetPetAbilityListTable|C_PetJournal.GetPetAbilityListTable]](<span class="apiarg">speciesID</span>) : <span class="apiret">info</span>
: [[API C_PetJournal.GetPetCooldownByGUID|C_PetJournal.GetPetCooldownByGUID]]()
: [[API C_PetJournal.GetPetInfoByIndex|C_PetJournal.GetPetInfoByIndex]](<span class="apiarg">index</span>) - Returns information about a battle pet.
: [[API C_PetJournal.GetPetInfoByItemID|C_PetJournal.GetPetInfoByItemID]](<span class="apiarg">itemID</span>)
: [[API C_PetJournal.GetPetInfoByPetID|C_PetJournal.GetPetInfoByPetID]](<span class="apiarg">petID</span>) - Returns information about a battle pet.
: [[API C_PetJournal.GetPetInfoBySpeciesID|C_PetJournal.GetPetInfoBySpeciesID]](<span class="apiarg">speciesID</span>) - Returns information about a pet species.
: [[API C_PetJournal.GetPetInfoTableByPetID|C_PetJournal.GetPetInfoTableByPetID]](<span class="apiarg">petID</span>) : <span class="apiret">info</span>
: [[API C_PetJournal.GetPetLoadOutInfo|C_PetJournal.GetPetLoadOutInfo]](<span class="apiarg">slot</span>) : <span class="apiret">petID, ability1ID, ability2ID, ability3ID, locked</span>
: [[API C_PetJournal.GetPetModelSceneInfoBySpeciesID|C_PetJournal.GetPetModelSceneInfoBySpeciesID]](<span class="apiarg">speciesID</span>)
: [[API C_PetJournal.GetPetSortParameter|C_PetJournal.GetPetSortParameter]]()
: [[API C_PetJournal.GetPetStats|C_PetJournal.GetPetStats]](<span class="apiarg">petID</span>) - Returns a pet's stats from the Pet Journal.
: [[API C_PetJournal.GetPetSummonInfo|C_PetJournal.GetPetSummonInfo]](<span class="apiarg">battlePetGUID</span>) : <span class="apiret">isSummonable, error, errorText</span>
: [[API C_PetJournal.GetPetTeamAverageLevel|C_PetJournal.GetPetTeamAverageLevel]]()
: [[API C_PetJournal.GetSummonBattlePetCooldown|C_PetJournal.GetSummonBattlePetCooldown]]()
: [[API C_PetJournal.GetSummonedPetGUID|C_PetJournal.GetSummonedPetGUID]]() - Returns information about a battle pet.
: [[API C_PetJournal.GetSummonRandomFavoritePetGUID|C_PetJournal.GetSummonRandomFavoritePetGUID]]()
: [[API C_PetJournal.IsFilterChecked|C_PetJournal.IsFilterChecked]]()
: [[API C_PetJournal.IsFindBattleEnabled|C_PetJournal.IsFindBattleEnabled]]()
: [[API C_PetJournal.IsJournalReadOnly|C_PetJournal.IsJournalReadOnly]]()
: [[API C_PetJournal.IsJournalUnlocked|C_PetJournal.IsJournalUnlocked]]()
: [[API C_PetJournal.IsPetSourceChecked|C_PetJournal.IsPetSourceChecked]]()
: [[API C_PetJournal.IsPetTypeChecked|C_PetJournal.IsPetTypeChecked]]()
: [[API C_PetJournal.PetCanBeReleased|C_PetJournal.PetCanBeReleased]](<span class="apiarg">petID</span>) - Returns true if you can release the pet.
: [[API C_PetJournal.PetIsCapturable|C_PetJournal.PetIsCapturable]](<span class="apiarg">petID</span>)
: [[API C_PetJournal.PetIsFavorite|C_PetJournal.PetIsFavorite]](<span class="apiarg">petID</span>) - Returns true if this pet is marked as a favorite.
: [[API C_PetJournal.PetIsHurt|C_PetJournal.PetIsHurt]](<span class="apiarg">petID</span>)
: [[API C_PetJournal.PetIsLockedForConvert|C_PetJournal.PetIsLockedForConvert]](<span class="apiarg">petID</span>)
: [[API C_PetJournal.PetIsRevoked|C_PetJournal.PetIsRevoked]](<span class="apiarg">petID</span>)
: [[API C_PetJournal.PetIsSlotted|C_PetJournal.PetIsSlotted]](<span class="apiarg">petID</span>)
: [[API C_PetJournal.PetIsSummonable|C_PetJournal.PetIsSummonable]](<span class="apiarg">battlePetGUID</span>) : <span class="apiret">isSummonable</span> - Returns true if you can summon this pet.
: [[API C_PetJournal.PetIsTradable|C_PetJournal.PetIsTradable]](<span class="apiarg">petID</span>) - Returns whether or not a pet from the Pet Journal is tradable.
: [[API C_PetJournal.PetIsUsable|C_PetJournal.PetIsUsable]](<span class="apiarg">petID</span>)
: [[API C_PetJournal.PetNeedsFanfare|C_PetJournal.PetNeedsFanfare]]()
: [[API C_PetJournal.PetUsesRandomDisplay|C_PetJournal.PetUsesRandomDisplay]](<span class="apiarg">speciesID</span>) : <span class="apiret">usesRandomDisplay</span>
: [[API C_PetJournal.PickupPet|C_PetJournal.PickupPet]](<span class="apiarg">petID</span>)
: [[API C_PetJournal.PickupSummonRandomPet|C_PetJournal.PickupSummonRandomPet]]()
: [[API C_PetJournal.ReleasePetByID|C_PetJournal.ReleasePetByID]](<span class="apiarg">petID</span>) - Releases the pet.
: [[API C_PetJournal.SetAbility|C_PetJournal.SetAbility]](<span class="apiarg">slotIndex, spellIndex, petSpellID</span>)
: [[API C_PetJournal.SetAllPetSourcesChecked|C_PetJournal.SetAllPetSourcesChecked]]()
: [[API C_PetJournal.SetAllPetTypesChecked|C_PetJournal.SetAllPetTypesChecked]]()
: [[API C_PetJournal.SetCustomName|C_PetJournal.SetCustomName]](<span class="apiarg">petID, customName</span>) - Sets a custom name for the pet.
: [[API C_PetJournal.SetFavorite|C_PetJournal.SetFavorite]](<span class="apiarg">petID, value</span>) - Sets (or clears) the pet as a favorite.
: [[API C_PetJournal.SetFilterChecked|C_PetJournal.SetFilterChecked]]()
: [[API C_PetJournal.SetPetLoadOutInfo|C_PetJournal.SetPetLoadOutInfo]](<span class="apiarg">slotIndex, petID</span>)
: [[API C_PetJournal.SetPetSortParameter|C_PetJournal.SetPetSortParameter]]()
: [[API C_PetJournal.SetPetSourceChecked|C_PetJournal.SetPetSourceChecked]]()
: [[API C_PetJournal.SetPetTypeFilter|C_PetJournal.SetPetTypeFilter]](<span class="apiarg">index, value</span>) - Sets the pet type in the filter menu.
: [[API C_PetJournal.SetSearchFilter|C_PetJournal.SetSearchFilter]](<span class="apiarg">text</span>) - Sets the search filter in the pet journal.
: <small>NOCOMBAT</small> [[API C_PetJournal.SummonPetByGUID|C_PetJournal.SummonPetByGUID]](<span class="apiarg">petID</span>) - Summons (or dismisses) a pet.
: <small>NOCOMBAT</small> [[API C_PetJournal.SummonRandomPet|C_PetJournal.SummonRandomPet]](<span class="apiarg">allPets</span>) - Summons a random battle pet companion.

==== Toy Box ====
The [[Toy Box]] was added in [[Patch 6.0.2]]
: [[API C_ToyBox.ForceToyRefilter|C_ToyBox.ForceToyRefilter]]()
: [[API C_ToyBox.GetCollectedShown|C_ToyBox.GetCollectedShown]]()
: [[API C_ToyBox.GetIsFavorite|C_ToyBox.GetIsFavorite]](<span class="apiarg">itemID</span>)
: [[API C_ToyBox.GetNumFilteredToys|C_ToyBox.GetNumFilteredToys]]()
: [[API C_ToyBox.GetNumLearnedDisplayedToys|C_ToyBox.GetNumLearnedDisplayedToys]]()
: [[API C_ToyBox.GetNumTotalDisplayedToys|C_ToyBox.GetNumTotalDisplayedToys]]()
: [[API C_ToyBox.GetNumToys|C_ToyBox.GetNumToys]]()
: [[API C_ToyBox.GetToyFromIndex|C_ToyBox.GetToyFromIndex]](<span class="apiarg">itemIndex</span>)
: [[API C_ToyBox.GetToyInfo|C_ToyBox.GetToyInfo]](<span class="apiarg">itemID</span>) - Returns toy info.
: [[API C_ToyBox.GetToyLink|C_ToyBox.GetToyLink]](<span class="apiarg">itemID</span>) - Returns item link.
: [[API C_ToyBox.GetUncollectedShown|C_ToyBox.GetUncollectedShown]]()
: [[API C_ToyBox.GetUnusableShown|C_ToyBox.GetUnusableShown]]()
: [[API C_ToyBox.HasFavorites|C_ToyBox.HasFavorites]]()
: [[API C_ToyBox.IsExpansionTypeFilterChecked|C_ToyBox.IsExpansionTypeFilterChecked]](<span class="apiarg">expansionIndex</span>)
: [[API C_ToyBox.IsSourceTypeFilterChecked|C_ToyBox.IsSourceTypeFilterChecked]](<span class="apiarg">sourceIndex</span>)
: [[API C_ToyBox.IsToyUsable|C_ToyBox.IsToyUsable]](<span class="apiarg">itemID</span>)
: [[API C_ToyBox.PickupToyBoxItem|C_ToyBox.PickupToyBoxItem]](<span class="apiarg">itemID</span>)
: [[API C_ToyBox.SetAllExpansionTypeFilters|C_ToyBox.SetAllExpansionTypeFilters]](<span class="apiarg">[checked]</span>)
: [[API C_ToyBox.SetAllSourceTypeFilters|C_ToyBox.SetAllSourceTypeFilters]](<span class="apiarg">checked</span>)
: [[API C_ToyBox.SetCollectedShown|C_ToyBox.SetCollectedShown]](<span class="apiarg">checked</span>)
: [[API C_ToyBox.SetExpansionTypeFilter|C_ToyBox.SetExpansionTypeFilter]](<span class="apiarg">expansionIndex, checked</span>)
: [[API C_ToyBox.SetFilterString|C_ToyBox.SetFilterString]](<span class="apiarg">searchString</span>)
: [[API C_ToyBox.SetIsFavorite|C_ToyBox.SetIsFavorite]](<span class="apiarg">itemID, value</span>)
: [[API C_ToyBox.SetSourceTypeFilter|C_ToyBox.SetSourceTypeFilter]](<span class="apiarg">sourceIndex, checked</span>)
: [[API C_ToyBox.SetUncollectedShown|C_ToyBox.SetUncollectedShown]](<span class="apiarg">checked</span>)
: [[API C_ToyBox.SetUnusableShown|C_ToyBox.SetUnusableShown]](<span class="apiarg">checked</span>)
: [[API C_ToyBoxInfo.ClearFanfare|C_ToyBoxInfo.ClearFanfare]](<span class="apiarg">itemID</span>)
: [[API C_ToyBoxInfo.NeedsFanfare|C_ToyBoxInfo.NeedsFanfare]](<span class="apiarg">itemID</span>) : <span class="apiret">needsFanfare</span>
: [[API PlayerHasToy|PlayerHasToy]](<span class="apiarg">itemID</span>)
: [[API UseToy|UseToy]](<span class="apiarg">itemID</span>)
: [[API UseToyByName|UseToyByName]](<span class="apiarg">toyName</span>)

==== Heirlooms ====
[[Heirloom]]s were added in [[Patch 3.0.3]] and added to the Collections window in [[Patch 6.1.0]]
: [[API C_Heirloom.CanHeirloomUpgradeFromPending|C_Heirloom.CanHeirloomUpgradeFromPending]](<span class="apiarg">itemID</span>)
: [[API C_Heirloom.CreateHeirloom|C_Heirloom.CreateHeirloom]](<span class="apiarg">itemID</span>)
: [[API C_Heirloom.GetClassAndSpecFilters|C_Heirloom.GetClassAndSpecFilters]]()
: [[API C_Heirloom.GetCollectedHeirloomFilter|C_Heirloom.GetCollectedHeirloomFilter]]()
: [[API C_Heirloom.GetHeirloomInfo|C_Heirloom.GetHeirloomInfo]](<span class="apiarg">itemID</span>)
: [[API C_Heirloom.GetHeirloomItemIDFromDisplayedIndex|C_Heirloom.GetHeirloomItemIDFromDisplayedIndex]](<span class="apiarg">heirloomIndex</span>)
: [[API C_Heirloom.GetHeirloomItemIDs|C_Heirloom.GetHeirloomItemIDs]]()
: [[API C_Heirloom.GetHeirloomLink|C_Heirloom.GetHeirloomLink]](<span class="apiarg">itemID</span>)
: [[API C_Heirloom.GetHeirloomMaxUpgradeLevel|C_Heirloom.GetHeirloomMaxUpgradeLevel]](<span class="apiarg">itemID</span>)
: [[API C_Heirloom.GetHeirloomSourceFilter|C_Heirloom.GetHeirloomSourceFilter]](<span class="apiarg">source</span>)
: [[API C_Heirloom.GetNumDisplayedHeirlooms|C_Heirloom.GetNumDisplayedHeirlooms]]()
: [[API C_Heirloom.GetNumHeirlooms|C_Heirloom.GetNumHeirlooms]]()
: [[API C_Heirloom.GetNumKnownHeirlooms|C_Heirloom.GetNumKnownHeirlooms]]()
: [[API C_Heirloom.GetUncollectedHeirloomFilter|C_Heirloom.GetUncollectedHeirloomFilter]]()
: [[API C_Heirloom.IsHeirloomSourceValid|C_Heirloom.IsHeirloomSourceValid]](<span class="apiarg">source</span>)
: [[API C_Heirloom.IsItemHeirloom|C_Heirloom.IsItemHeirloom]](<span class="apiarg">itemID</span>)
: [[API C_Heirloom.IsPendingHeirloomUpgrade|C_Heirloom.IsPendingHeirloomUpgrade]]()
: [[API C_Heirloom.PlayerHasHeirloom|C_Heirloom.PlayerHasHeirloom]](<span class="apiarg">itemID</span>)
: [[API C_Heirloom.SetClassAndSpecFilters|C_Heirloom.SetClassAndSpecFilters]](<span class="apiarg">classID, specID</span>)
: [[API C_Heirloom.SetCollectedHeirloomFilter|C_Heirloom.SetCollectedHeirloomFilter]](<span class="apiarg">boolean</span>)
: [[API C_Heirloom.SetHeirloomSourceFilter|C_Heirloom.SetHeirloomSourceFilter]](<span class="apiarg">source, filtered</span>)
: [[API C_Heirloom.SetSearch|C_Heirloom.SetSearch]](<span class="apiarg">searchValue</span>)
: [[API C_Heirloom.SetUncollectedHeirloomFilter|C_Heirloom.SetUncollectedHeirloomFilter]](<span class="apiarg">boolean</span>)
: [[API C_Heirloom.ShouldShowHeirloomHelp|C_Heirloom.ShouldShowHeirloomHelp]]()
: [[API C_Heirloom.UpgradeHeirloom|C_Heirloom.UpgradeHeirloom]](<span class="apiarg">itemID</span>)
: [[API DoesItemContainSpec|DoesItemContainSpec]](<span class="apiarg">item, classID [, specializationID]</span>)

==== Appearances ====
The [[Appearances]] tab (also known as the Wardrobe) was added in [[Patch 7.0.3]]. See also [[#Transmogrification|Transmogrification]] functions.
: [[API C_TransmogCollection.AccountCanCollectSource|C_TransmogCollection.AccountCanCollectSource]](<span class="apiarg">sourceID</span>) : <span class="apiret">hasItemData, canCollect</span>
: [[API C_TransmogCollection.CanAppearanceHaveIllusion|C_TransmogCollection.CanAppearanceHaveIllusion]](<span class="apiarg">appearanceID</span>) : <span class="apiret">canHaveIllusion</span>
: [[API C_TransmogCollection.ClearNewAppearance|C_TransmogCollection.ClearNewAppearance]](<span class="apiarg">visualID</span>)
: [[API C_TransmogCollection.ClearSearch|C_TransmogCollection.ClearSearch]](<span class="apiarg">searchType</span>) : <span class="apiret">completed</span>
: [[API C_TransmogCollection.DeleteOutfit|C_TransmogCollection.DeleteOutfit]](<span class="apiarg">outfitID</span>)
: [[API C_TransmogCollection.EndSearch|C_TransmogCollection.EndSearch]]()
: [[API C_TransmogCollection.GetAllAppearanceSources|C_TransmogCollection.GetAllAppearanceSources]](<span class="apiarg">itemAppearanceID</span>) : <span class="apiret">itemModifiedAppearanceIDs</span>
: [[API C_TransmogCollection.GetAppearanceCameraID|C_TransmogCollection.GetAppearanceCameraID]](<span class="apiarg">itemAppearanceID [, variation]</span>) : <span class="apiret">cameraID</span>
: [[API C_TransmogCollection.GetAppearanceCameraIDBySource|C_TransmogCollection.GetAppearanceCameraIDBySource]](<span class="apiarg">itemModifiedAppearanceID [, variation]</span>) : <span class="apiret">cameraID</span>
: [[API C_TransmogCollection.GetAppearanceInfoBySource|C_TransmogCollection.GetAppearanceInfoBySource]](<span class="apiarg">itemModifiedAppearanceID</span>) : <span class="apiret">info</span>
: [[API C_TransmogCollection.GetAppearanceSourceDrops|C_TransmogCollection.GetAppearanceSourceDrops]](<span class="apiarg">itemModifiedAppearanceID</span>) : <span class="apiret">encounterInfo</span>
: [[API C_TransmogCollection.GetAppearanceSourceInfo|C_TransmogCollection.GetAppearanceSourceInfo]](<span class="apiarg">itemModifiedAppearanceID</span>) : <span class="apiret">category, itemAppearanceID, canHaveIllusion, icon, isCollected, ...</span>
: [[API C_TransmogCollection.GetAppearanceSources|C_TransmogCollection.GetAppearanceSources]](<span class="apiarg">appearanceID [, categoryType]</span>) : <span class="apiret">sources</span>
: [[API C_TransmogCollection.GetArtifactAppearanceStrings|C_TransmogCollection.GetArtifactAppearanceStrings]](<span class="apiarg">appearanceID</span>) : <span class="apiret">name, hyperlink</span>
: [[API C_TransmogCollection.GetCategoryAppearances|C_TransmogCollection.GetCategoryAppearances]](<span class="apiarg">category</span>) : <span class="apiret">appearances</span>
: [[API C_TransmogCollection.GetCategoryCollectedCount|C_TransmogCollection.GetCategoryCollectedCount]](<span class="apiarg">category</span>) : <span class="apiret">count</span>
: [[API C_TransmogCollection.GetCategoryInfo|C_TransmogCollection.GetCategoryInfo]](<span class="apiarg">category</span>) : <span class="apiret">name, isWeapon, canHaveIllusions, canMainHand, canOffHand</span>
: [[API C_TransmogCollection.GetCategoryTotal|C_TransmogCollection.GetCategoryTotal]](<span class="apiarg">category</span>) : <span class="apiret">total</span>
: [[API C_TransmogCollection.GetCollectedShown|C_TransmogCollection.GetCollectedShown]]() : <span class="apiret">shown</span>
: [[API C_TransmogCollection.GetFallbackWeaponAppearance|C_TransmogCollection.GetFallbackWeaponAppearance]]() : <span class="apiret">appearanceID</span>
: [[API C_TransmogCollection.GetIllusionInfo|C_TransmogCollection.GetIllusionInfo]](<span class="apiarg">illusionID</span>) : <span class="apiret">info</span>
: [[API C_TransmogCollection.GetIllusions|C_TransmogCollection.GetIllusions]]() : <span class="apiret">illusions</span>
: [[API C_TransmogCollection.GetIllusionStrings|C_TransmogCollection.GetIllusionStrings]](<span class="apiarg">illusionID</span>) : <span class="apiret">name, hyperlink, sourceText</span>
: [[API C_TransmogCollection.GetInspectItemTransmogInfoList|C_TransmogCollection.GetInspectItemTransmogInfoList]]() : <span class="apiret">list</span>
: [[API C_TransmogCollection.GetIsAppearanceFavorite|C_TransmogCollection.GetIsAppearanceFavorite]](<span class="apiarg">itemAppearanceID</span>) : <span class="apiret">isFavorite</span>
: [[API C_TransmogCollection.GetItemInfo|C_TransmogCollection.GetItemInfo]](<span class="apiarg">itemInfo</span>) : <span class="apiret">itemAppearanceID, itemModifiedAppearanceID</span>
: [[API C_TransmogCollection.GetItemTransmogInfoListFromOutfitHyperlink|C_TransmogCollection.GetItemTransmogInfoListFromOutfitHyperlink]](<span class="apiarg">hyperlink</span>) : <span class="apiret">list</span>
: [[API C_TransmogCollection.GetLatestAppearance|C_TransmogCollection.GetLatestAppearance]]() : <span class="apiret">visualID, category</span>
: [[API C_TransmogCollection.GetNumMaxOutfits|C_TransmogCollection.GetNumMaxOutfits]]() : <span class="apiret">maxOutfits</span>
: [[API C_TransmogCollection.GetNumTransmogSources|C_TransmogCollection.GetNumTransmogSources]]() : <span class="apiret">count</span>
: [[API C_TransmogCollection.GetOutfitHyperlinkFromItemTransmogInfoList|C_TransmogCollection.GetOutfitHyperlinkFromItemTransmogInfoList]](<span class="apiarg">itemTransmogInfoList</span>) : <span class="apiret">hyperlink</span>
: [[API C_TransmogCollection.GetOutfitInfo|C_TransmogCollection.GetOutfitInfo]](<span class="apiarg">outfitID</span>) : <span class="apiret">name, icon</span>
: [[API C_TransmogCollection.GetOutfitItemTransmogInfoList|C_TransmogCollection.GetOutfitItemTransmogInfoList]](<span class="apiarg">outfitID</span>) : <span class="apiret">list</span>
: [[API C_TransmogCollection.GetOutfits|C_TransmogCollection.GetOutfits]]() : <span class="apiret">outfitID</span>
: [[API C_TransmogCollection.GetPairedArtifactAppearance|C_TransmogCollection.GetPairedArtifactAppearance]](<span class="apiarg">itemModifiedAppearanceID</span>) : <span class="apiret">pairedItemModifiedAppearanceID</span>
: [[API C_TransmogCollection.GetSourceIcon|C_TransmogCollection.GetSourceIcon]](<span class="apiarg">itemModifiedAppearanceID</span>) : <span class="apiret">icon</span>
: [[API C_TransmogCollection.GetSourceInfo|C_TransmogCollection.GetSourceInfo]](<span class="apiarg">sourceID</span>) : <span class="apiret">sourceInfo</span>
: [[API C_TransmogCollection.GetSourceItemID|C_TransmogCollection.GetSourceItemID]](<span class="apiarg">itemModifiedAppearanceID</span>) : <span class="apiret">itemID</span>
: [[API C_TransmogCollection.GetSourceRequiredHoliday|C_TransmogCollection.GetSourceRequiredHoliday]](<span class="apiarg">itemModifiedAppearanceID</span>) : <span class="apiret">holidayName</span>
: [[API C_TransmogCollection.GetUncollectedShown|C_TransmogCollection.GetUncollectedShown]]() : <span class="apiret">shown</span>
: [[API C_TransmogCollection.HasFavorites|C_TransmogCollection.HasFavorites]]() : <span class="apiret">hasFavorites</span>
: [[API C_TransmogCollection.IsAppearanceHiddenVisual|C_TransmogCollection.IsAppearanceHiddenVisual]](<span class="apiarg">appearanceID</span>) : <span class="apiret">isHiddenVisual</span>
: [[API C_TransmogCollection.IsCategoryValidForItem|C_TransmogCollection.IsCategoryValidForItem]](<span class="apiarg">category, itemInfo</span>) : <span class="apiret">isValid</span>
: [[API C_TransmogCollection.IsNewAppearance|C_TransmogCollection.IsNewAppearance]](<span class="apiarg">visualID</span>) : <span class="apiret">isNew</span>
: [[API C_TransmogCollection.IsSearchDBLoading|C_TransmogCollection.IsSearchDBLoading]]() : <span class="apiret">isLoading</span>
: [[API C_TransmogCollection.IsSearchInProgress|C_TransmogCollection.IsSearchInProgress]](<span class="apiarg">searchType</span>) : <span class="apiret">inProgress</span>
: [[API C_TransmogCollection.IsSourceTypeFilterChecked|C_TransmogCollection.IsSourceTypeFilterChecked]](<span class="apiarg">index</span>) : <span class="apiret">checked</span>
: [[API C_TransmogCollection.ModifyOutfit|C_TransmogCollection.ModifyOutfit]](<span class="apiarg">outfitID, itemTransmogInfoList</span>)
: [[API C_TransmogCollection.NewOutfit|C_TransmogCollection.NewOutfit]](<span class="apiarg">name, icon, itemTransmogInfoList</span>) : <span class="apiret">outfitID</span>
: [[API C_TransmogCollection.PlayerCanCollectSource|C_TransmogCollection.PlayerCanCollectSource]](<span class="apiarg">sourceID</span>) : <span class="apiret">hasItemData, canCollect</span>
: [[API C_TransmogCollection.PlayerHasTransmog|C_TransmogCollection.PlayerHasTransmog]](<span class="apiarg">itemID [, itemAppearanceModID]</span>) : <span class="apiret">hasTransmog</span>
: [[API C_TransmogCollection.PlayerHasTransmogByItemInfo|C_TransmogCollection.PlayerHasTransmogByItemInfo]](<span class="apiarg">itemInfo</span>) : <span class="apiret">hasTransmog</span>
: [[API C_TransmogCollection.PlayerHasTransmogItemModifiedAppearance|C_TransmogCollection.PlayerHasTransmogItemModifiedAppearance]](<span class="apiarg">itemModifiedAppearanceID</span>) : <span class="apiret">hasTransmog</span>
: [[API C_TransmogCollection.PlayerKnowsSource|C_TransmogCollection.PlayerKnowsSource]](<span class="apiarg">sourceID</span>) : <span class="apiret">isKnown</span>
: [[API C_TransmogCollection.RenameOutfit|C_TransmogCollection.RenameOutfit]](<span class="apiarg">outfitID, name</span>)
: [[API C_TransmogCollection.SearchProgress|C_TransmogCollection.SearchProgress]](<span class="apiarg">searchType</span>) : <span class="apiret">progress</span>
: [[API C_TransmogCollection.SearchSize|C_TransmogCollection.SearchSize]](<span class="apiarg">searchType</span>) : <span class="apiret">size</span>
: [[API C_TransmogCollection.SetAllSourceTypeFilters|C_TransmogCollection.SetAllSourceTypeFilters]](<span class="apiarg">checked</span>)
: [[API C_TransmogCollection.SetCollectedShown|C_TransmogCollection.SetCollectedShown]](<span class="apiarg">shown</span>)
: [[API C_TransmogCollection.SetIsAppearanceFavorite|C_TransmogCollection.SetIsAppearanceFavorite]](<span class="apiarg">itemAppearanceID, isFavorite</span>)
: [[API C_TransmogCollection.SetSearch|C_TransmogCollection.SetSearch]](<span class="apiarg">searchType, searchText</span>) : <span class="apiret">completed</span>
: [[API C_TransmogCollection.SetSearchAndFilterCategory|C_TransmogCollection.SetSearchAndFilterCategory]](<span class="apiarg">category</span>)
: [[API C_TransmogCollection.SetSourceTypeFilter|C_TransmogCollection.SetSourceTypeFilter]](<span class="apiarg">index, checked</span>)
: [[API C_TransmogCollection.SetUncollectedShown|C_TransmogCollection.SetUncollectedShown]](<span class="apiarg">shown</span>)
: [[API C_TransmogCollection.UpdateUsableAppearances|C_TransmogCollection.UpdateUsableAppearances]]()
: <small>DEPRECATED</small> [[API C_TransmogCollection.CanSetFavoriteInCategory|C_TransmogCollection.CanSetFavoriteInCategory]](<span class="apiarg">categoryID</span>)
: <small>DEPRECATED</small> [[API C_TransmogCollection.GetIllusionFallbackWeaponSource|C_TransmogCollection.GetIllusionFallbackWeaponSource]]()
: <small>DEPRECATED</small> [[API C_TransmogCollection.GetIllusionSourceInfo|C_TransmogCollection.GetIllusionSourceInfo]](<span class="apiarg">sourceID</span>) : <span class="apiret">visualID, name, hyperlink, icon</span>
: <small>DEPRECATED</small> [[API C_TransmogCollection.GetShowMissingSourceInItemTooltips|C_TransmogCollection.GetShowMissingSourceInItemTooltips]]()
: <small>DEPRECATED</small> [[API C_TransmogCollection.SetShowMissingSourceInItemTooltips|C_TransmogCollection.SetShowMissingSourceInItemTooltips]](<span class="apiarg">bool</span>)
: [[API C_TransmogSets.ClearLatestSource|C_TransmogSets.ClearLatestSource]]()
: [[API C_TransmogSets.ClearNewSource|C_TransmogSets.ClearNewSource]](<span class="apiarg">sourceID</span>)
: [[API C_TransmogSets.ClearSetNewSourcesForSlot|C_TransmogSets.ClearSetNewSourcesForSlot]](<span class="apiarg">transmogSetID, slot</span>)
: [[API C_TransmogSets.GetAllSets|C_TransmogSets.GetAllSets]]() : <span class="apiret">sets</span>
: [[API C_TransmogSets.GetAllSourceIDs|C_TransmogSets.GetAllSourceIDs]](<span class="apiarg">transmogSetID</span>) : <span class="apiret">sources</span>
: [[API C_TransmogSets.GetBaseSetID|C_TransmogSets.GetBaseSetID]](<span class="apiarg">transmogSetID</span>) : <span class="apiret">baseTransmogSetID</span>
: [[API C_TransmogSets.GetBaseSets|C_TransmogSets.GetBaseSets]]() : <span class="apiret">sets</span>
: [[API C_TransmogSets.GetBaseSetsCounts|C_TransmogSets.GetBaseSetsCounts]]() : <span class="apiret">numCollected, numTotal</span>
: [[API C_TransmogSets.GetBaseSetsFilter|C_TransmogSets.GetBaseSetsFilter]](<span class="apiarg">index</span>) : <span class="apiret">isChecked</span>
: [[API C_TransmogSets.GetCameraIDs|C_TransmogSets.GetCameraIDs]]() : <span class="apiret">detailsCameraID, vendorCameraID</span>
: [[API C_TransmogSets.GetIsFavorite|C_TransmogSets.GetIsFavorite]](<span class="apiarg">transmogSetID</span>) : <span class="apiret">isFavorite, isGroupFavorite</span>
: [[API C_TransmogSets.GetLatestSource|C_TransmogSets.GetLatestSource]]() : <span class="apiret">sourceID</span>
: [[API C_TransmogSets.GetSetInfo|C_TransmogSets.GetSetInfo]](<span class="apiarg">transmogSetID</span>) : <span class="apiret">set</span>
: [[API C_TransmogSets.GetSetNewSources|C_TransmogSets.GetSetNewSources]](<span class="apiarg">transmogSetID</span>) : <span class="apiret">sourceIDs</span>
: [[API C_TransmogSets.GetSetPrimaryAppearances|C_TransmogSets.GetSetPrimaryAppearances]](<span class="apiarg">transmogSetID</span>) : <span class="apiret">apppearances</span>
: [[API C_TransmogSets.GetSetsContainingSourceID|C_TransmogSets.GetSetsContainingSourceID]](<span class="apiarg">sourceID</span>) : <span class="apiret">setIDs</span>
: [[API C_TransmogSets.GetSourceIDsForSlot|C_TransmogSets.GetSourceIDsForSlot]](<span class="apiarg">transmogSetID, slot</span>) : <span class="apiret">sources</span>
: [[API C_TransmogSets.GetSourcesForSlot|C_TransmogSets.GetSourcesForSlot]](<span class="apiarg">transmogSetID, slot</span>) : <span class="apiret">sources</span>
: [[API C_TransmogSets.GetUsableSets|C_TransmogSets.GetUsableSets]]() : <span class="apiret">sets</span>
: [[API C_TransmogSets.GetVariantSets|C_TransmogSets.GetVariantSets]](<span class="apiarg">transmogSetID</span>) : <span class="apiret">sets</span>
: [[API C_TransmogSets.HasUsableSets|C_TransmogSets.HasUsableSets]]() : <span class="apiret">hasUsableSets</span>
: [[API C_TransmogSets.IsBaseSetCollected|C_TransmogSets.IsBaseSetCollected]](<span class="apiarg">transmogSetID</span>) : <span class="apiret">isCollected</span>
: [[API C_TransmogSets.IsNewSource|C_TransmogSets.IsNewSource]](<span class="apiarg">sourceID</span>) : <span class="apiret">isNew</span>
: [[API C_TransmogSets.IsSetVisible|C_TransmogSets.IsSetVisible]](<span class="apiarg">transmogSetID</span>) : <span class="apiret">isVisible</span>
: [[API C_TransmogSets.SetBaseSetsFilter|C_TransmogSets.SetBaseSetsFilter]](<span class="apiarg">index, isChecked</span>)
: [[API C_TransmogSets.SetHasNewSources|C_TransmogSets.SetHasNewSources]](<span class="apiarg">transmogSetID</span>) : <span class="apiret">hasNewSources</span>
: [[API C_TransmogSets.SetHasNewSourcesForSlot|C_TransmogSets.SetHasNewSourcesForSlot]](<span class="apiarg">transmogSetID, slot</span>) : <span class="apiret">hasNewSources</span>
: [[API C_TransmogSets.SetIsFavorite|C_TransmogSets.SetIsFavorite]](<span class="apiarg">transmogSetID, isFavorite</span>)
: <small>DEPRECATED</small> [[API C_TransmogSets.GetSetSources|C_TransmogSets.GetSetSources]](<span class="apiarg">setID</span>)
: [[API IsUnitModelReadyForUI|IsUnitModelReadyForUI]](<span class="apiarg">unitToken</span>) : <span class="apiret">isReady</span>

=== Combat Log ===
Relates to the [[Combat Log]].
: [[API CombatLogAddFilter|CombatLogAddFilter]](<span class="apiarg">[eList, sourceFlags, destFlags]</span>)
: [[API CombatLogAdvanceEntry|CombatLogAdvanceEntry]](<span class="apiarg">count [, ignoreFilter]</span>)
: [[API CombatLogClearEntries|CombatLogClearEntries]]()
: [[API CombatLogGetCurrentEntry|CombatLogGetCurrentEntry]]()
: [[API CombatLogGetCurrentEventInfo|CombatLogGetCurrentEventInfo]]() - Returns the current {{api|t=e|COMBAT_LOG_EVENT}} values.
: [[API CombatLogGetNumEntries|CombatLogGetNumEntries]]()
: [[API CombatLogGetRetentionTime|CombatLogGetRetentionTime]]()
: [[API CombatLogResetFilter|CombatLogResetFilter]]()
: [[API CombatLogSetCurrentEntry|CombatLogSetCurrentEntry]](<span class="apiarg">index [, ignoreFilter]</span>)
: [[API CombatLogSetRetentionTime|CombatLogSetRetentionTime]](<span class="apiarg">seconds</span>)
: [[API CombatLog_Object_IsA|CombatLog_Object_IsA]]()
: [[API CombatTextSetActiveUnit|CombatTextSetActiveUnit]](<span class="apiarg">unit</span>) - Changes the entity for which COMBAT_TEXT_UPDATE events fire.
: [[API GetCurrentCombatTextEventInfo|GetCurrentCombatTextEventInfo]]()

=== Combat Pets ===
Relates to [[Combat pet|Combat Pet]]s.
: [[API CancelPetPossess|CancelPetPossess]]()
: <small>PROTECTED</small> [[API CastPetAction|CastPetAction]](<span class="apiarg">index</span>) - Cast the corresponding pet skill.
: [[API DisableSpellAutocast|DisableSpellAutocast]]() - Disables autocasting for a pet spell.
: [[API EnableSpellAutocast|EnableSpellAutocast]]() - Enables autocasting for a pet spell.
: [[API GetCallPetSpellInfo|GetCallPetSpellInfo]](<span class="apiarg">spellID</span>)
: [[API GetPetActionCooldown|GetPetActionCooldown]](<span class="apiarg">index</span>) - Returns cooldown information for the pet action at the specificed pet action bar slot.
: [[API GetPetActionInfo|GetPetActionInfo]](<span class="apiarg">index</span>) - Returns information on the pet action at the specified pet action bar slot.
: [[API GetPetActionSlotUsable|GetPetActionSlotUsable]](<span class="apiarg">slot</span>)
: [[API GetPetActionsUsable|GetPetActionsUsable]]() - Returns a value indicating if the player's pet's actions can be used at this time.
: [[API GetPetExperience|GetPetExperience]]() - Returns the pet's current xp, and total xp required for next level.
: [[API GetPetFoodTypes|GetPetFoodTypes]]() - Returns a list of the food types the player's pet can eat.
: [[API GetPetIcon|GetPetIcon]]() - Returns the path to the texture to use as the icon for the player's pet.
: [[API GetPetTimeRemaining|GetPetTimeRemaining]]() - Returns in milliseconds about some timeout for the player's pet.
: [[API HasPetSpells|HasPetSpells]]() - Returns true if the player has pet spells.
: [[API HasPetUI|HasPetUI]]() - Returns 1 if the player has a pet User Interface.
: [[API IsPetActive|IsPetActive]]()
: [[API IsPetAttackActive|IsPetAttackActive]]() - Returns true if the pet is currently attacking.
: [[API PetAbandon|PetAbandon]]() - Permanently abandons your pet.
: <small>PROTECTED</small> [[API PetAggressiveMode|PetAggressiveMode]]()
: <small>PROTECTED</small> [[API PetAssistMode|PetAssistMode]]() - Set your pet to Assist mode.
: <small>PROTECTED</small> [[API PetAttack|PetAttack]]() - Instruct your pet to attack your target.
: [[API PetCanBeAbandoned|PetCanBeAbandoned]]() - Returns true if the pet is abandonable.
: <small>PROTECTED</small> [[API PetMoveTo|PetMoveTo]](<span class="apiarg">target</span>)
: [[API PetCanBeDismissed|PetCanBeDismissed]]()
: [[API PetCanBeRenamed|PetCanBeRenamed]]() - Returns true if the pet can be renamed.
: <small>PROTECTED</small> [[API PetDefensiveMode|PetDefensiveMode]]() - Set your pet in defensive mode.
: [[API PetDefensiveAssistMode|PetDefensiveAssistMode]]()
: [[API PetDismiss|PetDismiss]]() - Dismiss your pet.
: <small>PROTECTED</small> [[API PetFollow|PetFollow]]() - Instruct your pet to follow you.
: [[API PetHasSpellbook|PetHasSpellbook]]()
: <small>PROTECTED</small> [[API PetPassiveMode|PetPassiveMode]]() - Set your pet into passive mode.
: [[API PetRename|PetRename]](<span class="apiarg">name</span>) - Renames the pet.
: [[API PetStopAttack|PetStopAttack]]() - Stop the attack of the pet.
: [[API PetUsesPetFrame|PetUsesPetFrame]]()
: <small>PROTECTED</small> [[API PetWait|PetWait]]() - Instruct your pet to remain still.
: <small>PROTECTED</small> [[API TogglePetAutocast|TogglePetAutocast]](<span class="apiarg">index</span>) - Toggles whether the specified pet ability should autocast or not.
: <small>PROTECTED</small> [[API ToggleSpellAutocast|ToggleSpellAutocast]](<span class="apiarg">spellName | spellId, bookType</span>) - Toggles whether the specified Pet spell should autocast or not.
Relates to the [[Stable Master]].
: [[API ClosePetStables|ClosePetStables]]() - Close the pet stables user interface.
: [[API GetStablePetFoodTypes|GetStablePetFoodTypes]](<span class="apiarg">index</span>) - Returns a list of the food types a specific stabled pet can eat.
: [[API GetStablePetInfo|GetStablePetInfo]](<span class="apiarg">index</span>) - Returns information about a specific stabled pet.
: [[API IsAtStableMaster|IsAtStableMaster]]()
: [[API SetPetSlot|SetPetSlot]](<span class="apiarg">index, slot</span>)
: [[API SetPetStablePaperdoll|SetPetStablePaperdoll]](<span class="apiarg">modelObject</span>)

=== Controls ===
==== Action Bars ====
: [[API C_ActionBar.GetBonusBarIndexForSlot|C_ActionBar.GetBonusBarIndexForSlot]](<span class="apiarg">slotID</span>) : <span class="apiret">bonusBarIndex</span>
: [[API C_ActionBar.IsHarmfulAction|C_ActionBar.IsHarmfulAction]](<span class="apiarg">actionID, useNeutral</span>) : <span class="apiret">isHarmful</span>
: [[API C_ActionBar.IsHelpfulAction|C_ActionBar.IsHelpfulAction]](<span class="apiarg">actionID, useNeutral</span>) : <span class="apiret">isHelpful</span>
: [[API C_ActionBar.IsOnBarOrSpecialBar|C_ActionBar.IsOnBarOrSpecialBar]](<span class="apiarg">spellID</span>) : <span class="apiret">isOnBarOrSpecialBar</span>
: [[API C_ActionBar.PutActionInSlot|C_ActionBar.PutActionInSlot]](<span class="apiarg">slotID</span>)
: [[API C_ActionBar.ShouldOverrideBarShowHealthBar|C_ActionBar.ShouldOverrideBarShowHealthBar]]() : <span class="apiret">showHealthBar</span>
: [[API C_ActionBar.ShouldOverrideBarShowManaBar|C_ActionBar.ShouldOverrideBarShowManaBar]]() : <span class="apiret">showManaBar</span>
: <small>NOCOMBAT</small> [[API ChangeActionBarPage|ChangeActionBarPage]](<span class="apiarg">page</span>) - Changes the current action bar page.
: [[API GetActionBarPage|GetActionBarPage]]() - Returns the current action bar page. CURRENT_ACTIONBAR_PAGE is obsolete.
: [[API GetActionBarToggles|GetActionBarToggles]]() - Returns the toggles for each action bar.
: [[API GetBonusBarIndex|GetBonusBarIndex]]()
: [[API GetBonusBarOffset|GetBonusBarOffset]]() - Determine which page of bonus actions to show.
: [[API GetExtraBarIndex|GetExtraBarIndex]]()
: [[API GetMultiCastBarIndex|GetMultiCastBarIndex]]()
: [[API GetOverrideBarIndex|GetOverrideBarIndex]]()
: [[API GetOverrideBarSkin|GetOverrideBarSkin]]()
: [[API GetTempShapeshiftBarIndex|GetTempShapeshiftBarIndex]]()
: [[API GetVehicleBarIndex|GetVehicleBarIndex]]()
: [[API HasBonusActionBar|HasBonusActionBar]]()
: [[API HasExtraActionBar|HasExtraActionBar]]()
: [[API HasOverrideActionBar|HasOverrideActionBar]]()
: [[API HasTempShapeshiftActionBar|HasTempShapeshiftActionBar]]()
: [[API HasVehicleActionBar|HasVehicleActionBar]]()
: [[API IsPossessBarVisible|IsPossessBarVisible]]()
: [[API PetHasActionBar|PetHasActionBar]]() - Determine if player has a pet with an action bar.
: [[API SetActionBarToggles|SetActionBarToggles]](<span class="apiarg">show1, show2, show3, show4 [, alwaysShow]</span>) - Set show toggle for each action bar.

==== Action Buttons ====
: [[API C_ActionBar.FindPetActionButtons|C_ActionBar.FindPetActionButtons]](<span class="apiarg">petActionID</span>) : <span class="apiret">slots</span>
: [[API C_ActionBar.FindSpellActionButtons|C_ActionBar.FindSpellActionButtons]](<span class="apiarg">spellID</span>) : <span class="apiret">slots</span>
: [[API C_ActionBar.GetPetActionPetBarIndices|C_ActionBar.GetPetActionPetBarIndices]](<span class="apiarg">petActionID</span>) : <span class="apiret">slots</span>
: [[API C_ActionBar.HasPetActionButtons|C_ActionBar.HasPetActionButtons]](<span class="apiarg">petActionID</span>) : <span class="apiret">hasPetActionButtons</span>
: [[API C_ActionBar.HasPetActionPetBarIndices|C_ActionBar.HasPetActionPetBarIndices]](<span class="apiarg">petActionID</span>) : <span class="apiret">hasPetActionPetBarIndices</span>
: [[API C_ActionBar.HasSpellActionButtons|C_ActionBar.HasSpellActionButtons]](<span class="apiarg">spellID</span>) : <span class="apiret">hasSpellActionButtons</span>
: [[API C_ActionBar.IsAutoCastPetAction|C_ActionBar.IsAutoCastPetAction]](<span class="apiarg">slotID</span>) : <span class="apiret">isAutoCastPetAction</span>
: [[API C_ActionBar.IsEnabledAutoCastPetAction|C_ActionBar.IsEnabledAutoCastPetAction]](<span class="apiarg">slotID</span>) : <span class="apiret">isEnabledAutoCastPetAction</span>
: [[API C_ActionBar.ToggleAutoCastPetAction|C_ActionBar.ToggleAutoCastPetAction]](<span class="apiarg">slotID</span>)
: [[API ActionHasRange|ActionHasRange]](<span class="apiarg">slot</span>) - Determine if the specified action is a range restriction (1 if yes, nil if no)
: [[API ClickWorldMapActionButton|ClickWorldMapActionButton]]()
: [[API GetActionAutocast|GetActionAutocast]](<span class="apiarg">slot</span>)
: [[API GetActionCharges|GetActionCharges]](<span class="apiarg">slot</span>) - Returns information about the charges of a charge-accumulating player ability.
: [[API GetActionCooldown|GetActionCooldown]](<span class="apiarg">slot</span>) - This returns the cooldown values of the specified action.
: [[API GetActionCount|GetActionCount]](<span class="apiarg">slot</span>) - Get the count (bandage/potion/etc) for an action, returns 0 if none or not applicable.
: [[API GetActionInfo|GetActionInfo]](<span class="apiarg">slot</span>) - Returns type, id, subtype.
: [[API GetActionTexture|GetActionTexture]](<span class="apiarg">slot</span>) - Gets the texture path for the specified action.
: [[API GetActionText|GetActionText]](<span class="apiarg">slot</span>) - Get the text label (macros, etc) for an action, returns nil if none.
: [[API GetPossessInfo|GetPossessInfo]](<span class="apiarg">index</span>) - Returns texture, name, enabled.
: [[API GetWorldMapActionButtonSpellInfo|GetWorldMapActionButtonSpellInfo]]()
: [[API HasAction|HasAction]](<span class="apiarg">slot</span>) - Returns 1 if the player has an action in the specified slot, nil otherwise.
: [[API IsActionInRange|IsActionInRange]](<span class="apiarg">slot</span>) - Test if an action is in range (1=yes, 0=no, nil=not applicable).
: [[API IsAttackAction|IsAttackAction]](<span class="apiarg">slot</span>) - Returns 1 if an action is an 'attack' action (flashes during combat), nil otherwise.
: [[API IsAutoRepeatAction|IsAutoRepeatAction]](<span class="apiarg">slot</span>) - Returns 1 if an action is auto-repeating, nil otherwise.
: [[API IsConsumableAction|IsConsumableAction]](<span class="apiarg">slot</span>) - Returns 1 if an action is consumable (i.e. has a count), nil otherwise.
: [[API IsCurrentAction|IsCurrentAction]](<span class="apiarg">slot</span>) - Returns 1 if an action is the one currently underway, nil otherwise.
: [[API IsEquippedAction|IsEquippedAction]](<span class="apiarg">slot</span>) - Returns 1 if an action is equipped (i.e. connected to an item that must be equipped), nil otherwise.
: [[API IsItemAction|IsItemAction]](<span class="apiarg">slot</span>)
: [[API IsPetAttackAction|IsPetAttackAction]](<span class="apiarg">index</span>)
: [[API IsStackableAction|IsStackableAction]](<span class="apiarg">slot</span>)
: [[API IsUsableAction|IsUsableAction]](<span class="apiarg">slot</span>) - Returns 1 if an action can be used at present, nil otherwise.
: [[API SetActionUIButton|SetActionUIButton]](<span class="apiarg">checkboxFrame, actionSlot, cooldownFrame</span>)
: [[API SetSpellbookPetAction|SetSpellbookPetAction]](<span class="apiarg">slot, target</span>)
: <small>PROTECTED</small> [[API UseAction|UseAction]](<span class="apiarg">slot [, checkCursor, onSelf]</span>) - This instructs the interface to use the action associated with the specified ID, optionally on the player (regardless of target).
: [[API UseWorldMapActionButtonSpellOnQuest|UseWorldMapActionButtonSpellOnQuest]]()
Flyout Buttons
: [[API C_ActionBar.FindFlyoutActionButtons|C_ActionBar.FindFlyoutActionButtons]](<span class="apiarg">flyoutID</span>) : <span class="apiret">slots</span>
: [[API C_ActionBar.HasFlyoutActionButtons|C_ActionBar.HasFlyoutActionButtons]](<span class="apiarg">flyoutID</span>) : <span class="apiret">hasFlyoutActionButtons</span>
: [[API FindFlyoutSlotBySpellID|FindFlyoutSlotBySpellID]](<span class="apiarg">spellID</span>)
: [[API FlyoutHasSpell|FlyoutHasSpell]](<span class="apiarg">flyoutID, spellID</span>)
: [[API GetFlyoutID|GetFlyoutID]](<span class="apiarg">index</span>)
: [[API GetFlyoutInfo|GetFlyoutInfo]](<span class="apiarg">flyoutID</span>)
: [[API GetFlyoutSlotInfo|GetFlyoutSlotInfo]](<span class="apiarg">flyoutID, slot</span>)
: [[API GetNumFlyouts|GetNumFlyouts]]()

==== Key Bindings ====
Relates to [[Key Bindings]].
: [[API C_KeyBindings.GetCustomBindingType|C_KeyBindings.GetCustomBindingType]](<span class="apiarg">bindingIndex</span>) : <span class="apiret">customBindingType</span> - Returns the type of a custom binding.
: [[API GetBinding|GetBinding]](<span class="apiarg">index</span>) - Get action and key bindings for that index.
: [[API GetBindingAction|GetBindingAction]](<span class="apiarg">key [, checkOverride]</span>) - Get the action bound to that key.
: [[API GetBindingByKey|GetBindingByKey]](<span class="apiarg">action [, mode]</span>)
: [[API GetBindingKey|GetBindingKey]](<span class="apiarg">command</span>) - Get the key(s) bound to that action.
: [[API GetBindingText|GetBindingText]](<span class="apiarg">[key, prefix, abbreviate]</span>) - Gets the string value for the key.
: [[API GetCurrentBindingSet|GetCurrentBindingSet]]() - Queries if current set of key bindings is character or account specific.
: [[API GetNumBindings|GetNumBindings]]() - Get total number key bindings and headers.
: [[API LoadBindings|LoadBindings]](<span class="apiarg">which</span>) - Loads default, account or character specific key binding set into memory from disk.
: [[API RunBinding|RunBinding]](<span class="apiarg">command [, up]</span>) - Executes the key binding named "command".
: [[API SaveBindings|SaveBindings]](<span class="apiarg">which</span>) - Saves account or character specific key bindings from memory to disk.
: <small>NOCOMBAT</small> [[API SetBinding|SetBinding]](<span class="apiarg">key [, command, mode]</span>) - Sets or unsets key bindings. (Can not be used in combat.)
: <small>NOCOMBAT</small> [[API SetBindingSpell|SetBindingSpell]](<span class="apiarg">key, spellName</span>) - Set a key binding directly to a spell, uses the same spell name syntax as /cast.
: <small>NOCOMBAT</small> [[API SetBindingClick|SetBindingClick]](<span class="apiarg">key, ButtonName [, mouseButton]</span>) - Set a key binding directly to a Button object. The click sends a mouse down when the key is pressed, and a mouse up when it is released.
: <small>NOCOMBAT</small> [[API SetBindingItem|SetBindingItem]](<span class="apiarg">key, itemname</span>)
: <small>NOCOMBAT</small> [[API SetBindingMacro|SetBindingMacro]](<span class="apiarg">key, macroname or macroId</span>)
: <small>NOCOMBAT</small> [[API SetOverrideBinding|SetOverrideBinding]](<span class="apiarg">owner, isPriority, key [, command]</span>) - Set (or clear) an override key binding.
: <small>NOCOMBAT</small> [[API SetOverrideBindingSpell|SetOverrideBindingSpell]](<span class="apiarg">owner, isPriority, key, spellname</span>)
: <small>NOCOMBAT</small> [[API SetOverrideBindingClick|SetOverrideBindingClick]](<span class="apiarg">owner, isPriority, key, buttonName [, mouseClick]</span>) - Sets an override binding that acts like a mouse click on a button.
: <small>NOCOMBAT</small> [[API SetOverrideBindingItem|SetOverrideBindingItem]](<span class="apiarg">owner, isPriority, key, itemname</span>)
: <small>NOCOMBAT</small> [[API SetOverrideBindingMacro|SetOverrideBindingMacro]](<span class="apiarg">owner, isPriority, key, macroname or macroId</span>)
: <small>NOCOMBAT</small> [[API ClearOverrideBindings|ClearOverrideBindings]](<span class="apiarg">owner</span>) - Reset all overrides belonging to an owner.
: [[API SetMouselookOverrideBinding|SetMouselookOverrideBinding]](<span class="apiarg">key [, command]</span>)

==== Key Modifiers ====
: [[API GetModifiedClick|GetModifiedClick]](<span class="apiarg">action</span>)
: [[API GetModifiedClickAction|GetModifiedClickAction]](<span class="apiarg">index</span>)
: [[API GetMouseButtonClicked|GetMouseButtonClicked]]() - Returns the name of the button that triggered a mouse down/up/click/doubleclick event.
: [[API GetNumModifiedClickActions|GetNumModifiedClickActions]]()
: [[API IsAltKeyDown|IsAltKeyDown]]() - Returns true if the alt key is currently depressed.
: [[API IsControlKeyDown|IsControlKeyDown]]() - Returns true if the control key is currently depressed.
: [[API IsKeyDown|IsKeyDown]](<span class="apiarg">keyOrMouseName [, excludeCurrentBindingState]</span>)
: [[API IsLeftAltKeyDown|IsLeftAltKeyDown]]() - Returns true if the left alt key is currently depressed.
: [[API IsLeftControlKeyDown|IsLeftControlKeyDown]]() - Returns true if the left control key is currently depressed.
: [[API IsLeftMetaKeyDown|IsLeftMetaKeyDown]]()
: [[API IsLeftShiftKeyDown|IsLeftShiftKeyDown]]() - Returns true if the left shift key is currently depressed.
: [[API IsMetaKeyDown|IsMetaKeyDown]]()
: [[API IsModifiedClick|IsModifiedClick]](<span class="apiarg">action</span>) - Returns 1 if the keys for the specified action are down, nil otherwise.
: [[API IsModifierKeyDown|IsModifierKeyDown]]() - Equivalent to (IsShiftKeyDown() or IsControlKeyDown() or IsAltKeyDown()).
: [[API IsMouseButtonDown|IsMouseButtonDown]](<span class="apiarg">[button]</span>)
: [[API IsRightAltKeyDown|IsRightAltKeyDown]]() - Returns true if the right alt key is currently depressed.
: [[API IsRightControlKeyDown|IsRightControlKeyDown]]() - Returns true if the right control key is currently depressed.
: [[API IsRightMetaKeyDown|IsRightMetaKeyDown]]()
: [[API IsRightShiftKeyDown|IsRightShiftKeyDown]]() - Returns true if the right shift key is currently depressed.
: [[API IsShiftKeyDown|IsShiftKeyDown]]() - Returns true if the shift key is currently depressed.
: [[API SetModifiedClick|SetModifiedClick]](<span class="apiarg">action, binding</span>)

==== Cursor ====
Relates to the [[Cursor]].
: [[API C_CurrencyInfo.PickupCurrency|C_CurrencyInfo.PickupCurrency]](<span class="apiarg">type</span>)
: [[API AutoEquipCursorItem|AutoEquipCursorItem]]() - Causes the equipment on the cursor to be equipped.
: [[API ClearCursor|ClearCursor]]() - Clears whatever item the cursor is dragging from the cursor.
: [[API ClickSocketButton|ClickSocketButton]](<span class="apiarg">id</span>) - If the cursor is currently holding a gem, tentatively insert it into the socket.
: [[API CursorCanGoInSlot|CursorCanGoInSlot]](<span class="apiarg">invSlot</span>) - Returns true if the item currently held by the cursor can go into the given inventory (equipment) slot.
: [[API CursorHasItem|CursorHasItem]]() - Returns true if the cursor currently holds an item.
: [[API CursorHasMacro|CursorHasMacro]]() - Returns 1 if the cursor is currently dragging a macro.
: [[API CursorHasMoney|CursorHasMoney]]() - Returns true if the cursor currently holds money.
: [[API CursorHasSpell|CursorHasSpell]]() - Returns true if the cursor currently holds a spell.
: <small>HW, SCRIPT</small> [[API DeleteCursorItem|DeleteCursorItem]]() - Destroys the item on the cursor.
: [[API DropCursorMoney|DropCursorMoney]]() - Drops the amount of money held by the cursor.
: [[API DropItemOnUnit|DropItemOnUnit]](<span class="apiarg">unit</span>) - Drops an item from the cursor onto a unit.
: [[API EquipCursorItem|EquipCursorItem]](<span class="apiarg">invSlot</span>) - Equips the currently picked up item to a specific inventory slot.
: [[API GetCursorDelta|GetCursorDelta]]()
: [[API GetCursorInfo|GetCursorInfo]]() - Returns information about what the cursor is holding.
: [[API GetCursorMoney|GetCursorMoney]]() - Returns the amount of money held by the cursor.
: [[API GetCursorPosition|GetCursorPosition]]() - Returns the cursor's position on the screen.
: [[API HideRepairCursor|HideRepairCursor]]() - Hides the repair cursor.
: [[API InRepairMode|InRepairMode]]() - Returns true if your cursor is in repair mode.
: [[API PickupAction|PickupAction]](<span class="apiarg">slot</span>) - Drags an action out of the specified quickbar slot and holds it on the cursor.
: [[API PickupBagFromSlot|PickupBagFromSlot]](<span class="apiarg">slot</span>) - Picks up the bag from the specified slot, placing it in the cursor.
: [[API PickupCompanion|PickupCompanion]](<span class="apiarg">type, index</span>) - Picks up the indexed companion onto the mouse cursor.
: [[API PickupContainerItem|PickupContainerItem]](<span class="apiarg">bagID, slot</span>)
: [[API PickupGuildBankItem|PickupGuildBankItem]](<span class="apiarg">tab, slot</span>) - Picks up an item from the guild bank.
: [[API PickupGuildBankMoney|PickupGuildBankMoney]](<span class="apiarg">money</span>) - Picks up "money" copper from the guild bank.
: [[API PickupInventoryItem|PickupInventoryItem]](<span class="apiarg">invSlot</span>) - Picks up an item from the player's worn inventory.
: [[API PickupItem|PickupItem]](<span class="apiarg">item</span>)
: [[API PickupMacro|PickupMacro]](<span class="apiarg">macroName or index</span>) - Places the specified macro onto the cursor.
: [[API PickupMerchantItem|PickupMerchantItem]](<span class="apiarg">index</span>) - Places the item onto the cursor. If the cursor already has an item, the item in the cursor will be sold.
: [[API PickupPetAction|PickupPetAction]](<span class="apiarg">slot</span>) - Drags an action from the specified pet action bar slot into the cursor.
: [[API PickupPetSpell|PickupPetSpell]](<span class="apiarg">spellID</span>)
: [[API PickupPlayerMoney|PickupPlayerMoney]](<span class="apiarg">copper</span>) - Picks up an amount of money from the player.
: [[API PickupPvpTalent|PickupPvpTalent]]()
: [[API PickupSpell|PickupSpell]](<span class="apiarg">spellID</span>) - Places the specified spell onto the cursor.
: [[API PickupSpellBookItem|PickupSpellBookItem]](<span class="apiarg">spellSlot</span>)
: [[API PickupStablePet|PickupStablePet]](<span class="apiarg">index</span>)
: [[API PickupTalent|PickupTalent]](<span class="apiarg">talentID</span>) - Grabs the selected talent spell for placement on an action bar.
: [[API PickupTradeMoney|PickupTradeMoney]](<span class="apiarg">copper</span>) - Picks up an amount of money from the player's trade offer.
: [[API PlaceAction|PlaceAction]](<span class="apiarg">slot</span>) - Drops an action from the cursor into the specified quickbar slot.
: [[API ResetCursor|ResetCursor]]()
: [[API SellCursorItem|SellCursorItem]]()
: [[API SetCursor|SetCursor]](<span class="apiarg">cursor</span>) - Path to a texture to use as the cursor image (must be 32x32 pixels) or one of the built-in cursor tokens or nil.
: [[API ShowBuybackSellCursor|ShowBuybackSellCursor]](<span class="apiarg">index</span>)
: [[API ShowContainerSellCursor|ShowContainerSellCursor]](<span class="apiarg">index, slot</span>)
: [[API ShowInventorySellCursor|ShowInventorySellCursor]]()
: [[API ShowRepairCursor|ShowRepairCursor]]()

==== Camera ====
: <small>PROTECTED</small> [[API CameraOrSelectOrMoveStart|CameraOrSelectOrMoveStart]]() - Begin "Left click" in the 3D world.
: <small>PROTECTED</small> [[API CameraOrSelectOrMoveStop|CameraOrSelectOrMoveStop]](<span class="apiarg">[stickyFlag]</span>) - End "Left click" in the 3D world.
: [[API CameraZoomIn|CameraZoomIn]](<span class="apiarg">increment</span>) - Zooms the camera into the viewplane by increment.
: [[API CameraZoomOut|CameraZoomOut]](<span class="apiarg">increment</span>) - Zooms the camera out of the viewplane by increment.
: [[API CenterCamera|CenterCamera]]()
: [[API FlipCameraYaw|FlipCameraYaw]](<span class="apiarg">degrees</span>) - Rotates the camera about the Z-axis by the angle amount specified in degrees.
: [[API GetCameraZoom|GetCameraZoom]]() - Returns the current zoom level, ignoring camera collisions.
: [[API IsMouselooking|IsMouselooking]]() - Returns 1 if mouselook is currently active, nil otherwise.
: [[API MouselookStart|MouselookStart]]() - Enters mouse look mode; mouse movement is used to adjust movement/facing direction.
: [[API MouselookStop|MouselookStop]]() - Exits mouse look mode; mouse movement is used to move the mouse cursor.
: [[API MoveViewDownStart|MoveViewDownStart]]() - Begins rotating the camera downward.
: [[API MoveViewDownStop|MoveViewDownStop]]() - Stops rotating the camera after [[API MoveViewDownStart|MoveViewDownStart]]() is called.
: [[API MoveViewInStart|MoveViewInStart]]() - Begins zooming the camera in.
: [[API MoveViewInStop|MoveViewInStop]]() - Stops zooming the camera in after [[API MoveViewInStart|MoveViewInStart]]() is called.
: [[API MoveViewLeftStart|MoveViewLeftStart]]() - Begins rotating the camera to the Left.
: [[API MoveViewLeftStop|MoveViewLeftStop]]() - Stops rotating the camera after [[API MoveViewLeftStart|MoveViewLeftStart]]() is called.
: [[API MoveViewOutStart|MoveViewOutStart]]() - Begins zooming the camera out.
: [[API MoveViewOutStop|MoveViewOutStop]]() - Stops zooming the camera out after [[API MoveViewOutStart|MoveViewOutStart]]() is called.
: [[API MoveViewRightStart|MoveViewRightStart]]() - Begins rotating the camera to the Right.
: [[API MoveViewRightStop|MoveViewRightStop]]() - Stops rotating the camera after [[API MoveViewRightStart|MoveViewRightStart]]() is called.
: [[API MoveViewUpStart|MoveViewUpStart]]() - Begins rotating the camera upward.
: [[API MoveViewUpStop|MoveViewUpStop]]() - Stops rotating the camera after [[API MoveViewUpStart|MoveViewUpStart]]() is called.
: <small>PROTECTED</small> [[API PitchDownStart|PitchDownStart]]() - Begins pitching the camera Downward.
: <small>PROTECTED</small> [[API PitchDownStop|PitchDownStop]]() - Stops pitching the camera after [[API PitchDownStart|PitchDownStart]]() is called.
: <small>PROTECTED</small> [[API PitchUpStart|PitchUpStart]]() - Begins pitching the camera Upward.
: <small>PROTECTED</small> [[API PitchUpStop|PitchUpStop]]() - Stops pitching the camera after [[API PitchUpStart|PitchUpStart]]() is called.
: [[API NextView|NextView]]() - Cycles forward through the five predefined camera positions.
: [[API PrevView|PrevView]]() - Cycles backward through the five predefined camera positions.
: [[API ResetView|ResetView]](<span class="apiarg">index</span>) - Resets the specified (1-5) predefined camera position to it's default if it was changed using [[API SaveView|SaveView]](index).
: [[API SaveView|SaveView]](<span class="apiarg">index</span>) - Replaces the specified (1-5) predefined camera positions with the current camera position.
: [[API SetView|SetView]](<span class="apiarg">index</span>) - Sets camera position to a specified (1-5) predefined camera position.

==== Targeting ====
Relates to [[Target]]s.
: <small>PROTECTED</small> [[API AssistUnit|AssistUnit]](<span class="apiarg">unit</span>) - Instructs your character to assist the specified unit.
: <small>PROTECTED</small> [[API ClearFocus|ClearFocus]]() - Removes any focus you may have set.
: <small>PROTECTED</small> [[API ClearTarget|ClearTarget]]() - Clears the selected target.
: <small>PROTECTED</small> [[API FocusUnit|FocusUnit]](<span class="apiarg">unit</span>) - Sets your unit for focus.
: [[API IsReplacingUnit|IsReplacingUnit]]()
: <small>PROTECTED</small> [[API TargetDirectionEnemy|TargetDirectionEnemy]](<span class="apiarg">facing</span>)
: <small>PROTECTED</small> [[API TargetDirectionFinished|TargetDirectionFinished]]()
: <small>PROTECTED</small> [[API TargetDirectionFriend|TargetDirectionFriend]](<span class="apiarg">facing</span>)
: <small>PROTECTED</small> [[API TargetLastEnemy|TargetLastEnemy]]() - Selects the last targetted enemy as the current target.
: <small>PROTECTED</small> [[API TargetLastFriend|TargetLastFriend]]()
: <small>PROTECTED</small> [[API TargetLastTarget|TargetLastTarget]]() - Selects the last target as the current target.
: <small>PROTECTED</small> [[API TargetNearestEnemy|TargetNearestEnemy]](<span class="apiarg">[reverseFlag]</span>) - Selects the nearest enemy as the current target.
: <small>PROTECTED</small> [[API TargetNearestEnemyPlayer|TargetNearestEnemyPlayer]](<span class="apiarg">[reverseFlag]</span>) - Selects the nearest enemy player as the current target.
: <small>PROTECTED</small> [[API TargetNearestFriend|TargetNearestFriend]](<span class="apiarg">[reverseFlag]</span>) - Selects the nearest friendly unit as the current target.
: <small>PROTECTED</small> [[API TargetNearestFriendPlayer|TargetNearestFriendPlayer]](<span class="apiarg">[reverseFlag]</span>) - Selects the nearest friendly player as the current target.
: <small>PROTECTED</small> [[API TargetNearest|TargetNearest]]()
: <small>PROTECTED</small> [[API TargetNearestPartyMember|TargetNearestPartyMember]]() - Selects the nearest Party member as the current target.
: <small>PROTECTED</small> [[API TargetNearestRaidMember|TargetNearestRaidMember]]() - Selects the nearest Raid member as the current target.
: <small>PROTECTED</small> [[API TargetPriorityHighlightEnd|TargetPriorityHighlightEnd]]()
: <small>PROTECTED</small> [[API TargetPriorityHighlightStart|TargetPriorityHighlightStart]]()
: <small>PROTECTED</small> [[API TargetUnit|TargetUnit]](<span class="apiarg">unit [, exactMatch]</span>) - Selects the specified unit as the current target.

==== Movement ====
Most of these functions may only be called on a hardware event from '''secure''' code.
: <small>PROTECTED</small> [[API AscendStop|AscendStop]]() - Called when you release the jump key.
: <small>PROTECTED</small> [[API AttackTarget|AttackTarget]]() - Attacks the targetted unit.
: <small>PROTECTED</small> [[API DescendStop|DescendStop]]() - The player stops descending (while swimming or flying)
: <small>PROTECTED</small> [[API InteractUnit|InteractUnit]](<span class="apiarg">unitToken [, exactMatch]</span>)
: [[API FollowUnit|FollowUnit]](<span class="apiarg">unit</span>) - Follow an ally with the specified UnitID.
: [[API IsPlayerMoving|IsPlayerMoving]]()
: <small>PROTECTED</small> [[API JumpOrAscendStart|JumpOrAscendStart]]() - Makes the player jump.
: <small>PROTECTED</small> [[API MoveAndSteerStart|MoveAndSteerStart]]()
: <small>PROTECTED</small> [[API MoveAndSteerStop|MoveAndSteerStop]]()
: <small>PROTECTED</small> [[API MoveBackwardStart|MoveBackwardStart]]() - The player begins moving backward at the specified time.
: <small>PROTECTED</small> [[API MoveBackwardStop|MoveBackwardStop]]() - The player stops moving backward at the specified time.
: <small>PROTECTED</small> [[API MoveForwardStart|MoveForwardStart]]() - The player begins moving forward at the specified time.
: <small>PROTECTED</small> [[API MoveForwardStop|MoveForwardStop]]() - The player stops moving forward at the specified time.
: <small>PROTECTED</small> [[API SetMoveEnabled|SetMoveEnabled]]()
: <small>PROTECTED</small> [[API SetTurnEnabled|SetTurnEnabled]]()
: <small>PROTECTED</small> [[API SitStandOrDescendStart|SitStandOrDescendStart]]() - The player sits, stands, or descends.
: <small>PROTECTED</small> [[API StartAttack|StartAttack]]()
: [[API StopAttack|StopAttack]]() - Turns off auto-attack, if currently active.
: <small>PROTECTED</small> [[API StartAutoRun|StartAutoRun]]()
: <small>PROTECTED</small> [[API StopAutoRun|StopAutoRun]]()
: <small>PROTECTED</small> [[API StrafeLeftStart|StrafeLeftStart]]() - The player begins strafing left at the specified time.
: <small>PROTECTED</small> [[API StrafeLeftStop|StrafeLeftStop]]() - The player stops strafing left at the specified time.
: <small>PROTECTED</small> [[API StrafeRightStart|StrafeRightStart]]() - The player begins strafing right at the specified time.
: <small>PROTECTED</small> [[API StrafeRightStop|StrafeRightStop]]() - The player stops strafing right at the specified time.
: <small>PROTECTED</small> [[API ToggleAutoRun|ToggleAutoRun]]() - Turns auto-run on or off.
: <small>PROTECTED</small> [[API ToggleRun|ToggleRun]]() - Toggle between running and walking.
: <small>PROTECTED</small> [[API TurnLeftStart|TurnLeftStart]]() - The player starts turning left at the specified time.
: <small>PROTECTED</small> [[API TurnLeftStop|TurnLeftStop]]() - The player stops turning left at the specified time.
: <small>PROTECTED</small> [[API TurnOrActionStart|TurnOrActionStart]]() - Begin "Right Click" in the 3D world.
: <small>PROTECTED</small> [[API TurnOrActionStop|TurnOrActionStop]]() - End "Right Click" in the 3D world.
: <small>PROTECTED</small> [[API TurnRightStart|TurnRightStart]]() - The player starts turning right at the specified time.
: <small>PROTECTED</small> [[API TurnRightStop|TurnRightStop]]() - The player stops turning right at the specified time.

==== Gamepad ====
Native gamepad support was added in [[Patch 9.0.1]], where previously [https://github.com/topher-au/WoWmapper WoWmapper] was needed.
: [[API C_GamePad.ApplyConfigs|C_GamePad.ApplyConfigs]]()
: [[API C_GamePad.AxisIndexToConfigName|C_GamePad.AxisIndexToConfigName]](<span class="apiarg">axisIndex</span>) : <span class="apiret">configName</span>
: [[API C_GamePad.ButtonBindingToIndex|C_GamePad.ButtonBindingToIndex]](<span class="apiarg">bindingName</span>) : <span class="apiret">buttonIndex</span>
: [[API C_GamePad.ButtonIndexToBinding|C_GamePad.ButtonIndexToBinding]](<span class="apiarg">buttonIndex</span>) : <span class="apiret">bindingName</span>
: [[API C_GamePad.ButtonIndexToConfigName|C_GamePad.ButtonIndexToConfigName]](<span class="apiarg">buttonIndex</span>) : <span class="apiret">configName</span>
: [[API C_GamePad.DeleteConfig|C_GamePad.DeleteConfig]](<span class="apiarg">configID</span>)
: [[API C_GamePad.GetActiveDeviceID|C_GamePad.GetActiveDeviceID]]() : <span class="apiret">deviceID</span>
: [[API C_GamePad.GetAllConfigIDs|C_GamePad.GetAllConfigIDs]]() : <span class="apiret">configIDs</span>
: [[API C_GamePad.GetAllDeviceIDs|C_GamePad.GetAllDeviceIDs]]() : <span class="apiret">deviceIDs</span>
: [[API C_GamePad.GetCombinedDeviceID|C_GamePad.GetCombinedDeviceID]]() : <span class="apiret">deviceID</span>
: [[API C_GamePad.GetConfig|C_GamePad.GetConfig]](<span class="apiarg">configID</span>) : <span class="apiret">config</span>
: [[API C_GamePad.GetDeviceMappedState|C_GamePad.GetDeviceMappedState]](<span class="apiarg">[deviceID]</span>) : <span class="apiret">state</span>
: [[API C_GamePad.GetDeviceRawState|C_GamePad.GetDeviceRawState]](<span class="apiarg">deviceID</span>) : <span class="apiret">rawState</span>
: [[API C_GamePad.IsEnabled|C_GamePad.IsEnabled]]() : <span class="apiret">enabled</span>
: [[API C_GamePad.SetConfig|C_GamePad.SetConfig]](<span class="apiarg">config</span>)
: [[API C_GamePad.SetVibration|C_GamePad.SetVibration]](<span class="apiarg">vibrationType, intensity</span>)
: [[API C_GamePad.StickIndexToConfigName|C_GamePad.StickIndexToConfigName]](<span class="apiarg">stickIndex</span>) : <span class="apiret">configName</span>
: [[API C_GamePad.StopVibration|C_GamePad.StopVibration]]()
: [[API CanAutoSetGamePadCursorControl|CanAutoSetGamePadCursorControl]]()
: [[API CanGamePadControlCursor|CanGamePadControlCursor]]()
: [[API IsBindingForGamePad|IsBindingForGamePad]](<span class="apiarg">KEY</span>)
: [[API IsGamePadCursorControlEnabled|IsGamePadCursorControlEnabled]]()
: [[API IsGamePadFreelookEnabled|IsGamePadFreelookEnabled]]()
: [[API SetGamePadCursorControl|SetGamePadCursorControl]]()
: [[API SetGamePadFreeLook|SetGamePadFreeLook]]()

=== Currency ===
[[Currencies]] were added in [[Patch 3.0.2]].
: [[API C_CurrencyInfo.DoesWarModeBonusApply|C_CurrencyInfo.DoesWarModeBonusApply]](<span class="apiarg">currencyID</span>) : <span class="apiret">warModeApplies, limitOncePerTooltip</span>
: [[API C_CurrencyInfo.ExpandCurrencyList|C_CurrencyInfo.ExpandCurrencyList]](<span class="apiarg">index, expand</span>) - Sets the expanded/collapsed state of a currency list header.
: [[API C_CurrencyInfo.GetAzeriteCurrencyID|C_CurrencyInfo.GetAzeriteCurrencyID]]() : <span class="apiret">azeriteCurrencyID</span>
: [[API C_CurrencyInfo.GetBackpackCurrencyInfo|C_CurrencyInfo.GetBackpackCurrencyInfo]](<span class="apiarg">index</span>) : <span class="apiret">info</span> - Returns information about a watched currency.
: [[API C_CurrencyInfo.GetBasicCurrencyInfo|C_CurrencyInfo.GetBasicCurrencyInfo]](<span class="apiarg">currencyType [, quantity]</span>) : <span class="apiret">info</span>
: [[API C_CurrencyInfo.GetCurrencyContainerInfo|C_CurrencyInfo.GetCurrencyContainerInfo]](<span class="apiarg">currencyType, quantity</span>) : <span class="apiret">info</span>
: [[API C_CurrencyInfo.GetCurrencyIDFromLink|C_CurrencyInfo.GetCurrencyIDFromLink]](<span class="apiarg">currencyLink</span>) : <span class="apiret">currencyID</span>
: [[API C_CurrencyInfo.GetCurrencyInfo|C_CurrencyInfo.GetCurrencyInfo]](<span class="apiarg">type</span>) : <span class="apiret">info</span> - Returns information about currencies.
: [[API C_CurrencyInfo.GetCurrencyInfoFromLink|C_CurrencyInfo.GetCurrencyInfoFromLink]](<span class="apiarg">link</span>) : <span class="apiret">info</span> - Returns information about currencies from a link.
: [[API C_CurrencyInfo.GetCurrencyLink|C_CurrencyInfo.GetCurrencyLink]](<span class="apiarg">type [, amount]</span>) : <span class="apiret">link</span> - Returns the currencyLink for the specified currencyID.
: [[API C_CurrencyInfo.GetCurrencyListInfo|C_CurrencyInfo.GetCurrencyListInfo]](<span class="apiarg">index</span>) : <span class="apiret">info</span> - Returns information about an element in the currency list.
: [[API C_CurrencyInfo.GetCurrencyListLink|C_CurrencyInfo.GetCurrencyListLink]](<span class="apiarg">index</span>) : <span class="apiret">link</span>
: [[API C_CurrencyInfo.GetCurrencyListSize|C_CurrencyInfo.GetCurrencyListSize]]() : <span class="apiret">currencyListSize</span> - Returns the number of elements (both headers and currencies) in the currency list.
: [[API C_CurrencyInfo.GetFactionGrantedByCurrency|C_CurrencyInfo.GetFactionGrantedByCurrency]](<span class="apiarg">currencyID</span>) : <span class="apiret">factionID</span> - Gets the faction ID for currency that is immediately converted into reputation with that faction instead.
: [[API C_CurrencyInfo.GetWarResourcesCurrencyID|C_CurrencyInfo.GetWarResourcesCurrencyID]]() : <span class="apiret">warResourceCurrencyID</span>
: [[API C_CurrencyInfo.IsCurrencyContainer|C_CurrencyInfo.IsCurrencyContainer]](<span class="apiarg">currencyID, quantity</span>) : <span class="apiret">isCurrencyContainer</span>
: [[API C_CurrencyInfo.SetCurrencyBackpack|C_CurrencyInfo.SetCurrencyBackpack]](<span class="apiarg">index, backpack</span>) - Alters whether a currency is tracked.
: [[API C_CurrencyInfo.SetCurrencyUnused|C_CurrencyInfo.SetCurrencyUnused]](<span class="apiarg">index, unused</span>) - Alters whether a currency is marked as unused.
: [[API GetCoinText|GetCoinText]](<span class="apiarg">amount, separator</span>) - Breaks down money and inserts separator strings.
: [[API GetCoinTextureString|GetCoinTextureString]](<span class="apiarg">amount [, fontHeight]</span>) - Breaks down money and inserts texture strings.
: [[API GetPlayerTradeCurrency|GetPlayerTradeCurrency]]()
: [[API GetTargetTradeCurrency|GetTargetTradeCurrency]]()
: [[API SetTradeCurrency|SetTradeCurrency]](<span class="apiarg">type, amount</span>)
: <small>UI</small> [[API GetNumWatchedTokens|GetNumWatchedTokens]]() - Returns the number of currently watched currencies.

=== Customer Support ===
Relates to [[Customer Support]].
: [[API AcknowledgeSurvey|AcknowledgeSurvey]](<span class="apiarg">caseIndex</span>)
: <small>PROTECTED</small> [[API DeleteGMTicket|DeleteGMTicket]]()
: [[API GetWebTicket|GetWebTicket]]()
: [[API GMEuropaBugsEnabled|GMEuropaBugsEnabled]]()
: [[API GMEuropaComplaintsEnabled|GMEuropaComplaintsEnabled]]()
: [[API GMEuropaSuggestionsEnabled|GMEuropaSuggestionsEnabled]]()
: [[API GMEuropaTicketsEnabled|GMEuropaTicketsEnabled]]()
: [[API GMItemRestorationButtonEnabled|GMItemRestorationButtonEnabled]]()
: [[API GMQuickTicketSystemEnabled|GMQuickTicketSystemEnabled]]()
: [[API GMQuickTicketSystemThrottled|GMQuickTicketSystemThrottled]]()
: [[API GMReportLag|GMReportLag]]()
: [[API GMRequestPlayerInfo|GMRequestPlayerInfo]]()
: [[API GMResponseResolve|GMResponseResolve]]()
: [[API C_UserFeedback.SubmitBug|C_UserFeedback.SubmitBug]](<span class="apiarg">bugInfo [, suppressNotification]</span>) : <span class="apiret">success</span>
: [[API C_UserFeedback.SubmitSuggestion|C_UserFeedback.SubmitSuggestion]](<span class="apiarg">suggestion</span>) : <span class="apiret">success</span>
: [[API GMSurveyAnswerSubmit|GMSurveyAnswerSubmit]](<span class="apiarg">question, rank, comment</span>)
: [[API GMSurveyAnswer|GMSurveyAnswer]]()
: [[API GMSurveyCommentSubmit|GMSurveyCommentSubmit]](<span class="apiarg">comment</span>)
: [[API GMSurveyNumAnswers|GMSurveyNumAnswers]]()
: [[API GMSurveyQuestion|GMSurveyQuestion]]()
: [[API GMSurveySubmit|GMSurveySubmit]]()
: [[API GetGMStatus|GetGMStatus]]()
: [[API GetGMTicket|GetGMTicket]]()
: [[API RegisterStaticConstants|RegisterStaticConstants]](<span class="apiarg">table</span>) - Populates the STATIC_CONSTANTS table for [[API GetGMTicketCategories|GetGMTicketCategories]].
: [[API ReportBug|ReportBug]](<span class="apiarg">description</span>)
: [[API ReportSuggestion|ReportSuggestion]](<span class="apiarg">description</span>)
Knowledge Base
: [[API KBArticle_BeginLoading|KBArticle_BeginLoading]](<span class="apiarg">articleId, searchType</span>) - Starts the article loading process.
: [[API KBArticle_GetData|KBArticle_GetData]]() - Returns information about the current article.
: [[API KBArticle_IsLoaded|KBArticle_IsLoaded]]() - Returns true if an article is loaded.
: [[API KBQuery_BeginLoading|KBQuery_BeginLoading]](<span class="apiarg">searchText, categoryIndex, subcategoryIndex, articlesPerPage, curPage</span>) - Starts a query for articles.
: [[API KBQuery_GetArticleHeaderCount|KBQuery_GetArticleHeaderCount]]() - Returns the number of article headers in the current query.
: [[API KBQuery_GetArticleHeaderData|KBQuery_GetArticleHeaderData]](<span class="apiarg">index</span>) - Returns information about an article header of the current query.
: [[API KBQuery_GetTotalArticleCount|KBQuery_GetTotalArticleCount]]() - Returns the total number of articles that matches the current query.
: [[API KBQuery_IsLoaded|KBQuery_IsLoaded]]() - Returns true if a query loaded successfuly.
: [[API KBSetup_BeginLoading|KBSetup_BeginLoading]](<span class="apiarg">articlesPerPage, curPage</span>) - Starts the loading process for the KB start page.
: [[API KBSetup_GetArticleHeaderCount|KBSetup_GetArticleHeaderCount]]() - Returns the number of articles for the current page.
: [[API KBSetup_GetArticleHeaderData|KBSetup_GetArticleHeaderData]](<span class="apiarg">index</span>) - Returns information for an article header.
: [[API KBSetup_GetCategoryCount|KBSetup_GetCategoryCount]]() - Returns the number of categories in the knowledge base.
: [[API KBSetup_GetCategoryData|KBSetup_GetCategoryData]](<span class="apiarg">index</span>) - Returns information about a category.
: [[API KBSetup_GetLanguageCount|KBSetup_GetLanguageCount]]() - Returns the number of languages in the knowledge base.
: [[API KBSetup_GetLanguageData|KBSetup_GetLanguageData]](<span class="apiarg">index</span>) - Returns information about a language.
: [[API KBSetup_GetSubCategoryCount|KBSetup_GetSubCategoryCount]](<span class="apiarg">category</span>) - Returns the number of subcategories for a category.
: [[API KBSetup_GetSubCategoryData|KBSetup_GetSubCategoryData]](<span class="apiarg">category, index</span>) - Returns information about a subcategory.
: [[API KBSetup_GetTotalArticleCount|KBSetup_GetTotalArticleCount]]() - Returns the total number of articles in the knowlege base.
: [[API KBSetup_IsLoaded|KBSetup_IsLoaded]]() - Returns true if the knowledge base is loaded successfuly.
: [[API KBSystem_GetMOTD|KBSystem_GetMOTD]]() - Returns the server message of the day.
: [[API KBSystem_GetServerNotice|KBSystem_GetServerNotice]]() - Returns the server notice.
: [[API KBSystem_GetServerStatus|KBSystem_GetServerStatus]]() - Returns the server status text.

=== Expansions ===
Relates to [[Expansion]]s.
: [[API CanUpgradeExpansion|CanUpgradeExpansion]]() : <span class="apiret">canUpgradeExpansion</span>
: [[API DoesCurrentLocaleSellExpansionLevels|DoesCurrentLocaleSellExpansionLevels]]() : <span class="apiret">regionSellsExpansions</span>
: [[API GetAccountExpansionLevel|GetAccountExpansionLevel]]() : <span class="apiret">expansionLevel</span> - Returns the expansion level the account has been flagged for.
: [[API GetClientDisplayExpansionLevel|GetClientDisplayExpansionLevel]]() : <span class="apiret">expansionLevel</span> - Returns the expansion level of the game client.
: [[API GetExpansionDisplayInfo|GetExpansionDisplayInfo]](<span class="apiarg">expansionLevel</span>) : <span class="apiret">info</span>
: [[API GetExpansionForLevel|GetExpansionForLevel]](<span class="apiarg">playerLevel</span>) : <span class="apiret">expansionLevel</span>
: [[API GetExpansionLevel|GetExpansionLevel]]() : <span class="apiret">expansionLevel</span> - Returns the expansion level currently accessible by the player.
: [[API GetExpansionTrialInfo|GetExpansionTrialInfo]]() : <span class="apiret">isExpansionTrialAccount, expansionTrialRemainingSeconds</span>
: [[API GetMaximumExpansionLevel|GetMaximumExpansionLevel]]() : <span class="apiret">expansionLevel</span>
: [[API GetMaxLevelForExpansionLevel|GetMaxLevelForExpansionLevel]](<span class="apiarg">expansionLevel</span>) : <span class="apiret">maxLevel</span>
: [[API GetMaxLevelForLatestExpansion|GetMaxLevelForLatestExpansion]]() : <span class="apiret">maxLevel</span>
: [[API GetMaxLevelForPlayerExpansion|GetMaxLevelForPlayerExpansion]]() : <span class="apiret">maxLevel</span>
: [[API GetMaxPlayerLevel|GetMaxPlayerLevel]]()
: [[API GetMinimumExpansionLevel|GetMinimumExpansionLevel]]() : <span class="apiret">expansionLevel</span>
: [[API GetNumExpansions|GetNumExpansions]]() : <span class="apiret">numExpansions</span>
: [[API GetServerExpansionLevel|GetServerExpansionLevel]]() : <span class="apiret">serverExpansionLevel</span> - Returns the expansion level currently active on the server.
: [[API IsExpansionTrial|IsExpansionTrial]]() : <span class="apiret">isExpansionTrialAccount</span>
: [[API C_LevelSquish.ConvertFollowerLevel|C_LevelSquish.ConvertFollowerLevel]](<span class="apiarg">level, maxFollowerLevel</span>) : <span class="apiret">squishedLevel</span>
: [[API C_LevelSquish.ConvertPlayerLevel|C_LevelSquish.ConvertPlayerLevel]](<span class="apiarg">level</span>) : <span class="apiret">squishedLevel</span>

==== Chromie Time ====
[[Timewalking Campaigns]] scale older expansion zones up to level 50.
: [[API C_ChromieTime.CloseUI|C_ChromieTime.CloseUI]]()
: [[API C_ChromieTime.GetChromieTimeExpansionOption|C_ChromieTime.GetChromieTimeExpansionOption]](<span class="apiarg">expansionRecID</span>) : <span class="apiret">info</span>
: [[API C_ChromieTime.GetChromieTimeExpansionOptions|C_ChromieTime.GetChromieTimeExpansionOptions]]() : <span class="apiret">expansionOptions</span>
: [[API C_ChromieTime.SelectChromieTimeOption|C_ChromieTime.SelectChromieTimeOption]](<span class="apiarg">chromieTimeExpansionInfoId</span>)
: [[API C_PlayerInfo.CanPlayerEnterChromieTime|C_PlayerInfo.CanPlayerEnterChromieTime]]() : <span class="apiret">canEnter</span>
: [[API C_PlayerInfo.IsPlayerInChromieTime|C_PlayerInfo.IsPlayerInChromieTime]]() : <span class="apiret">inChromieTime</span>
: [[API UnitChromieTimeID|UnitChromieTimeID]](<span class="apiarg">unit</span>) : <span class="apiret">ID</span>

=== Friends ===
Relates to the [[Friends list]].
: <small>NOSCRIPT</small> [[API C_FriendList.AddFriend|C_FriendList.AddFriend]](<span class="apiarg">name [, notes]</span>) - Adds a friend to your friend list.
: [[API C_FriendList.AddIgnore|C_FriendList.AddIgnore]](<span class="apiarg">name</span>) : <span class="apiret">added</span> - Adds a player to your ignore list.
: [[API C_FriendList.AddOrDelIgnore|C_FriendList.AddOrDelIgnore]](<span class="apiarg">name</span>) - Adds or removes a player to/from the ignore list.
: [[API C_FriendList.AddOrRemoveFriend|C_FriendList.AddOrRemoveFriend]](<span class="apiarg">name, notes</span>) - Adds or removes a player to or from the friends list.
: [[API C_FriendList.DelIgnore|C_FriendList.DelIgnore]](<span class="apiarg">name</span>) : <span class="apiret">removed</span> - Removes a player from your ignore list.
: [[API C_FriendList.DelIgnoreByIndex|C_FriendList.DelIgnoreByIndex]](<span class="apiarg">index</span>) - Removes a player from your ignore list.
: [[API C_FriendList.GetFriendInfo|C_FriendList.GetFriendInfo]](<span class="apiarg">name</span>) : <span class="apiret">info</span> - Retrieves information about a person on your friends list.
: [[API C_FriendList.GetFriendInfoByIndex|C_FriendList.GetFriendInfoByIndex]](<span class="apiarg">index</span>) : <span class="apiret">info</span> - Retrieves information about a person on your friends list.
: [[API C_FriendList.GetIgnoreName|C_FriendList.GetIgnoreName]](<span class="apiarg">index</span>) : <span class="apiret">name</span> - Returns the name of a currently ignored player.
: [[API C_FriendList.GetNumFriends|C_FriendList.GetNumFriends]]() : <span class="apiret">numFriends</span> - Returns how many friends you have.
: [[API C_FriendList.GetNumIgnores|C_FriendList.GetNumIgnores]]() : <span class="apiret">numIgnores</span> - Returns the number of entries on your ignore list.
: [[API C_FriendList.GetNumOnlineFriends|C_FriendList.GetNumOnlineFriends]]() : <span class="apiret">numOnline</span> - Returns the number of online friends.
: [[API C_FriendList.GetSelectedFriend|C_FriendList.GetSelectedFriend]]() : <span class="apiret">index</span> - Returns the index of the currently selected friend.
: [[API C_FriendList.GetSelectedIgnore|C_FriendList.GetSelectedIgnore]]() : <span class="apiret">index</span> - Returns the currently selected index in the ignore listing.
: [[API C_FriendList.IsFriend|C_FriendList.IsFriend]](<span class="apiarg">guid</span>) : <span class="apiret">isFriend</span> - Returns whether a character is your friend.
: [[API C_FriendList.IsIgnored|C_FriendList.IsIgnored]](<span class="apiarg">token</span>) : <span class="apiret">isIgnored</span> - Returns whether a character is being ignored by you.
: [[API C_FriendList.IsIgnoredByGuid|C_FriendList.IsIgnoredByGuid]](<span class="apiarg">guid</span>) : <span class="apiret">isIgnored</span> - Returns whether a character is being ignored by you.
: [[API C_FriendList.RemoveFriend|C_FriendList.RemoveFriend]](<span class="apiarg">name</span>) : <span class="apiret">removed</span> - Removes a friend from the friends list.
: [[API C_FriendList.RemoveFriendByIndex|C_FriendList.RemoveFriendByIndex]](<span class="apiarg">index</span>) - Removes a friend from the friends list.
: [[API C_FriendList.SetFriendNotes|C_FriendList.SetFriendNotes]](<span class="apiarg">name, notes</span>) : <span class="apiret">found</span> - Sets the note text for a friend.
: [[API C_FriendList.SetFriendNotesByIndex|C_FriendList.SetFriendNotesByIndex]](<span class="apiarg">index, notes</span>) - Sets the note text for a friend.
: [[API C_FriendList.SetSelectedFriend|C_FriendList.SetSelectedFriend]](<span class="apiarg">index</span>) - Updates the current selected friend.
: [[API C_FriendList.SetSelectedIgnore|C_FriendList.SetSelectedIgnore]](<span class="apiarg">index</span>) - Sets the currently selected ignore entry.
: [[API C_FriendList.ShowFriends|C_FriendList.ShowFriends]]() - Requests updated friends information from server.

==== Who List ====
Relates to the [[Who List]].
: [[API C_FriendList.GetNumWhoResults|C_FriendList.GetNumWhoResults]]() : <span class="apiret">numWhos, totalNumWhos</span> - Get the number of entries resulting from your most recent /who query.
: [[API C_FriendList.GetWhoInfo|C_FriendList.GetWhoInfo]](<span class="apiarg">index</span>) : <span class="apiret">info</span> - Retrieves info about a character on your current /who list.
: <small>HW</small> [[API C_FriendList.SendWho|C_FriendList.SendWho]](<span class="apiarg">filter</span>) - Sends a Who request, much like using the slash command /who or entering a query in the entry field of the Who List.
: [[API C_FriendList.SetWhoToUi|C_FriendList.SetWhoToUi]](<span class="apiarg">whoToUi</span>) - Sets how the result of a /who request will be handled.
: [[API C_FriendList.SortWho|C_FriendList.SortWho]](<span class="apiarg">sorting</span>) - Sorts the last /who reply received by the client.

==== Battle.net ====
[[Real ID]] friends were added in [[Patch 3.3.5]]
: [[API C_BattleNet.GetAccountInfoByID|C_BattleNet.GetAccountInfoByID]](<span class="apiarg">id [, wowAccountGUID]</span>) : <span class="apiret">accountInfo</span> - Returns information about a Battle.net friend account.
: [[API C_BattleNet.GetAccountInfoByGUID|C_BattleNet.GetAccountInfoByGUID]](<span class="apiarg">guid</span>) : <span class="apiret">accountInfo</span>
: [[API C_BattleNet.GetFriendAccountInfo|C_BattleNet.GetFriendAccountInfo]](<span class="apiarg">friendIndex [, wowAccountGUID]</span>) : <span class="apiret">accountInfo</span>
: [[API C_BattleNet.GetGameAccountInfoByID|C_BattleNet.GetGameAccountInfoByID]](<span class="apiarg">id</span>) : <span class="apiret">gameAccountInfo</span> - Returns information on the game the Battle.net friend is playing.
: [[API C_BattleNet.GetGameAccountInfoByGUID|C_BattleNet.GetGameAccountInfoByGUID]](<span class="apiarg">guid</span>) : <span class="apiret">gameAccountInfo</span>
: [[API C_BattleNet.GetFriendGameAccountInfo|C_BattleNet.GetFriendGameAccountInfo]](<span class="apiarg">friendIndex, accountIndex</span>) : <span class="apiret">gameAccountInfo</span>
: [[API C_BattleNet.GetFriendNumGameAccounts|C_BattleNet.GetFriendNumGameAccounts]](<span class="apiarg">friendIndex</span>) : <span class="apiret">numGameAccounts</span> - Returns the Battle.net friend's number of game accounts.
: [[API C_AccountInfo.GetIDFromBattleNetAccountGUID|C_AccountInfo.GetIDFromBattleNetAccountGUID]](<span class="apiarg">battleNetAccountGUID</span>) : <span class="apiret">battleNetAccountID</span>
: [[API C_AccountInfo.IsGUIDBattleNetAccountType|C_AccountInfo.IsGUIDBattleNetAccountType]](<span class="apiarg">guid</span>) : <span class="apiret">isBNet</span>
: [[API C_AccountInfo.IsGUIDRelatedToLocalAccount|C_AccountInfo.IsGUIDRelatedToLocalAccount]](<span class="apiarg">guid</span>) : <span class="apiret">isLocalUser</span>
: [[API BNAcceptFriendInvite|BNAcceptFriendInvite]](<span class="apiarg">ID</span>)
: [[API BNCheckBattleTagInviteToGuildMember|BNCheckBattleTagInviteToGuildMember]](<span class="apiarg">fullname</span>)
: [[API BNCheckBattleTagInviteToUnit|BNCheckBattleTagInviteToUnit]](<span class="apiarg">unit</span>)
: [[API BNConnected|BNConnected]]() - Returns whether your battle.net state is connected.
: [[API BNDeclineFriendInvite|BNDeclineFriendInvite]](<span class="apiarg">ID</span>)
: [[API BNFeaturesEnabledAndConnected|BNFeaturesEnabledAndConnected]]()
: [[API BNFeaturesEnabled|BNFeaturesEnabled]]()
: [[API BNGetBlockedInfo|BNGetBlockedInfo]](<span class="apiarg">index</span>)
: [[API BNGetDisplayName|BNGetDisplayName]](<span class="apiarg">bnetIdAccount</span>)
: [[API BNGetFOFInfo|BNGetFOFInfo]](<span class="apiarg">mutual, nonMutual, index</span>) - Returns presenceID, givenName, surname, isFriend.
: [[API BNGetFriendIndex|BNGetFriendIndex]](<span class="apiarg">presenceID</span>)
: [[API BNGetFriendInviteInfo|BNGetFriendInviteInfo]](<span class="apiarg">menuValue</span>) - Returns presenceID, givenName, surname.
: [[API BNGetInfo|BNGetInfo]]() - Returns own battle.net data like battleTag.
: [[API BNGetNumBlocked|BNGetNumBlocked]]()
: [[API BNGetNumFOF|BNGetNumFOF]](<span class="apiarg">ID, mutual, non</span>)
: [[API BNGetNumFriendInvites|BNGetNumFriendInvites]]()
: [[API BNGetNumFriends|BNGetNumFriends]]() - Returns numBNetTotal, numBNetOnline, numBNetFavorite, numBNetFavoriteOnline.
: [[API BNGetSelectedBlock|BNGetSelectedBlock]]()
: [[API BNGetSelectedFriend|BNGetSelectedFriend]]()
: [[API BNInviteFriend|BNInviteFriend]](<span class="apiarg">bnetIDGameAccount</span>)
: [[API BNIsBlocked|BNIsBlocked]](<span class="apiarg">ID</span>)
: [[API BNIsFriend|BNIsFriend]](<span class="apiarg">presenceID</span>)
: [[API BNIsSelf|BNIsSelf]](<span class="apiarg">presenceID</span>) - Returns true if the specified presenceID is your own, false otherwise.
: [[API BNRemoveFriend|BNRemoveFriend]](<span class="apiarg">ID</span>)
: [[API BNRequestFOFInfo|BNRequestFOFInfo]](<span class="apiarg">bnetIDAccount</span>)
: [[API BNRequestInviteFriend|BNRequestInviteFriend]](<span class="apiarg">presenceID [, tank, heal, dps]</span>)
: [[API BNSendFriendInviteByID|BNSendFriendInviteByID]](<span class="apiarg">ID, noteText</span>)
: [[API BNSendFriendInvite|BNSendFriendInvite]](<span class="apiarg">text, noteText</span>)
: [[API BNSendGameData|BNSendGameData]](<span class="apiarg">id, addonPrefix, text</span>) - BNet equivalent of SendAddonMessage.
: [[API BNSendSoR|BNSendSoR]](<span class="apiarg">target, comment</span>)
: [[API BNSendVerifiedBattleTagInvite|BNSendVerifiedBattleTagInvite]]() - Unit should have been set with [[API BNCheckBattleTagInviteToUnit|BNCheckBattleTagInviteToUnit]] or [[API BNCheckBattleTagInviteToGuildMember|BNCheckBattleTagInviteToGuildMember]].
: [[API BNSendWhisper|BNSendWhisper]](<span class="apiarg">id, text</span>)
: [[API BNSetAFK|BNSetAFK]](<span class="apiarg">bool</span>) - Set or unset afk status.
: [[API BNSetBlocked|BNSetBlocked]](<span class="apiarg">ID, bool</span>)
: [[API BNSetCustomMessage|BNSetCustomMessage]](<span class="apiarg">text</span>)
: [[API BNSetDND|BNSetDND]](<span class="apiarg">bool</span>) - Set or unset dnd status.
: [[API BNSetFriendFavoriteFlag|BNSetFriendFavoriteFlag]](<span class="apiarg">id, isFavorite</span>) - Set a battle.net friend as favorite.
: [[API BNSetFriendNote|BNSetFriendNote]](<span class="apiarg">ID, noteText</span>)
: [[API BNSetSelectedBlock|BNSetSelectedBlock]](<span class="apiarg">index</span>)
: [[API BNSetSelectedFriend|BNSetSelectedFriend]](<span class="apiarg">index</span>)
: [[API BNSummonFriendByIndex|BNSummonFriendByIndex]](<span class="apiarg">id</span>)
: [[API BNTokenFindName|BNTokenFindName]](<span class="apiarg">target</span>)
: [[API GetAutoCompletePresenceID|GetAutoCompletePresenceID]](<span class="apiarg">name</span>)
: [[API IsBNLogin|IsBNLogin]]()

==== Recruit-a-Friend ====
[[Recruit-A-Friend]] was reworked in [[Patch 8.2.5]]
: [[API C_RecruitAFriend.ClaimActivityReward|C_RecruitAFriend.ClaimActivityReward]](<span class="apiarg">activityID, acceptanceID</span>) : <span class="apiret">success</span>
: [[API C_RecruitAFriend.ClaimNextReward|C_RecruitAFriend.ClaimNextReward]]() : <span class="apiret">success</span>
: [[API C_RecruitAFriend.GenerateRecruitmentLink|C_RecruitAFriend.GenerateRecruitmentLink]]() : <span class="apiret">success</span>
: [[API C_RecruitAFriend.GetRAFInfo|C_RecruitAFriend.GetRAFInfo]]() : <span class="apiret">info</span>
: [[API C_RecruitAFriend.GetRAFSystemInfo|C_RecruitAFriend.GetRAFSystemInfo]]() : <span class="apiret">systemInfo</span>
: [[API C_RecruitAFriend.GetRecruitActivityRequirementsText|C_RecruitAFriend.GetRecruitActivityRequirementsText]](<span class="apiarg">activityID, acceptanceID</span>) : <span class="apiret">requirementsText</span>
: [[API C_RecruitAFriend.GetRecruitInfo|C_RecruitAFriend.GetRecruitInfo]]() : <span class="apiret">active, faction</span>
: [[API C_RecruitAFriend.IsEnabled|C_RecruitAFriend.IsEnabled]]() : <span class="apiret">enabled</span>
: [[API C_RecruitAFriend.IsRecruitingEnabled|C_RecruitAFriend.IsRecruitingEnabled]]() : <span class="apiret">enabled</span>
: [[API C_RecruitAFriend.RemoveRAFRecruit|C_RecruitAFriend.RemoveRAFRecruit]](<span class="apiarg">wowAccountGUID</span>) : <span class="apiret">success</span>
: [[API C_RecruitAFriend.RequestUpdatedRecruitmentInfo|C_RecruitAFriend.RequestUpdatedRecruitmentInfo]]() : <span class="apiret">success</span>
: [[API CanSummonFriend|CanSummonFriend]](<span class="apiarg">unit</span>) - Returns whether you can RaF summon a particular unit.
: [[API GetSummonFriendCooldown|GetSummonFriendCooldown]]() - Returns the cooldown (start, duration) of the RaF Summon Friend ability.
: [[API IsRecruitAFriendLinked|IsRecruitAFriendLinked]]()
: [[API SelectedRealmName|SelectedRealmName]]() - Returns the realm name that will be used in Recruit-a-Friend invitations.
: [[API SummonFriend|SummonFriend]](<span class="apiarg">unit</span>) - Summons a player using the RaF system.

==== Mentor System ====
[https://www.wowhead.com/news=317554/guide-mentor-system-requirements-changed-in-shadowlands-build-35598 Newcomer Guides] were added in [[Patch 9.0.1]]
: [[API C_PlayerMentorship.GetMentorLevelRequirement|C_PlayerMentorship.GetMentorLevelRequirement]]() : <span class="apiret">level</span>
: [[API C_PlayerMentorship.GetMentorRequirements|C_PlayerMentorship.GetMentorRequirements]]() : <span class="apiret">achievementIDs, optionalAchievementIDs, ...</span>
: [[API C_PlayerMentorship.GetMentorshipStatus|C_PlayerMentorship.GetMentorshipStatus]](<span class="apiarg">playerLocation</span>) : <span class="apiret">status</span>
: [[API C_PlayerMentorship.IsActivePlayerConsideredNewcomer|C_PlayerMentorship.IsActivePlayerConsideredNewcomer]]() : <span class="apiret">isConsideredNewcomer</span>
: [[API C_PlayerMentorship.IsMentorRestricted|C_PlayerMentorship.IsMentorRestricted]]() : <span class="apiret">isRestricted</span>

=== Groups ===
: [[API C_PartyInfo.AllowedToDoPartyConversion|C_PartyInfo.AllowedToDoPartyConversion]](<span class="apiarg">toRaid</span>) : <span class="apiret">allowed</span>
: [[API C_PartyInfo.CanInvite|C_PartyInfo.CanInvite]]() : <span class="apiret">allowedToInvite</span>
: [[API C_PartyInfo.ConfirmConvertToRaid|C_PartyInfo.ConfirmConvertToRaid]]()
: [[API C_PartyInfo.ConfirmInviteTravelPass|C_PartyInfo.ConfirmInviteTravelPass]](<span class="apiarg">targetName, targetGUID</span>)
: [[API C_PartyInfo.ConfirmInviteUnit|C_PartyInfo.ConfirmInviteUnit]](<span class="apiarg">targetName</span>)
: [[API C_PartyInfo.ConfirmLeaveParty|C_PartyInfo.ConfirmLeaveParty]](<span class="apiarg">[category]</span>)
: [[API C_PartyInfo.ConvertToParty|C_PartyInfo.ConvertToParty]]() - Converts a raid group with 5 or less members to a party.
: [[API C_PartyInfo.ConvertToRaid|C_PartyInfo.ConvertToRaid]]() - Converts a party to a raid.
: [[API C_PartyInfo.DoCountdown|C_PartyInfo.DoCountdown]](<span class="apiarg">seconds</span>)
: [[API C_PartyInfo.GetMinLevel|C_PartyInfo.GetMinLevel]](<span class="apiarg">[category]</span>) : <span class="apiret">minLevel</span>
: [[API C_PartyInfo.InviteUnit|C_PartyInfo.InviteUnit]](<span class="apiarg">targetName</span>) - Invites the specified player to the group you are currently in.
: [[API C_PartyInfo.IsPartyFull|C_PartyInfo.IsPartyFull]](<span class="apiarg">[category]</span>) : <span class="apiret">isFull</span>
: [[API C_PartyInfo.LeaveParty|C_PartyInfo.LeaveParty]](<span class="apiarg">[category]</span>) - Quit the party, often useful to troubleshoot "phantom party" bugs which may list you in a party when you are in fact not.
: [[API AcceptGroup|AcceptGroup]]() - Accept the invitation to party.
: [[API ConfirmReadyCheck|ConfirmReadyCheck]](<span class="apiarg">isReady</span>) - Indicate if you are ready or not.
: [[API DeclineGroup|DeclineGroup]]() - Decline the invitation to a party.
: [[API DoReadyCheck|DoReadyCheck]]() - Initiate a ready check.
: [[API GetHomePartyInfo|GetHomePartyInfo]]()
: [[API GetInviteConfirmationInfo|GetInviteConfirmationInfo]](<span class="apiarg">guid</span>)
: [[API GetNextPendingInviteConfirmation|GetNextPendingInviteConfirmation]]()
: [[API GetNumGroupMembers|GetNumGroupMembers]](<span class="apiarg">[groupType]</span>) - Returns the total number of players in your group/raid.
: [[API GetNumSubgroupMembers|GetNumSubgroupMembers]](<span class="apiarg">[groupType]</span>) - Returns the number of ''other'' players in your party (or raid subgroup).
: [[API GetPendingInviteConfirmations|GetPendingInviteConfirmations]]()
: [[API GetReadyCheckStatus|GetReadyCheckStatus]](<span class="apiarg">unit</span>) - Returns a group member's response to the current ready check.
: [[API GetReadyCheckTimeLeft|GetReadyCheckTimeLeft]]()
: [[API InGuildParty|InGuildParty]]()
: [[API IsGUIDInGroup|IsGUIDInGroup]](<span class="apiarg">guid [, groupType]</span>)
: [[API IsInGroup|IsInGroup]](<span class="apiarg">[groupType]</span>) - Returns true if in a group.
: [[API IsInGuildGroup|IsInGuildGroup]]()
: [[API IsInRaid|IsInRaid]](<span class="apiarg">[groupType]</span>) - Returns true if in a raid.
: [[API PromoteToLeader|PromoteToLeader]](<span class="apiarg">unit</span>) - Promote a unit to party leader.
: [[API RespondToInviteConfirmation|RespondToInviteConfirmation]](<span class="apiarg">guid, accept</span>)
: <small>HW</small> [[API UninviteUnit|UninviteUnit]](<span class="apiarg">name [, reason]</span>) - Kick a unit from the party if player is group leader; or initiate a kick vote in an LFD group.
: [[API UnitInAnyGroup|UnitInAnyGroup]]()
: [[API UnitInParty|UnitInParty]](<span class="apiarg">unit</span>) - Returns true if the unit is a member of your party.
: [[API UnitIsGroupLeader|UnitIsGroupLeader]](<span class="apiarg">unit [, partyCategory]</span>) - Returns whether the unit is the leader of a party or raid.

==== Raid Groups ====
: [[API ClearPartyAssignment|ClearPartyAssignment]]()
: [[API DemoteAssistant|DemoteAssistant]](<span class="apiarg">unit</span>) - Demotes player from assistant status. Requires raid leadership.
: [[API GetAllowLowLevelRaid|GetAllowLowLevelRaid]]() - Returns whether joining low-level raids is enabled for the current character.
: [[API GetPartyAssignment|GetPartyAssignment]](<span class="apiarg">assignment [, unit, exactMatch]</span>) - Returns a value based on whether the unit is assigned to given role.
: [[API GetRaidRosterInfo|GetRaidRosterInfo]](<span class="apiarg">index</span>) - Returns information about the members of your raid.
: [[API InitiateRolePoll|InitiateRolePoll]]()
: [[API IsEveryoneAssistant|IsEveryoneAssistant]]()
: [[API PromoteToAssistant|PromoteToAssistant]](<span class="apiarg">unit</span>) - Promotes player to assistant status. Requires raid leadership.
: [[API SetAllowLowLevelRaid|SetAllowLowLevelRaid]](<span class="apiarg">allowed</span>) - Controls whether the current character can join low-level raids.
: [[API SetEveryoneIsAssistant|SetEveryoneIsAssistant]]()
: <small>PROTECTED</small> [[API SetPartyAssignment|SetPartyAssignment]](<span class="apiarg">assignment, player</span>)
: <small>NOCOMBAT</small> [[API SetRaidSubgroup|SetRaidSubgroup]](<span class="apiarg">index, subgroup</span>) - Move a raid member from his current subgroup into a different (non-full) subgroup.
: <small>NOCOMBAT</small> [[API SwapRaidSubgroup|SwapRaidSubgroup]](<span class="apiarg">index1, index2</span>) - Swaps raid members into different groups.
: [[API UnitInRaid|UnitInRaid]](<span class="apiarg">unit</span>) - Returns 1 if unit is in your raid, nil if not.
: [[API UnitInSubgroup|UnitInSubgroup]]()
Relates to [[Target_marker|Raid Target]]s and [[World Marker]]s.
: [[API CanBeRaidTarget|CanBeRaidTarget]](<span class="apiarg">unit</span>) - Returns if a unit can be marked with a raid target symbol.
: [[API ClearRaidMarker|ClearRaidMarker]](<span class="apiarg">index</span>) - Removes a raid marker from the world.
: [[API GetRaidTargetIndex|GetRaidTargetIndex]](<span class="apiarg">unit</span>) - Get the raid target index assigned to a unit.
: [[API IsRaidMarkerActive|IsRaidMarkerActive]](<span class="apiarg">index</span>) - Returns whether or not the raid marker specified by index is active.
: <small>PROTECTED</small> [[API PlaceRaidMarker|PlaceRaidMarker]](<span class="apiarg">index</span>) - Brings up a targeting circle to place a raid marker in the world.
: [[API SetRaidTarget|SetRaidTarget]](<span class="apiarg">unit, index</span>) - Sets a raid icon on a unit.
: [[API SetRaidTargetProtected|SetRaidTargetProtected]](<span class="apiarg">unit, index</span>)
: <small>UI</small> [[API SetRaidTargetIcon|SetRaidTargetIcon]](<span class="apiarg">unit, index</span>) - Sets or resets a raid icon on a unit.
Raid Profiles
: [[API CreateNewRaidProfile|CreateNewRaidProfile]](<span class="apiarg">name [, baseOnProfile]</span>)
: [[API DeleteRaidProfile|DeleteRaidProfile]](<span class="apiarg">profile</span>)
: [[API GetMaxNumCUFProfiles|GetMaxNumCUFProfiles]]()
: [[API GetNumRaidProfiles|GetNumRaidProfiles]]()
: [[API GetRaidProfileFlattenedOptions|GetRaidProfileFlattenedOptions]](<span class="apiarg">profile</span>)
: [[API GetRaidProfileName|GetRaidProfileName]](<span class="apiarg">index</span>)
: [[API GetRaidProfileOption|GetRaidProfileOption]](<span class="apiarg">profile, optionName</span>)
: [[API GetRaidProfileSavedPosition|GetRaidProfileSavedPosition]](<span class="apiarg">profile</span>)
: [[API HasLoadedCUFProfiles|HasLoadedCUFProfiles]]()
: [[API RaidProfileExists|RaidProfileExists]](<span class="apiarg">profile</span>)
: [[API RaidProfileHasUnsavedChanges|RaidProfileHasUnsavedChanges]]()
: [[API RestoreRaidProfileFromCopy|RestoreRaidProfileFromCopy]]()
: [[API SaveRaidProfileCopy|SaveRaidProfileCopy]](<span class="apiarg">profile</span>)
: [[API SetRaidProfileOption|SetRaidProfileOption]](<span class="apiarg">profile, optionName, value</span>)
: [[API SetRaidProfileSavedPosition|SetRaidProfileSavedPosition]](<span class="apiarg">profile, isDynamic, topPoint, topOffset, bottomPoint, bottomOffset, leftPoint, leftOffset</span>)

==== Party Sync ====
[[Party Sync]] was added in [[Patch 8.2.5]]
: [[API C_LevelLink.IsActionLocked|C_LevelLink.IsActionLocked]](<span class="apiarg">actionID</span>) : <span class="apiret">isLocked</span>
: [[API C_LevelLink.IsSpellLocked|C_LevelLink.IsSpellLocked]](<span class="apiarg">spellID</span>) : <span class="apiret">isLocked</span>
: [[API C_QuestLog.IsQuestDisabledForSession|C_QuestLog.IsQuestDisabledForSession]](<span class="apiarg">questID</span>) : <span class="apiret">isDisabled</span>
: [[API C_QuestLog.IsQuestReplayable|C_QuestLog.IsQuestReplayable]](<span class="apiarg">questID</span>) : <span class="apiret">isReplayable</span>
: [[API C_QuestLog.IsQuestReplayedRecently|C_QuestLog.IsQuestReplayedRecently]](<span class="apiarg">questID</span>) : <span class="apiret">recentlyReplayed</span>
: [[API C_QuestLog.QuestHasQuestSessionBonus|C_QuestLog.QuestHasQuestSessionBonus]](<span class="apiarg">questID</span>) : <span class="apiret">hasBonus</span>
: [[API C_QuestSession.CanStart|C_QuestSession.CanStart]]() : <span class="apiret">allowed</span>
: [[API C_QuestSession.CanStop|C_QuestSession.CanStop]]() : <span class="apiret">allowed</span>
: [[API C_QuestSession.Exists|C_QuestSession.Exists]]() : <span class="apiret">exists</span>
: [[API C_QuestSession.GetAvailableSessionCommand|C_QuestSession.GetAvailableSessionCommand]]() : <span class="apiret">command</span>
: [[API C_QuestSession.GetPendingCommand|C_QuestSession.GetPendingCommand]]() : <span class="apiret">command</span>
: [[API C_QuestSession.GetProposedMaxLevelForSession|C_QuestSession.GetProposedMaxLevelForSession]]() : <span class="apiret">proposedMaxLevel</span>
: [[API C_QuestSession.GetSessionBeginDetails|C_QuestSession.GetSessionBeginDetails]]() : <span class="apiret">details</span>
: [[API C_QuestSession.GetSuperTrackedQuest|C_QuestSession.GetSuperTrackedQuest]]() : <span class="apiret">questID</span>
: [[API C_QuestSession.HasJoined|C_QuestSession.HasJoined]]() : <span class="apiret">hasJoined</span>
: [[API C_QuestSession.HasPendingCommand|C_QuestSession.HasPendingCommand]]() : <span class="apiret">hasPendingCommand</span>
: [[API C_QuestSession.RequestSessionStart|C_QuestSession.RequestSessionStart]]()
: [[API C_QuestSession.RequestSessionStop|C_QuestSession.RequestSessionStop]]()
: [[API C_QuestSession.SendSessionBeginResponse|C_QuestSession.SendSessionBeginResponse]](<span class="apiarg">beginSession</span>)
: [[API C_QuestSession.SetQuestIsSuperTracked|C_QuestSession.SetQuestIsSuperTracked]](<span class="apiarg">questID, superTrack</span>)
: [[API ConfirmBNRequestInviteFriend|ConfirmBNRequestInviteFriend]](<span class="apiarg">presenceID [, tank, heal, dps]</span>)

=== Group Finder ===
The Looking For Group tool was added in [[Patch 2.0.1]]. It was renamed to the [[Dungeon Finder]] in [[Patch 3.3.0]] and raid queuing moved to a separate [[Raid Browser]]. The [[Raid Finder]] was added in [[Patch 4.3.0]] and merged into the Dungeon Finder in [[Patch 5.0.4]]. The Dungeon Finder was reworked in [[Patch 6.0.2]] into the [[Group Finder]].
: [[API C_LFGInfo.CanPlayerUseGroupFinder|C_LFGInfo.CanPlayerUseGroupFinder]]() : <span class="apiret">canUse, failureReason</span>
: [[API C_LFGInfo.CanPlayerUseLFD|C_LFGInfo.CanPlayerUseLFD]]() : <span class="apiret">canUse, failureReason</span>
: [[API C_LFGInfo.CanPlayerUseLFR|C_LFGInfo.CanPlayerUseLFR]]() : <span class="apiret">canUse, failureReason</span>
: [[API C_LFGInfo.CanPlayerUsePremadeGroup|C_LFGInfo.CanPlayerUsePremadeGroup]]() : <span class="apiret">canUse, failureReason</span>
: [[API C_LFGInfo.CanPlayerUsePVP|C_LFGInfo.CanPlayerUsePVP]]() : <span class="apiret">canUse, failureReason</span>
: [[API C_LFGInfo.ConfirmLfgExpandSearch|C_LFGInfo.ConfirmLfgExpandSearch]]()
: [[API C_LFGInfo.GetAllEntriesForCategory|C_LFGInfo.GetAllEntriesForCategory]](<span class="apiarg">category</span>) : <span class="apiret">lfgDungeonIDs</span>
: [[API C_LFGInfo.GetDungeonInfo|C_LFGInfo.GetDungeonInfo]](<span class="apiarg">lfgDungeonID</span>) : <span class="apiret">dungeonInfo</span>
: [[API C_LFGInfo.GetLFDLockStates|C_LFGInfo.GetLFDLockStates]]() : <span class="apiret">lockInfo</span>
: [[API C_LFGInfo.GetRoleCheckDifficultyDetails|C_LFGInfo.GetRoleCheckDifficultyDetails]]() : <span class="apiret">maxLevel, isLevelReduced</span>
: [[API C_LFGInfo.HideNameFromUI|C_LFGInfo.HideNameFromUI]](<span class="apiarg">dungeonID</span>) : <span class="apiret">shouldHide</span>
: [[API C_LFGList.AcceptInvite|C_LFGList.AcceptInvite]](<span class="apiarg">resultID</span>)
: [[API C_LFGList.ApplyToGroup|C_LFGList.ApplyToGroup]](<span class="apiarg">resultID, comment, tank, healer, dps</span>)
: [[API C_LFGList.CanActiveEntryUseAutoAccept|C_LFGList.CanActiveEntryUseAutoAccept]]() : <span class="apiret">canUseAutoAccept</span>
: [[API C_LFGList.CancelApplication|C_LFGList.CancelApplication]](<span class="apiarg">resultID</span>)
: [[API C_LFGList.CanCreateQuestGroup|C_LFGList.CanCreateQuestGroup]](<span class="apiarg">questID</span>) : <span class="apiret">canCreate</span>
: [[API C_LFGList.ClearApplicationTextFields|C_LFGList.ClearApplicationTextFields]]()
: [[API C_LFGList.ClearCreationTextFields|C_LFGList.ClearCreationTextFields]]()
: [[API C_LFGList.ClearSearchResults|C_LFGList.ClearSearchResults]]()
: [[API C_LFGList.ClearSearchTextFields|C_LFGList.ClearSearchTextFields]]()
: [[API C_LFGList.CopyActiveEntryInfoToCreationFields|C_LFGList.CopyActiveEntryInfoToCreationFields]]()
: <small>HW</small> [[API C_LFGList.CreateListing|C_LFGList.CreateListing]](<span class="apiarg">activityID, itemLevel, honorLevel [, autoAccept, privateGroup, questID]</span>) - Creates a group finder listing.
: [[API C_LFGList.DeclineApplicant|C_LFGList.DeclineApplicant]](<span class="apiarg">applicantID</span>)
: [[API C_LFGList.DeclineInvite|C_LFGList.DeclineInvite]](<span class="apiarg">searchResultID</span>)
: [[API C_LFGList.GetActiveEntryInfo|C_LFGList.GetActiveEntryInfo]]() : <span class="apiret">entryData</span> - Returns information about your currently listed group.
: [[API C_LFGList.GetActivityFullName|C_LFGList.GetActivityFullName]](<span class="apiarg">activityID [, questID, showWarmode]</span>) : <span class="apiret">fullName</span>
: [[API C_LFGList.GetActivityGroupInfo|C_LFGList.GetActivityGroupInfo]](<span class="apiarg">groupID</span>) : <span class="apiret">name, orderIndex</span> - Returns information about an activity group.
: [[API C_LFGList.GetActivityIDForQuestID|C_LFGList.GetActivityIDForQuestID]](<span class="apiarg">questID</span>)
: [[API C_LFGList.GetActivityInfoExpensive|C_LFGList.GetActivityInfoExpensive]](<span class="apiarg">activityID</span>) - Checks if you are in the zone associated with an activity.
: [[API C_LFGList.GetActivityInfoTable|C_LFGList.GetActivityInfoTable]](<span class="apiarg">activityID [, questID, showWarmode]</span>) : <span class="apiret">activityInfo</span>
: [[API C_LFGList.GetApplicantDungeonScoreForListing|C_LFGList.GetApplicantDungeonScoreForListing]](<span class="apiarg">localID, applicantIndex, activityID</span>) : <span class="apiret">bestDungeonScoreForListing</span>
: [[API C_LFGList.GetApplicantInfo|C_LFGList.GetApplicantInfo]](<span class="apiarg">applicantID</span>) : <span class="apiret">applicantData</span> - Returns status informations and custom message of an applicant.
: [[API C_LFGList.GetApplicantMemberInfo|C_LFGList.GetApplicantMemberInfo]](<span class="apiarg">applicantID</span>) - Returns name, class, level and more about an applicant group member.
: [[API C_LFGList.GetApplicantMemberStats|C_LFGList.GetApplicantMemberStats]](<span class="apiarg">applicantID</span>) - Returns stats about an applicant group member.
: [[API C_LFGList.GetApplicantPvpRatingInfoForListing|C_LFGList.GetApplicantPvpRatingInfoForListing]](<span class="apiarg">localID, applicantIndex, activityID</span>) : <span class="apiret">pvpRatingInfo</span>
: [[API C_LFGList.GetApplicants|C_LFGList.GetApplicants]]() - Returns a table with applicantIDs.
: [[API C_LFGList.GetApplicationInfo|C_LFGList.GetApplicationInfo]](<span class="apiarg">searchResultID</span>)
: [[API C_LFGList.GetApplications|C_LFGList.GetApplications]]()
: [[API C_LFGList.GetAvailableActivities|C_LFGList.GetAvailableActivities]](<span class="apiarg">[categoryID, groupID, filter]</span>) - Returns a list of available activityIDs.
: [[API C_LFGList.GetAvailableActivityGroups|C_LFGList.GetAvailableActivityGroups]](<span class="apiarg">categoryID [, filter]</span>) - Returns a list of available groupIDs.
: [[API C_LFGList.GetAvailableCategories|C_LFGList.GetAvailableCategories]](<span class="apiarg">[filter]</span>) - Returns a list of available categoryIDs.
: [[API C_LFGList.GetAvailableLanguageSearchFilter|C_LFGList.GetAvailableLanguageSearchFilter]]()
: [[API C_LFGList.GetAvailableRoles|C_LFGList.GetAvailableRoles]]()
: [[API C_LFGList.GetDefaultLanguageSearchFilter|C_LFGList.GetDefaultLanguageSearchFilter]]()
: [[API C_LFGList.GetFilteredSearchResults|C_LFGList.GetFilteredSearchResults]]() : <span class="apiret">totalResultsFound, filteredResults</span>
: [[API C_LFGList.GetKeystoneForActivity|C_LFGList.GetKeystoneForActivity]](<span class="apiarg">activityID</span>) : <span class="apiret">level</span>
: [[API C_LFGList.GetLanguageSearchFilter|C_LFGList.GetLanguageSearchFilter]]()
: [[API C_LFGList.GetLfgCategoryInfo|C_LFGList.GetLfgCategoryInfo]](<span class="apiarg">categoryID</span>) : <span class="apiret">categoryData</span>
: [[API C_LFGList.GetNumApplicants|C_LFGList.GetNumApplicants]]()
: [[API C_LFGList.GetNumApplications|C_LFGList.GetNumApplications]]()
: [[API C_LFGList.GetNumInvitedApplicantMembers|C_LFGList.GetNumInvitedApplicantMembers]]()
: [[API C_LFGList.GetNumPendingApplicantMembers|C_LFGList.GetNumPendingApplicantMembers]]()
: [[API C_LFGList.GetOwnedKeystoneActivityAndGroupAndLevel|C_LFGList.GetOwnedKeystoneActivityAndGroupAndLevel]](<span class="apiarg">[getTimewalking]</span>) : <span class="apiret">activityID, groupID, keystoneLevel</span>
: [[API C_LFGList.GetPlaystyleString|C_LFGList.GetPlaystyleString]](<span class="apiarg">playstyle, activityInfo</span>) : <span class="apiret">playstyleString</span>
: [[API C_LFGList.GetRoleCheckInfo|C_LFGList.GetRoleCheckInfo]]()
: [[API C_LFGList.GetSearchResultEncounterInfo|C_LFGList.GetSearchResultEncounterInfo]](<span class="apiarg">searchResultID</span>)
: [[API C_LFGList.GetSearchResultFriends|C_LFGList.GetSearchResultFriends]](<span class="apiarg">searchResultID</span>)
: [[API C_LFGList.GetSearchResultInfo|C_LFGList.GetSearchResultInfo]](<span class="apiarg">searchResultID</span>) : <span class="apiret">searchResultData</span>
: [[API C_LFGList.GetSearchResultMemberCounts|C_LFGList.GetSearchResultMemberCounts]](<span class="apiarg">searchResultID</span>)
: [[API C_LFGList.GetSearchResultMemberInfo|C_LFGList.GetSearchResultMemberInfo]](<span class="apiarg">searchResultID, memberIndex</span>)
: [[API C_LFGList.GetSearchResults|C_LFGList.GetSearchResults]]() : <span class="apiret">totalResultsFound, results</span>
: [[API C_LFGList.HasActiveEntryInfo|C_LFGList.HasActiveEntryInfo]]() : <span class="apiret">hasActiveEntryInfo</span>
: [[API C_LFGList.HasActivityList|C_LFGList.HasActivityList]]()
: [[API C_LFGList.HasSearchResultInfo|C_LFGList.HasSearchResultInfo]](<span class="apiarg">searchResultID</span>) : <span class="apiret">hasSearchResultInfo</span>
: [[API C_LFGList.InviteApplicant|C_LFGList.InviteApplicant]](<span class="apiarg">applicantID</span>)
: [[API C_LFGList.IsCurrentlyApplying|C_LFGList.IsCurrentlyApplying]]()
: [[API C_LFGList.IsPlayerAuthenticatedForLFG|C_LFGList.IsPlayerAuthenticatedForLFG]](<span class="apiarg">[activityID]</span>) : <span class="apiret">isAuthenticated</span>
: [[API C_LFGList.RefreshApplicants|C_LFGList.RefreshApplicants]]()
: [[API C_LFGList.RemoveApplicant|C_LFGList.RemoveApplicant]](<span class="apiarg">applicantID</span>)
: [[API C_LFGList.RemoveListing|C_LFGList.RemoveListing]]()
: [[API C_LFGList.ReportApplicant|C_LFGList.ReportApplicant]](<span class="apiarg">applicantID</span>)
: [[API C_LFGList.ReportSearchResult|C_LFGList.ReportSearchResult]](<span class="apiarg">resultID, complaintType</span>)
: [[API C_LFGList.RequestAvailableActivities|C_LFGList.RequestAvailableActivities]]()
: [[API C_LFGList.SaveLanguageSearchFilter|C_LFGList.SaveLanguageSearchFilter]](<span class="apiarg">enabled</span>)
: [[API C_LFGList.Search|C_LFGList.Search]](<span class="apiarg">categoryID [, filter, preferredFilters, languageFilter]</span>)
: [[API C_LFGList.SetApplicantMemberRole|C_LFGList.SetApplicantMemberRole]](<span class="apiarg">applicantID, memberIndex, role</span>)
: [[API C_LFGList.SetEntryTitle|C_LFGList.SetEntryTitle]](<span class="apiarg">activityID, groupID [, playstyle]</span>)
: [[API C_LFGList.SetSearchToActivity|C_LFGList.SetSearchToActivity]](<span class="apiarg">activityID</span>)
: [[API C_LFGList.SetSearchToQuestID|C_LFGList.SetSearchToQuestID]](<span class="apiarg">questID</span>)
: [[API C_LFGList.UpdateListing|C_LFGList.UpdateListing]](<span class="apiarg">lfgID, itemLevel, honorLevel, autoAccept, private [, questID]</span>)
: [[API C_LFGList.ValidateRequiredDungeonScore|C_LFGList.ValidateRequiredDungeonScore]](<span class="apiarg">dungeonScore</span>) : <span class="apiret">passes</span>
: [[API C_LFGList.ValidateRequiredPvpRatingForActivity|C_LFGList.ValidateRequiredPvpRatingForActivity]](<span class="apiarg">activityID, rating</span>) : <span class="apiret">passes</span>
: <small>DEPRECATED</small> [[API C_LFGList.GetActivityInfo|C_LFGList.GetActivityInfo]](<span class="apiarg">activityID</span>) - Returns information about an activity for premade groups.
: <small>DEPRECATED</small> [[API C_LFGList.GetCategoryInfo|C_LFGList.GetCategoryInfo]](<span class="apiarg">categoryID</span>) - Returns information about a specific category.
: [[API AcceptProposal|AcceptProposal]]() - Accept an LFD group invite and enter the dungeon.
: [[API CanPartyLFGBackfill|CanPartyLFGBackfill]]() - Returns whether the party is eligible to recruit additional members from the LFG pool.
: [[API ClearAllLFGDungeons|ClearAllLFGDungeons]](<span class="apiarg">category</span>)
: [[API CompleteLFGReadyCheck|CompleteLFGReadyCheck]](<span class="apiarg">isReady</span>)
: [[API CompleteLFGRoleCheck|CompleteLFGRoleCheck]](<span class="apiarg">isReady</span>) - Returns true if the role check was successful.
: [[API DungeonAppearsInRandomLFD|DungeonAppearsInRandomLFD]](<span class="apiarg">dungeonID</span>)
: [[API GetDungeonForRandomSlot|GetDungeonForRandomSlot]](<span class="apiarg">randomID, index</span>)
: [[API GetGroupMemberCounts|GetGroupMemberCounts]]()
: [[API GetLFDChoiceCollapseState|GetLFDChoiceCollapseState]](<span class="apiarg">[LFGCollapseList]</span>)
: [[API GetLFDChoiceEnabledState|GetLFDChoiceEnabledState]](<span class="apiarg">[LFGEnabledList]</span>)
: [[API GetLFDChoiceOrder|GetLFDChoiceOrder]](<span class="apiarg">[LFDDungeonList]</span>)
: [[API GetLFDLockInfo|GetLFDLockInfo]](<span class="apiarg">dungeonID, playerIndex</span>)
: [[API GetLFDLockPlayerCount|GetLFDLockPlayerCount]]()
: [[API GetLFDRoleLockInfo|GetLFDRoleLockInfo]](<span class="apiarg">dungeonID, roleID</span>)
: [[API GetLFDRoleRestrictions|GetLFDRoleRestrictions]](<span class="apiarg">dungeonID</span>)
: [[API GetLFGBootProposal|GetLFGBootProposal]]() - Returns info about a LFG Kick vote in progress.
: [[API GetLFGCategoryForID|GetLFGCategoryForID]](<span class="apiarg">partySlot</span>)
: [[API GetLFGCompletionReward|GetLFGCompletionReward]]()
: [[API GetLFGCompletionRewardItem|GetLFGCompletionRewardItem]](<span class="apiarg">rewardIndex</span>)
: [[API GetLFGCompletionRewardItemLink|GetLFGCompletionRewardItemLink]](<span class="apiarg">rewardIndex</span>)
: [[API GetLFGDeserterExpiration|GetLFGDeserterExpiration]]() - Returns the time at which you may once again use the dungeon finder after prematurely leaving a group.
: [[API GetLFGDungeonEncounterInfo|GetLFGDungeonEncounterInfo]](<span class="apiarg">dungeonID, encounterIndex</span>)
: [[API GetLFGDungeonInfo|GetLFGDungeonInfo]](<span class="apiarg">dungeonID</span>) - Returns dungeon information.
: [[API GetLFGDungeonNumEncounters|GetLFGDungeonNumEncounters]](<span class="apiarg">dungeonID</span>)
: [[API GetLFGDungeonRewardCapBarInfo|GetLFGDungeonRewardCapBarInfo]](<span class="apiarg">dungeonID</span>) - Returns information on the weekly point limits.
: [[API GetLFGDungeonRewardCapInfo|GetLFGDungeonRewardCapInfo]](<span class="apiarg">dungeonID</span>)
: [[API GetLFGDungeonRewardInfo|GetLFGDungeonRewardInfo]](<span class="apiarg">dungeonID, rewardIndex</span>)
: [[API GetLFGDungeonRewardLink|GetLFGDungeonRewardLink]](<span class="apiarg">dungeonID, rewardIndex</span>)
: [[API GetLFGDungeonRewards|GetLFGDungeonRewards]](<span class="apiarg">dungeonID</span>)
: [[API GetLFGDungeonShortageRewardInfo|GetLFGDungeonShortageRewardInfo]](<span class="apiarg">dungeonID, shortageIndex, rewardIndex</span>)
: [[API GetLFGDungeonShortageRewardLink|GetLFGDungeonShortageRewardLink]](<span class="apiarg">dungeonID, shortageIndex, rewardIndex</span>)
: [[API GetLFGInfoServer|GetLFGInfoServer]](<span class="apiarg">category [, lfgID]</span>)
: [[API GetLFGInviteRoleAvailability|GetLFGInviteRoleAvailability]](<span class="apiarg">roleID</span>)
: [[API GetLFGInviteRoleRestrictions|GetLFGInviteRoleRestrictions]](<span class="apiarg">roleID</span>)
: [[API GetLFGProposal|GetLFGProposal]]()
: [[API GetLFGProposalEncounter|GetLFGProposalEncounter]](<span class="apiarg">encounterIndex</span>)
: [[API GetLFGProposalMember|GetLFGProposalMember]](<span class="apiarg">memberIndex</span>) - Returns info about the players in the LFG proposal.
: [[API GetLFGQueuedList|GetLFGQueuedList]](<span class="apiarg">category [, table]</span>)
: [[API GetLFGQueueStats|GetLFGQueueStats]](<span class="apiarg">category [, lfgID]</span>) - Returns current state and wait times for being in queue.
: [[API GetLFGRandomCooldownExpiration|GetLFGRandomCooldownExpiration]]() - Returns the time at which you may once again queue for a random dungeon.
: [[API GetLFGRandomDungeonInfo|GetLFGRandomDungeonInfo]](<span class="apiarg">index</span>) - Returns information about a random dungeon queue.
: [[API GetLFGReadyCheckUpdate|GetLFGReadyCheckUpdate]]()
: [[API GetLFGReadyCheckUpdateBattlegroundInfo|GetLFGReadyCheckUpdateBattlegroundInfo]]()
: [[API GetLFGRoles|GetLFGRoles]]() - Returns the roles you signed up as, not the role you were assigned.
: [[API GetLFGRoleShortageRewards|GetLFGRoleShortageRewards]](<span class="apiarg">dungeonID, shortageIndex</span>) - Returns information about the LFG Call to Arms rewards.
: [[API GetLFGRoleUpdate|GetLFGRoleUpdate]]()
: [[API GetLFGRoleUpdateBattlegroundInfo|GetLFGRoleUpdateBattlegroundInfo]]()
: [[API GetLFGRoleUpdateMember|GetLFGRoleUpdateMember]](<span class="apiarg">memberIndex</span>)
: [[API GetLFGRoleUpdateSlot|GetLFGRoleUpdateSlot]](<span class="apiarg">slotIndex</span>)
: [[API GetLFGSuspendedPlayers|GetLFGSuspendedPlayers]](<span class="apiarg">category</span>)
: [[API GetNumDungeonForRandomSlot|GetNumDungeonForRandomSlot]](<span class="apiarg">randomID</span>)
: [[API GetNumRandomDungeons|GetNumRandomDungeons]]() - Returns the number of specific dungeons that can be queued for.
: [[API GetPartyLFGBackfillInfo|GetPartyLFGBackfillInfo]]() - Returns information about the dungeon for which you may currently recruit additional members from the LFG pool.
: [[API GetPartyLFGID|GetPartyLFGID]]()
: [[API GetRandomDungeonBestChoice|GetRandomDungeonBestChoice]]() - Returns the suggested random dungeon ID.
: [[API GroupHasOfflineMember|GroupHasOfflineMember]]()
: [[API HasLFGRestrictions|HasLFGRestrictions]]() - Returns whether the player is in a random party formed by the dungeon finder system.
: [[API IsAllowedToUserTeleport|IsAllowedToUserTeleport]]()
: [[API IsInLFGDungeon|IsInLFGDungeon]]()
: [[API IsLFGComplete|IsLFGComplete]]() - Returns whether you have currently finished a Dungeon Finder instance.
: [[API IsLFGDungeonJoinable|IsLFGDungeonJoinable]]() - Returns whether you can queue for a particular dungeon
: [[API IsPartyLFG|IsPartyLFG]]()
: [[API IsServerControlledBackfill|IsServerControlledBackfill]]()
: [[API JoinLFG|JoinLFG]](<span class="apiarg">category</span>)
: [[API JoinSingleLFG|JoinSingleLFG]](<span class="apiarg">category, lfgID</span>)
: [[API LeaveLFG|LeaveLFG]](<span class="apiarg">category</span>)
: [[API LeaveSingleLFG|LeaveSingleLFG]](<span class="apiarg">category, lfgID</span>)
: [[API LFGTeleport|LFGTeleport]](<span class="apiarg">[toSafety]</span>) - Teleports the player to or from a dungeon.
: [[API PartyLFGStartBackfill|PartyLFGStartBackfill]]()
: [[API RefreshLFGList|RefreshLFGList]]()
: [[API RejectProposal|RejectProposal]]() - Rejects an LFG group invite and exits the queue.
: [[API RequestBattlegroundInstanceInfo|RequestBattlegroundInstanceInfo]](<span class="apiarg">index</span>) - Requests data about the available instances of a battleground.
: [[API RequestLFDPartyLockInfo|RequestLFDPartyLockInfo]]()
: [[API RequestLFDPlayerLockInfo|RequestLFDPlayerLockInfo]]()
: [[API SearchLFGGetEncounterResults|SearchLFGGetEncounterResults]](<span class="apiarg">index, encounterIndex</span>)
: [[API SearchLFGGetJoinedID|SearchLFGGetJoinedID]]() - Returns the currently selected raid ID.
: [[API SearchLFGGetNumResults|SearchLFGGetNumResults]]()
: [[API SearchLFGGetPartyResults|SearchLFGGetPartyResults]](<span class="apiarg">[index, memberIndex]</span>)
: [[API SearchLFGGetResults|SearchLFGGetResults]](<span class="apiarg">[index]</span>)
: <small>HW</small> [[API SearchLFGJoin|SearchLFGJoin]](<span class="apiarg">typeID, lfgID</span>)
: [[API SearchLFGLeave|SearchLFGLeave]]() - Removes yourself from looking through the Raid Browser. Equivalent to selecting "none" in the Raid Browser.
: [[API SearchLFGSort|SearchLFGSort]](<span class="apiarg">type</span>)
: [[API SetLFGBootVote|SetLFGBootVote]](<span class="apiarg">shouldKick</span>) - Responds to a vote-kick.
: [[API SetLFGComment|SetLFGComment]](<span class="apiarg">[comment]</span>) - Sets the comment in the raid browser.
: [[API SetLFGDungeon|SetLFGDungeon]](<span class="apiarg">LE_LFG_CATEGORY, type</span>)
: [[API SetLFGDungeonEnabled|SetLFGDungeonEnabled]](<span class="apiarg">dungeonID, isEnabled</span>)
: [[API SetLFGHeaderCollapsed|SetLFGHeaderCollapsed]](<span class="apiarg">headerID, isCollapsed</span>)
: [[API SetLFGRoles|SetLFGRoles]](<span class="apiarg">[leader, tank, healer, dps]</span>) - Changes the selected roles.

==== Raid Finder ====
: [[API GetBestFlexRaidChoice|GetBestFlexRaidChoice]]()
: [[API GetBestRFChoice|GetBestRFChoice]]() - Returns the suggested/default dungeonId for the Raid Finder.
: [[API GetFlexRaidDungeonInfo|GetFlexRaidDungeonInfo]](<span class="apiarg">index</span>)
: [[API GetLFRChoiceOrder|GetLFRChoiceOrder]](<span class="apiarg">[LFRRaidList]</span>)
: [[API GetNumFlexRaidDungeons|GetNumFlexRaidDungeons]]()
: [[API GetNumRFDungeons|GetNumRFDungeons]]()
: [[API GetRFDungeonInfo|GetRFDungeonInfo]](<span class="apiarg">index</span>)

==== Quick Join ====
[[Quick Join]] was added in [[Patch 7.1.0]]
: [[API C_PartyInfo.ConfirmRequestInviteFromUnit|C_PartyInfo.ConfirmRequestInviteFromUnit]](<span class="apiarg">targetName [, tank, healer, dps]</span>)
: [[API C_PartyInfo.GetActiveCategories|C_PartyInfo.GetActiveCategories]]() : <span class="apiret">categories</span>
: [[API C_PartyInfo.GetInviteConfirmationInvalidQueues|C_PartyInfo.GetInviteConfirmationInvalidQueues]](<span class="apiarg">inviteGUID</span>) : <span class="apiret">invalidQueues</span>
: [[API C_PartyInfo.GetInviteReferralInfo|C_PartyInfo.GetInviteReferralInfo]](<span class="apiarg">inviteGUID</span>) : <span class="apiret">outReferredByGuid, outReferredByName, outRelationType, outIsQuickJoin, ...</span> - Returns info for Quick join invites.
: [[API C_PartyInfo.RequestInviteFromUnit|C_PartyInfo.RequestInviteFromUnit]](<span class="apiarg">targetName [, tank, healer, dps]</span>)
: [[API C_SocialQueue.GetAllGroups|C_SocialQueue.GetAllGroups]](<span class="apiarg">[allowNonJoinable, allowNonQueuedGroups]</span>) : <span class="apiret">groupGUIDs</span>
: [[API C_SocialQueue.GetConfig|C_SocialQueue.GetConfig]]() : <span class="apiret">config</span>
: [[API C_SocialQueue.GetGroupForPlayer|C_SocialQueue.GetGroupForPlayer]](<span class="apiarg">playerGUID</span>) : <span class="apiret">groupGUID, isSoloQueueParty</span>
: [[API C_SocialQueue.GetGroupInfo|C_SocialQueue.GetGroupInfo]](<span class="apiarg">groupGUID</span>) : <span class="apiret">canJoin, numQueues, needTank, needHealer, needDamage, isSoloQueueParty, ...</span>
: [[API C_SocialQueue.GetGroupMembers|C_SocialQueue.GetGroupMembers]](<span class="apiarg">groupGUID</span>) : <span class="apiret">groupMembers</span>
: [[API C_SocialQueue.GetGroupQueues|C_SocialQueue.GetGroupQueues]](<span class="apiarg">groupGUID</span>) : <span class="apiret">queues</span>
: [[API C_SocialQueue.RequestToJoin|C_SocialQueue.RequestToJoin]](<span class="apiarg">groupGUID [, applyAsTank, applyAsHealer, applyAsDamage]</span>) : <span class="apiret">requestSuccessful</span>
: [[API C_SocialQueue.SignalToastDisplayed|C_SocialQueue.SignalToastDisplayed]](<span class="apiarg">groupGUID, priority</span>)

=== Guild ===
: [[API C_GuildInfo.CanEditOfficerNote|C_GuildInfo.CanEditOfficerNote]]() : <span class="apiret">canEditOfficerNote</span> - Returns if the player is allowed to edit guild officer notes.
: [[API C_GuildInfo.CanSpeakInGuildChat|C_GuildInfo.CanSpeakInGuildChat]]() : <span class="apiret">canSpeakInGuildChat</span> - Returns if the player is allowed to use guild chat.
: [[API C_GuildInfo.CanViewOfficerNote|C_GuildInfo.CanViewOfficerNote]]() : <span class="apiret">canViewOfficerNote</span> - Returns if the player is allowed to view guild officer notes.
: [[API C_GuildInfo.GetGuildNewsInfo|C_GuildInfo.GetGuildNewsInfo]](<span class="apiarg">index</span>) : <span class="apiret">newsInfo</span>
: [[API C_GuildInfo.GetGuildRankOrder|C_GuildInfo.GetGuildRankOrder]](<span class="apiarg">guid</span>) : <span class="apiret">rankOrder</span> - Returns the current rank of a guild member.
: [[API C_GuildInfo.GetGuildTabardInfo|C_GuildInfo.GetGuildTabardInfo]](<span class="apiarg">[unit]</span>) : <span class="apiret">tabardInfo</span>
: [[API C_GuildInfo.GuildControlGetRankFlags|C_GuildInfo.GuildControlGetRankFlags]](<span class="apiarg">rankOrder</span>) : <span class="apiret">permissions</span> - Returns the permission flags for a rank index.
: [[API C_GuildInfo.GuildRoster|C_GuildInfo.GuildRoster]]() - Requests updated guild roster information from the server.
: [[API C_GuildInfo.IsGuildOfficer|C_GuildInfo.IsGuildOfficer]]() : <span class="apiret">isOfficer</span>
: [[API C_GuildInfo.IsGuildRankAssignmentAllowed|C_GuildInfo.IsGuildRankAssignmentAllowed]](<span class="apiarg">guid, rankOrder</span>) : <span class="apiret">isGuildRankAssignmentAllowed</span>
: [[API C_GuildInfo.QueryGuildMemberRecipes|C_GuildInfo.QueryGuildMemberRecipes]](<span class="apiarg">guildMemberGUID, skillLineID</span>) - Shows the guild member recipes for a profession.
: [[API C_GuildInfo.QueryGuildMembersForRecipe|C_GuildInfo.QueryGuildMembersForRecipe]](<span class="apiarg">skillLineID, recipeSpellID [, recipeLevel]</span>) : <span class="apiret">updatedRecipeSpellID</span>
: [[API C_GuildInfo.RemoveFromGuild|C_GuildInfo.RemoveFromGuild]](<span class="apiarg">guid</span>) - Removes a member from the guild.
: [[API C_GuildInfo.SetGuildRankOrder|C_GuildInfo.SetGuildRankOrder]](<span class="apiarg">guid, rankOrder</span>) - Sets the guild rank for a member.
: [[API C_GuildInfo.SetNote|C_GuildInfo.SetNote]](<span class="apiarg">guid, note, isPublic</span>) - Sets the guild note for a member.
: [[API AcceptGuild|AcceptGuild]]() - The player accepts the invitation to join a guild.
: [[API BuyGuildCharter|BuyGuildCharter]](<span class="apiarg">guildName</span>) - Purchases a guild charter for ''guildName''.
: [[API CanEditGuildEvent|CanEditGuildEvent]]() - Returns true if you are allowed to edit guild events (in the calendar).
: [[API CanEditGuildInfo|CanEditGuildInfo]]() - Returns true if you are allowed to edit the guild info.
: [[API CanEditGuildTabInfo|CanEditGuildTabInfo]](<span class="apiarg">tab</span>)
: [[API CanEditMOTD|CanEditMOTD]]() - Returns true if you are allowed to edit the guild motd.
: [[API CanEditPublicNote|CanEditPublicNote]]() - Returns true if you are allowed to edit a guild member's public note.
: [[API CanGuildDemote|CanGuildDemote]]() - Returns true if you are allowed to demote a guild member.
: [[API CanGuildInvite|CanGuildInvite]]() - Returns true if you are allowed to invite a new member to the guild.
: [[API CanGuildPromote|CanGuildPromote]]() - Returns true if you are allowed to demote a guild member.
: [[API CanGuildRemove|CanGuildRemove]]() - Returns true if you are allowed to remove a guild member.
: [[API CanReplaceGuildMaster|CanReplaceGuildMaster]]() - Returns whether you can impeach the Guild Master due to inactivity.
: [[API CanViewGuildRecipes|CanViewGuildRecipes]](<span class="apiarg">skillLineID</span>)
: [[API CloseGuildRegistrar|CloseGuildRegistrar]]()
: [[API CloseGuildRoster|CloseGuildRoster]]()
: [[API CloseTabardCreation|CloseTabardCreation]]()
: [[API CollapseGuildTradeSkillHeader|CollapseGuildTradeSkillHeader]](<span class="apiarg">tradeSkillID</span>)
: [[API DeclineGuild|DeclineGuild]]() - The player declines the invitation to join a guild.
: [[API ExpandGuildTradeSkillHeader|ExpandGuildTradeSkillHeader]](<span class="apiarg">tradeSkillID</span>)
: [[API GetAutoDeclineGuildInvites|GetAutoDeclineGuildInvites]]() - Returns if guild invites are blocked.
: [[API GetDemotionRank|GetDemotionRank]](<span class="apiarg">index</span>)
: [[API GetGuildCategoryList|GetGuildCategoryList]]()
: [[API GetGuildChallengeInfo|GetGuildChallengeInfo]](<span class="apiarg">index</span>)
: [[API GetGuildCharterCost|GetGuildCharterCost]]() - Returns the cost of purchasing a guild charter.
: [[API GetGuildEventInfo|GetGuildEventInfo]](<span class="apiarg">index</span>) - Returns the event information.
: [[API GetGuildExpirationTime|GetGuildExpirationTime]]()
: [[API GetGuildFactionGroup|GetGuildFactionGroup]]()
: [[API GetGuildFactionInfo|GetGuildFactionInfo]]() - Returns the guild name and faction standing of the player.
: [[API GetGuildInfoText|GetGuildInfoText]]() - Returns the persistant Guild Information data.
: [[API GetGuildInfo|GetGuildInfo]](<span class="apiarg">unit</span>) - This function returns the name of the guild ''unit'' belongs to.
: [[API GetGuildLogoInfo|GetGuildLogoInfo]]()
: [[API GetGuildMemberRecipes|GetGuildMemberRecipes]](<span class="apiarg">name, skillLineID</span>)
: [[API GetGuildNewsFilters|GetGuildNewsFilters]]()
: [[API GetGuildNewsMemberName|GetGuildNewsMemberName]](<span class="apiarg">index, nameIndex</span>)
: [[API GetGuildNewsSort|GetGuildNewsSort]]()
: [[API GetGuildPerkInfo|GetGuildPerkInfo]]()
: [[API GetGuildRecipeInfoPostQuery|GetGuildRecipeInfoPostQuery]]()
: [[API GetGuildRecipeMember|GetGuildRecipeMember]](<span class="apiarg">index</span>)
: [[API GetGuildRenameRequired|GetGuildRenameRequired]]()
: [[API GetGuildRewardInfo|GetGuildRewardInfo]](<span class="apiarg">index</span>)
: [[API GetGuildRosterInfo|GetGuildRosterInfo]](<span class="apiarg">index</span>) - This function is used to get info on members in the guild.
: [[API GetGuildRosterLargestAchievementPoints|GetGuildRosterLargestAchievementPoints]]() - Returns max achievements points.
: [[API GetGuildRosterLastOnline|GetGuildRosterLastOnline]](<span class="apiarg">index</span>) - Returns time since last online for indexth member in current sort order.
: [[API GetGuildRosterMOTD|GetGuildRosterMOTD]]() - Returns guild's MOTD.
: [[API GetGuildRosterSelection|GetGuildRosterSelection]]() - Returns the index of the current selected guild member.
: [[API GetGuildRosterShowOffline|GetGuildRosterShowOffline]]() - Returns true if showing offline members of the guild.
: [[API GetGuildTabardFiles|GetGuildTabardFiles]]() - Returns File IDs of tabard textures used in guild bank logo.
: [[API GetGuildTradeSkillInfo|GetGuildTradeSkillInfo]](<span class="apiarg">index</span>) - Returns the tradeskill index for a guild tradeskill using the index from GetNumGuildTradeSkill.
: [[API GetNumGuildChallenges|GetNumGuildChallenges]]()
: [[API GetNumGuildEvents|GetNumGuildEvents]]() - Returns the number of guild events.
: [[API GetNumGuildMembers|GetNumGuildMembers]]() - Returns the number of total and online guild members.
: [[API GetNumGuildNews|GetNumGuildNews]]()
: [[API GetNumGuildPerks|GetNumGuildPerks]]()
: [[API GetNumGuildRewards|GetNumGuildRewards]]()
: [[API GetNumGuildTradeSkill|GetNumGuildTradeSkill]]() - Returns the number of tradeskills available to the guild UI.
: [[API GetNumMembersInRank|GetNumMembersInRank]](<span class="apiarg">index</span>)
: [[API GetPromotionRank|GetPromotionRank]](<span class="apiarg">index</span>)
: [[API GetTabardCreationCost|GetTabardCreationCost]]() - Returns cost in coppers.
: [[API GetTabardInfo|GetTabardInfo]]()
: [[API GuildControlAddRank|GuildControlAddRank]](<span class="apiarg">name</span>) - Add another rank called "name". Only Guildmaster.
: [[API GuildControlDelRank|GuildControlDelRank]](<span class="apiarg">name</span>) - Delete rank "name". Only Guildmaster.
: [[API GuildControlGetAllowedShifts|GuildControlGetAllowedShifts]](<span class="apiarg">rankOrder</span>)
: [[API GuildControlGetNumRanks|GuildControlGetNumRanks]]() - Returns number of ranks after guild frame open. Any guild member can use this.
: [[API GuildControlGetRankName|GuildControlGetRankName]](<span class="apiarg">index</span>) - Returns name of the rank at index. Any guild member can use this.
: [[API GuildControlSaveRank|GuildControlSaveRank]](<span class="apiarg">name</span>) - Saves the permissions for rank "name". Only Guildmaster.
: <small>PROTECTED</small> [[API GuildControlSetRank|GuildControlSetRank]](<span class="apiarg">rank</span>) - Sets the currently selected rank to view.
: <small>PROTECTED</small> [[API GuildControlSetRankFlag|GuildControlSetRankFlag]](<span class="apiarg">index, enabled</span>) - Enable/disable permission for an action at index. Only Guildmaster.
: [[API GuildControlShiftRankDown|GuildControlShiftRankDown]](<span class="apiarg">rankOrder</span>)
: [[API GuildControlShiftRankUp|GuildControlShiftRankUp]](<span class="apiarg">rankOrder</span>)
: <small>PROTECTED</small> [[API GuildDemote|GuildDemote]](<span class="apiarg">name</span>) - Demotes a player "name".
: [[API GuildDisband|GuildDisband]]() - Disbands at once your guild. You must be the guild's leader to do so. Be careful, no warning is given prior disbanding.
: [[API GuildInfo|GuildInfo]]() - Displays information about the guild you are a member of.
: [[API GuildInvite|GuildInvite]](<span class="apiarg">name</span>) - Invites a player to your guild.
: [[API GuildLeave|GuildLeave]]() - Removes you from your current guild.
: [[API GuildMasterAbsent|GuildMasterAbsent]]()
: [[API GuildNewsSetSticky|GuildNewsSetSticky]](<span class="apiarg">index, bool</span>)
: [[API GuildNewsSort|GuildNewsSort]](<span class="apiarg">byDate</span>)
: <small>PROTECTED</small> [[API GuildPromote|GuildPromote]](<span class="apiarg">name</span>) - Promotes a player "name".
: [[API GuildRosterSetOfficerNote|GuildRosterSetOfficerNote]](<span class="apiarg">index, note</span>) - Sets the officer note at index to "note".
: [[API GuildRosterSetPublicNote|GuildRosterSetPublicNote]](<span class="apiarg">index, note</span>) - Sets the public note at index to "note".
: [[API GuildSetLeader|GuildSetLeader]](<span class="apiarg">name</span>) - Transfers guild leadership to another character.
: [[API GuildSetMOTD|GuildSetMOTD]](<span class="apiarg">note</span>) - Set Guild Message of the Day to "note".
: <small>PROTECTED</small> [[API GuildUninvite|GuildUninvite]](<span class="apiarg">name</span>) - Removes the member "name".
: [[API IsGuildLeader|IsGuildLeader]](<span class="apiarg">name</span>) - Determine if player "name" is a guild master.
: [[API IsGuildMember|IsGuildMember]](<span class="apiarg">guid or unitToken</span>)
: [[API IsGuildRankAssignmentAllowed|IsGuildRankAssignmentAllowed]](<span class="apiarg">playerIndex, rankIndex</span>)
: [[API IsInAuthenticatedRank|IsInAuthenticatedRank]]()
: [[API IsInGuild|IsInGuild]]() - Lets you know whether you are in a guild.
: [[API QueryGuildEventLog|QueryGuildEventLog]]() - Fetches the guild event list and fires a GUILD_EVENT_LOG_UPDATE event.
: [[API QueryGuildNews|QueryGuildNews]]()
: [[API QueryGuildRecipes|QueryGuildRecipes]]()
: [[API ReplaceGuildMaster|ReplaceGuildMaster]]() - Impeaches the current Guild Master.
: [[API RequestGuildChallengeInfo|RequestGuildChallengeInfo]]()
: [[API RequestGuildPartyState|RequestGuildPartyState]]()
: [[API RequestGuildRewards|RequestGuildRewards]]()
: [[API SetAutoDeclineGuildInvites|SetAutoDeclineGuildInvites]](<span class="apiarg">checked</span>) - Blocks guild invites automatically.
: [[API SetGuildInfoText|SetGuildInfoText]]() - Sets the persistant Guild Information data. Limit is 500 letters (GuildInfoEditBox is limited to this number). Longer texts are possible, but will be reseted during the day.
: [[API SetGuildMemberRank|SetGuildMemberRank]](<span class="apiarg">playerIndex, rankIndex</span>)
: [[API SetGuildNewsFilter|SetGuildNewsFilter]](<span class="apiarg">index, bool</span>)
: [[API SetGuildRosterSelection|SetGuildRosterSelection]](<span class="apiarg">index</span>) - Selects/deselects a guild member according current sorting order.
: [[API SetGuildRosterShowOffline|SetGuildRosterShowOffline]](<span class="apiarg">enabled</span>) - Sets/Resets the show offline members flag.
: [[API SetGuildTradeSkillCategoryFilter|SetGuildTradeSkillCategoryFilter]](<span class="apiarg">tradeSkillID</span>)
: [[API SetGuildTradeSkillItemNameFilter|SetGuildTradeSkillItemNameFilter]](<span class="apiarg">itemName</span>)
: [[API SortGuildRoster|SortGuildRoster]](<span class="apiarg">sort</span>) - Sorts guildroster according "sort". Any unknown values sort on "name".
: [[API SortGuildTradeSkill|SortGuildTradeSkill]](<span class="apiarg">type</span>)
: [[API SubmitRequiredGuildRename|SubmitRequiredGuildRename]]()
: [[API ViewGuildRecipes|ViewGuildRecipes]](<span class="apiarg">skillLineID</span>)

==== Petitions ====
Petitions are signup documents for guilds and arena teams. Some functions below only apply to a particular petition type
: [[API CanSignPetition|CanSignPetition]]() - Returns nil if the player cannot sign the current petition.
: [[API ClosePetition|ClosePetition]]() - Closes the current petition.
: [[API GetNumPetitionNames|GetNumPetitionNames]]() - Gets the number of signatures on the current petition.
: [[API GetPetitionInfo|GetPetitionInfo]]() - Retrieves information about the current petition.
: [[API GetPetitionNameInfo|GetPetitionNameInfo]](<span class="apiarg">index</span>) - Retrieves information about a signature on the petition.
: [[API OfferPetition|OfferPetition]]() - Offers a petition to your target, inviting them to join your would-be guild/arena team.
: [[API RenamePetition|RenamePetition]](<span class="apiarg">name</span>) - Renames the current petition.
: [[API SignPetition|SignPetition]]() - Signs the current petition.
: [[API TurnInGuildCharter|TurnInGuildCharter]]() - Founds a guild.

=== Instances ===
: [[API CanChangePlayerDifficulty|CanChangePlayerDifficulty]]()
: [[API CanMapChangeDifficulty|CanMapChangeDifficulty]]()
: [[API CanShowResetInstances|CanShowResetInstances]]() - Determine if player can reset instances at the moment.
: [[API GetDifficultyInfo|GetDifficultyInfo]]() - Returns information about a difficulty.
: [[API GetDungeonDifficultyID|GetDungeonDifficultyID]]() - Returns the player's current Dungeon Difficulty setting (1, 2, 8).
: [[API GetInstanceBootTimeRemaining|GetInstanceBootTimeRemaining]]() - Gets the time in seconds after which the player will be ejected from an instance.
: [[API GetInstanceInfo|GetInstanceInfo]]() - Gets informations about the current Instance.
: [[API GetLegacyRaidDifficultyID|GetLegacyRaidDifficultyID]]()
: [[API GetRaidDifficultyID|GetRaidDifficultyID]]() - Returns the player's current Raid Difficulty setting (1-14).
: [[API IsInInstance|IsInInstance]]() - Returns 1 if the player is in an instance, as well as the type of instance (pvp, raid, etc.).
: [[API IsLegacyDifficulty|IsLegacyDifficulty]](<span class="apiarg">difficultyID</span>)
: [[API ResetInstances|ResetInstances]]() - Reset instances.
: [[API SetDungeonDifficultyID|SetDungeonDifficultyID]](<span class="apiarg">difficultyID</span>) - Sets the player's Dungeon Difficulty setting (for the 5-man instances). See [[difficultyID]].
: [[API SetLegacyRaidDifficultyID|SetLegacyRaidDifficultyID]](<span class="apiarg">difficultyID [, force]</span>)
: [[API SetRaidDifficultyID|SetRaidDifficultyID]](<span class="apiarg">difficultyID</span>) - Sets the players Raid Difficulty settings (for 10-man, 25-man instances). See [[difficultyID]].
: [[API ShowBossFrameWhenUninteractable|ShowBossFrameWhenUninteractable]](<span class="apiarg">unit</span>)
Relates to [[Raid lockout|Instance Locks]]
: [[API GetInstanceLockTimeRemainingEncounter|GetInstanceLockTimeRemainingEncounter]](<span class="apiarg">id</span>) - Returns information about bosses in the instance the player is about to be saved to.
: [[API GetInstanceLockTimeRemaining|GetInstanceLockTimeRemaining]]() - Returns information about the instance lock timer for the instance the player is currently entering.
: [[API GetNumSavedInstances|GetNumSavedInstances]]() - Gets the number of instances for which the player currently has lockout data saved.
: [[API GetNumSavedWorldBosses|GetNumSavedWorldBosses]]()
: [[API GetSavedInstanceChatLink|GetSavedInstanceChatLink]](<span class="apiarg">index</span>)
: [[API GetSavedInstanceEncounterInfo|GetSavedInstanceEncounterInfo]](<span class="apiarg">instanceIndex, encounterIndex</span>)
: [[API GetSavedInstanceInfo|GetSavedInstanceInfo]](<span class="apiarg">index</span>) - Gets information about an instance for which the player has saved lockout data.
: [[API GetSavedWorldBossInfo|GetSavedWorldBossInfo]](<span class="apiarg">index</span>)
: [[API RequestRaidInfo|RequestRaidInfo]]() - Returns information about which instances you are saved to.
: [[API RespondInstanceLock|RespondInstanceLock]]()
: [[API SetSavedInstanceExtend|SetSavedInstanceExtend]](<span class="apiarg">index, extend</span>)

==== Scenarios ====
[[Scenarios]] were added in [[Patch 5.0.4]]
: [[API C_Scenario.GetBonusStepRewardQuestID|C_Scenario.GetBonusStepRewardQuestID]](<span class="apiarg">stepIndex</span>)
: [[API C_Scenario.GetBonusSteps|C_Scenario.GetBonusSteps]]()
: [[API C_Scenario.GetCriteriaInfo|C_Scenario.GetCriteriaInfo]](<span class="apiarg">criteriaIndex</span>)
: [[API C_Scenario.GetCriteriaInfoByStep|C_Scenario.GetCriteriaInfoByStep]](<span class="apiarg">stepID, criteriaIndex</span>)
: [[API C_Scenario.GetInfo|C_Scenario.GetInfo]]()
: [[API C_Scenario.GetProvingGroundsInfo|C_Scenario.GetProvingGroundsInfo]]() - Returns information about the current Proving Grounds trial.
: [[API C_Scenario.GetScenarioIconInfo|C_Scenario.GetScenarioIconInfo]](<span class="apiarg">uiMapID</span>)
: [[API C_Scenario.GetStepInfo|C_Scenario.GetStepInfo]](<span class="apiarg">[bonusStepIndex]</span>)
: [[API C_Scenario.GetSupersededObjectives|C_Scenario.GetSupersededObjectives]]()
: [[API C_Scenario.IsInScenario|C_Scenario.IsInScenario]]()
: [[API C_Scenario.ShouldShowCriteria|C_Scenario.ShouldShowCriteria]]()
: [[API C_Scenario.TreatScenarioAsDungeon|C_Scenario.TreatScenarioAsDungeon]]()
: [[API C_ScenarioInfo.GetScenarioInfo|C_ScenarioInfo.GetScenarioInfo]]() : <span class="apiret">scenarioInfo</span>
: [[API C_ScenarioInfo.GetScenarioStepInfo|C_ScenarioInfo.GetScenarioStepInfo]](<span class="apiarg">[scenarioStepID]</span>) : <span class="apiret">scenarioStepInfo</span>
: [[API GetNumRandomScenarios|GetNumRandomScenarios]]()
: [[API GetNumScenarios|GetNumScenarios]]()
: [[API GetRandomScenarioBestChoice|GetRandomScenarioBestChoice]]()
: [[API GetRandomScenarioInfo|GetRandomScenarioInfo]](<span class="apiarg">index</span>)
: [[API GetScenariosChoiceOrder|GetScenariosChoiceOrder]]()
: [[API GetWorldElapsedTimers|GetWorldElapsedTimers]]()
: [[API GetWorldElapsedTime|GetWorldElapsedTime]](<span class="apiarg">timerID</span>)
: [[API IsInScenarioGroup|IsInScenarioGroup]]()

==== Mythic+ ====
[[Mythic+]] mode was added in [[Patch 7.0.3]]
: [[API C_MythicPlus.GetCurrentAffixes|C_MythicPlus.GetCurrentAffixes]]() : <span class="apiret">affixIDs</span>
: [[API C_MythicPlus.GetCurrentSeason|C_MythicPlus.GetCurrentSeason]]() : <span class="apiret">seasonID</span>
: [[API C_MythicPlus.GetCurrentSeasonValues|C_MythicPlus.GetCurrentSeasonValues]]() : <span class="apiret">displaySeasonID, milestoneSeasonID, rewardSeasonID</span>
: [[API C_MythicPlus.GetLastWeeklyBestInformation|C_MythicPlus.GetLastWeeklyBestInformation]]() : <span class="apiret">challengeMapId, level</span>
: [[API C_MythicPlus.GetOwnedKeystoneChallengeMapID|C_MythicPlus.GetOwnedKeystoneChallengeMapID]]() : <span class="apiret">challengeMapID</span>
: [[API C_MythicPlus.GetOwnedKeystoneLevel|C_MythicPlus.GetOwnedKeystoneLevel]]() : <span class="apiret">keyStoneLevel</span>
: [[API C_MythicPlus.GetOwnedKeystoneMapID|C_MythicPlus.GetOwnedKeystoneMapID]]() : <span class="apiret">mapID</span>
: [[API C_MythicPlus.GetRewardLevelForDifficultyLevel|C_MythicPlus.GetRewardLevelForDifficultyLevel]](<span class="apiarg">difficultyLevel</span>) : <span class="apiret">weeklyRewardLevel, endOfRunRewardLevel</span>
: [[API C_MythicPlus.GetRewardLevelFromKeystoneLevel|C_MythicPlus.GetRewardLevelFromKeystoneLevel]](<span class="apiarg">keystoneLevel</span>) : <span class="apiret">rewardLevel</span>
: [[API C_MythicPlus.GetRunHistory|C_MythicPlus.GetRunHistory]](<span class="apiarg">[includePreviousWeeks, includeIncompleteRuns]</span>) : <span class="apiret">runs</span>
: [[API C_MythicPlus.GetSeasonBestAffixScoreInfoForMap|C_MythicPlus.GetSeasonBestAffixScoreInfoForMap]](<span class="apiarg">mapChallengeModeID</span>) : <span class="apiret">affixScores, bestOverAllScore</span>
: [[API C_MythicPlus.GetSeasonBestForMap|C_MythicPlus.GetSeasonBestForMap]](<span class="apiarg">mapChallengeModeID</span>) : <span class="apiret">intimeInfo, overtimeInfo</span>
: [[API C_MythicPlus.GetWeeklyBestForMap|C_MythicPlus.GetWeeklyBestForMap]](<span class="apiarg">mapChallengeModeID</span>) : <span class="apiret">durationSec, level, completionDate, affixIDs, members, ...</span>
: [[API C_MythicPlus.GetWeeklyChestRewardLevel|C_MythicPlus.GetWeeklyChestRewardLevel]]() : <span class="apiret">currentWeekBestLevel, weeklyRewardLevel, nextDifficultyWeeklyRewardLevel, ...</span>
: [[API C_MythicPlus.IsMythicPlusActive|C_MythicPlus.IsMythicPlusActive]]() : <span class="apiret">isMythicPlusActive</span>
: [[API C_MythicPlus.IsWeeklyRewardAvailable|C_MythicPlus.IsWeeklyRewardAvailable]]() : <span class="apiret">weeklyRewardAvailable</span>
: [[API C_MythicPlus.RequestCurrentAffixes|C_MythicPlus.RequestCurrentAffixes]]()
: [[API C_MythicPlus.RequestMapInfo|C_MythicPlus.RequestMapInfo]]()
: [[API C_MythicPlus.RequestRewards|C_MythicPlus.RequestRewards]]()
[[Challenge Mode]] was added in [[Patch 5.0.4]]
: [[API C_ChallengeMode.CanUseKeystoneInCurrentMap|C_ChallengeMode.CanUseKeystoneInCurrentMap]](<span class="apiarg">itemLocation</span>) : <span class="apiret">canUse</span>
: [[API C_ChallengeMode.ClearKeystone|C_ChallengeMode.ClearKeystone]]()
: [[API C_ChallengeMode.CloseKeystoneFrame|C_ChallengeMode.CloseKeystoneFrame]]()
: [[API C_ChallengeMode.GetActiveChallengeMapID|C_ChallengeMode.GetActiveChallengeMapID]]() : <span class="apiret">mapChallengeModeID</span>
: [[API C_ChallengeMode.GetActiveKeystoneInfo|C_ChallengeMode.GetActiveKeystoneInfo]]() : <span class="apiret">activeKeystoneLevel, activeAffixIDs, ...</span>
: [[API C_ChallengeMode.GetAffixInfo|C_ChallengeMode.GetAffixInfo]](<span class="apiarg">affixID</span>) : <span class="apiret">name, description, filedataid</span>
: [[API C_ChallengeMode.GetCompletionInfo|C_ChallengeMode.GetCompletionInfo]]() : <span class="apiret">mapChallengeModeID, level, time, onTime, keystoneUpgradeLevels, ...</span>
: [[API C_ChallengeMode.GetDeathCount|C_ChallengeMode.GetDeathCount]]() : <span class="apiret">numDeaths, timeLost</span>
: [[API C_ChallengeMode.GetDungeonScoreRarityColor|C_ChallengeMode.GetDungeonScoreRarityColor]](<span class="apiarg">dungeonScore</span>) : <span class="apiret">scoreColor</span>
: [[API C_ChallengeMode.GetGuildLeaders|C_ChallengeMode.GetGuildLeaders]]() : <span class="apiret">topAttempt</span>
: [[API C_ChallengeMode.GetKeystoneLevelRarityColor|C_ChallengeMode.GetKeystoneLevelRarityColor]](<span class="apiarg">level</span>) : <span class="apiret">levelScore</span>
: [[API C_ChallengeMode.GetMapScoreInfo|C_ChallengeMode.GetMapScoreInfo]]() : <span class="apiret">displayScores</span>
: [[API C_ChallengeMode.GetMapTable|C_ChallengeMode.GetMapTable]]() : <span class="apiret">mapChallengeModeIDs</span>
: [[API C_ChallengeMode.GetMapUIInfo|C_ChallengeMode.GetMapUIInfo]](<span class="apiarg">mapChallengeModeID</span>) : <span class="apiret">name, id, timeLimit, texture, backgroundTexture</span>
: [[API C_ChallengeMode.GetOverallDungeonScore|C_ChallengeMode.GetOverallDungeonScore]]() : <span class="apiret">overallDungeonScore</span>
: [[API C_ChallengeMode.GetPowerLevelDamageHealthMod|C_ChallengeMode.GetPowerLevelDamageHealthMod]](<span class="apiarg">powerLevel</span>) : <span class="apiret">damageMod, healthMod</span>
: [[API C_ChallengeMode.GetSlottedKeystoneInfo|C_ChallengeMode.GetSlottedKeystoneInfo]]() : <span class="apiret">mapChallengeModeID, affixIDs, keystoneLevel</span>
: [[API C_ChallengeMode.GetSpecificDungeonOverallScoreRarityColor|C_ChallengeMode.GetSpecificDungeonOverallScoreRarityColor]](<span class="apiarg">specificDungeonOverallScore</span>) : <span class="apiret">specificDungeonOverallScoreColor</span>
: [[API C_ChallengeMode.GetSpecificDungeonScoreRarityColor|C_ChallengeMode.GetSpecificDungeonScoreRarityColor]](<span class="apiarg">specificDungeonScore</span>) : <span class="apiret">specificDungeonScoreColor</span>
: [[API C_ChallengeMode.HasSlottedKeystone|C_ChallengeMode.HasSlottedKeystone]]() : <span class="apiret">hasSlottedKeystone</span>
: [[API C_ChallengeMode.IsChallengeModeActive|C_ChallengeMode.IsChallengeModeActive]]() : <span class="apiret">challengeModeActive</span>
: [[API C_ChallengeMode.RemoveKeystone|C_ChallengeMode.RemoveKeystone]]() : <span class="apiret">removalSuccessful</span>
: [[API C_ChallengeMode.RequestLeaders|C_ChallengeMode.RequestLeaders]](<span class="apiarg">mapChallengeModeID</span>)
: [[API C_ChallengeMode.Reset|C_ChallengeMode.Reset]]()
: [[API C_ChallengeMode.SetKeystoneTooltip|C_ChallengeMode.SetKeystoneTooltip]]()
: [[API C_ChallengeMode.SlotKeystone|C_ChallengeMode.SlotKeystone]]()
: [[API C_ChallengeMode.StartChallengeMode|C_ChallengeMode.StartChallengeMode]]() : <span class="apiret">success</span>

==== Weekly Rewards ====
: [[API C_WeeklyRewards.AreRewardsForCurrentRewardPeriod|C_WeeklyRewards.AreRewardsForCurrentRewardPeriod]]() : <span class="apiret">isCurrentPeriod</span>
: [[API C_WeeklyRewards.CanClaimRewards|C_WeeklyRewards.CanClaimRewards]]() : <span class="apiret">canClaimRewards</span>
: [[API C_WeeklyRewards.ClaimReward|C_WeeklyRewards.ClaimReward]](<span class="apiarg">id</span>)
: [[API C_WeeklyRewards.CloseInteraction|C_WeeklyRewards.CloseInteraction]]()
: [[API C_WeeklyRewards.GetActivities|C_WeeklyRewards.GetActivities]](<span class="apiarg">[type]</span>) : <span class="apiret">activities</span>
: [[API C_WeeklyRewards.GetActivityEncounterInfo|C_WeeklyRewards.GetActivityEncounterInfo]](<span class="apiarg">type, index</span>) : <span class="apiret">info</span>
: [[API C_WeeklyRewards.GetConquestWeeklyProgress|C_WeeklyRewards.GetConquestWeeklyProgress]]() : <span class="apiret">weeklyProgress</span>
: [[API C_WeeklyRewards.GetExampleRewardItemHyperlinks|C_WeeklyRewards.GetExampleRewardItemHyperlinks]](<span class="apiarg">id</span>) : <span class="apiret">hyperlink, upgradeHyperlink</span>
: [[API C_WeeklyRewards.GetItemHyperlink|C_WeeklyRewards.GetItemHyperlink]](<span class="apiarg">itemDBID</span>) : <span class="apiret">hyperlink</span>
: [[API C_WeeklyRewards.GetNextMythicPlusIncrease|C_WeeklyRewards.GetNextMythicPlusIncrease]](<span class="apiarg">mythicPlusLevel</span>) : <span class="apiret">hasSeasonData, nextMythicPlusLevel, itemLevel</span>
: [[API C_WeeklyRewards.HasAvailableRewards|C_WeeklyRewards.HasAvailableRewards]]() : <span class="apiret">hasAvailableRewards</span>
: [[API C_WeeklyRewards.HasGeneratedRewards|C_WeeklyRewards.HasGeneratedRewards]]() : <span class="apiret">hasGeneratedRewards</span>
: [[API C_WeeklyRewards.HasInteraction|C_WeeklyRewards.HasInteraction]]() : <span class="apiret">isInteracting</span>

=== Items ===
These functions operate on item links or item information directly. See also [[#Bags|Bag]] functions.
: [[API C_Item.CanViewItemPowers|C_Item.CanViewItemPowers]](<span class="apiarg">itemLoc</span>) : <span class="apiret">isItemViewable</span>
: [[API C_Item.DoesItemExist|C_Item.DoesItemExist]](<span class="apiarg">emptiableItemLocation</span>) : <span class="apiret">itemExists</span>
: [[API C_Item.DoesItemExistByID|C_Item.DoesItemExistByID]](<span class="apiarg">itemInfo</span>) : <span class="apiret">itemExists</span>
: [[API C_Item.DoesItemMatchBonusTreeReplacement|C_Item.DoesItemMatchBonusTreeReplacement]](<span class="apiarg">itemLoc</span>) : <span class="apiret">matchesBonusTree</span>
: [[API C_Item.GetCurrentItemLevel|C_Item.GetCurrentItemLevel]](<span class="apiarg">itemLocation</span>) : <span class="apiret">currentItemLevel</span>
: [[API C_Item.GetItemGUID|C_Item.GetItemGUID]](<span class="apiarg">itemLocation</span>) : <span class="apiret">itemGuid</span>
: [[API C_Item.GetItemIcon|C_Item.GetItemIcon]](<span class="apiarg">itemLocation</span>) : <span class="apiret">icon</span>
: [[API C_Item.GetItemIconByID|C_Item.GetItemIconByID]](<span class="apiarg">itemInfo</span>) : <span class="apiret">icon</span>
: [[API C_Item.GetItemID|C_Item.GetItemID]](<span class="apiarg">itemLocation</span>) : <span class="apiret">itemID</span>
: [[API C_Item.GetItemInventoryType|C_Item.GetItemInventoryType]](<span class="apiarg">itemLocation</span>) : <span class="apiret">inventoryType</span>
: [[API C_Item.GetItemInventoryTypeByID|C_Item.GetItemInventoryTypeByID]](<span class="apiarg">itemInfo</span>) : <span class="apiret">inventoryType</span>
: [[API C_Item.GetItemLink|C_Item.GetItemLink]](<span class="apiarg">itemLocation</span>) : <span class="apiret">itemLink</span>
: [[API C_Item.GetItemName|C_Item.GetItemName]](<span class="apiarg">itemLocation</span>) : <span class="apiret">itemName</span>
: [[API C_Item.GetItemNameByID|C_Item.GetItemNameByID]](<span class="apiarg">itemInfo</span>) : <span class="apiret">itemName</span>
: [[API C_Item.GetItemQuality|C_Item.GetItemQuality]](<span class="apiarg">itemLocation</span>) : <span class="apiret">itemQuality</span>
: [[API C_Item.GetItemQualityByID|C_Item.GetItemQualityByID]](<span class="apiarg">itemInfo</span>) : <span class="apiret">itemQuality</span>
: [[API C_Item.GetStackCount|C_Item.GetStackCount]](<span class="apiarg">itemLocation</span>) : <span class="apiret">stackCount</span>
: [[API C_Item.IsBound|C_Item.IsBound]](<span class="apiarg">itemLocation</span>) : <span class="apiret">isBound</span>
: [[API C_Item.IsItemDataCached|C_Item.IsItemDataCached]](<span class="apiarg">itemLocation</span>) : <span class="apiret">isCached</span>
: [[API C_Item.IsItemDataCachedByID|C_Item.IsItemDataCachedByID]](<span class="apiarg">itemInfo</span>) : <span class="apiret">isCached</span>
: [[API C_Item.IsItemKeystoneByID|C_Item.IsItemKeystoneByID]](<span class="apiarg">itemInfo</span>) : <span class="apiret">isKeystone</span>
: [[API C_Item.IsLocked|C_Item.IsLocked]](<span class="apiarg">itemLocation</span>) : <span class="apiret">isLocked</span>
: [[API C_Item.LockItem|C_Item.LockItem]](<span class="apiarg">itemLocation</span>)
: [[API C_Item.LockItemByGUID|C_Item.LockItemByGUID]](<span class="apiarg">itemGUID</span>)
: [[API C_Item.RequestLoadItemData|C_Item.RequestLoadItemData]](<span class="apiarg">itemLocation</span>)
: [[API C_Item.RequestLoadItemDataByID|C_Item.RequestLoadItemDataByID]](<span class="apiarg">itemInfo</span>)
: [[API C_Item.UnlockItem|C_Item.UnlockItem]](<span class="apiarg">itemLocation</span>)
: [[API C_Item.UnlockItemByGUID|C_Item.UnlockItemByGUID]](<span class="apiarg">itemGUID</span>)
: [[API C_ItemInteraction.ClearPendingItem|C_ItemInteraction.ClearPendingItem]]()
: [[API C_ItemInteraction.CloseUI|C_ItemInteraction.CloseUI]]()
: [[API C_ItemInteraction.GetItemInteractionInfo|C_ItemInteraction.GetItemInteractionInfo]]() : <span class="apiret">info</span>
: [[API C_ItemInteraction.GetItemInteractionSpellId|C_ItemInteraction.GetItemInteractionSpellId]]() : <span class="apiret">spellId</span>
: [[API C_ItemInteraction.InitializeFrame|C_ItemInteraction.InitializeFrame]]()
: [[API C_ItemInteraction.PerformItemInteraction|C_ItemInteraction.PerformItemInteraction]]()
: [[API C_ItemInteraction.Reset|C_ItemInteraction.Reset]]()
: [[API C_ItemInteraction.SetPendingItem|C_ItemInteraction.SetPendingItem]](<span class="apiarg">[item]</span>) : <span class="apiret">success</span>
: [[API C_NewItems.ClearAll|C_NewItems.ClearAll]]() - Clears the new item flag on all items in the player's inventory.
: [[API C_NewItems.IsNewItem|C_NewItems.IsNewItem]](<span class="apiarg">bag, slot</span>) - Returns whether the item in the specified container slot is flagged as new.
: [[API C_NewItems.RemoveNewItem|C_NewItems.RemoveNewItem]](<span class="apiarg">bag, slot</span>) - Clears the "new item" flag.
: [[API ActionBindsItem|ActionBindsItem]]() - Confirms this will bind this item to you.
: [[API ConfirmOnUse|ConfirmOnUse]]() - Confirms you want to use the item.
: [[API EndBoundTradeable|EndBoundTradeable]](<span class="apiarg">type</span>) - Confirms this will make this item non-tradeable.
: [[API EndRefund|EndRefund]]() - Confirms this will make this item non-refundable.
: [[API EquipItemByName|EquipItemByName]](<span class="apiarg">item [, invSlot]</span>) - Equips an item, optionally into a specified slot.
: [[API GetDetailedItemLevelInfo|GetDetailedItemLevelInfo]](<span class="apiarg">item</span>) - Returns an item's item level.
: [[API GetItemChildInfo|GetItemChildInfo]](<span class="apiarg">item [, slotID]</span>)
: [[API GetItemClassInfo|GetItemClassInfo]](<span class="apiarg">itemClassID</span>) - Returns the name of the item type.
: [[API GetItemCooldown|GetItemCooldown]](<span class="apiarg">itemId</span>) - Returns startTime, duration, enable.
: [[API GetItemCount|GetItemCount]](<span class="apiarg">item [, includeBank, includeCharges]</span>) - Returns number of such items in inventory, or charges instead if it has charges.
: [[API GetItemCreationContext|GetItemCreationContext]](<span class="apiarg">itemlink</span>)
: [[API GetItemFamily|GetItemFamily]](<span class="apiarg">item</span>) - Returns the bag type that an item can go into, or for bags the type of items that it can contain.
: [[API GetItemGem|GetItemGem]](<span class="apiarg">item, index</span>)
: [[API GetItemIcon|GetItemIcon]](<span class="apiarg">itemId</span>) - Returns the icon for the item. Works for any valid item even if it's not in the cache.
: [[API GetItemInfo|GetItemInfo]](<span class="apiarg">item</span>) - Returns information about an item.
: [[API GetItemInfoInstant|GetItemInfoInstant]](<span class="apiarg">item</span>) - Returns basic information about an item.
: [[API GetItemInventorySlotInfo|GetItemInventorySlotInfo]](<span class="apiarg">inventorySlot</span>)
: [[API GetItemLevelColor|GetItemLevelColor]]()
: [[API GetItemQualityColor|GetItemQualityColor]](<span class="apiarg">quality</span>) - Returns the RGB color codes for a quality.
: [[API GetItemSetInfo|GetItemSetInfo]](<span class="apiarg">setID</span>)
: [[API GetItemSpecInfo|GetItemSpecInfo]](<span class="apiarg">item [, specTable]</span>)
: [[API GetItemSpell|GetItemSpell]](<span class="apiarg">item</span>) - Returns name, rank.
: [[API GetItemStatDelta|GetItemStatDelta]](<span class="apiarg">itemLink1, itemLink2 [, statTable]</span>)
: [[API GetItemStats|GetItemStats]](<span class="apiarg">itemLink, statTable</span>) - Returns a table of stats for an item.
: [[API GetItemSubClassInfo|GetItemSubClassInfo]](<span class="apiarg">itemClassID, itemSubClassID</span>) - Returns the name of the item subtype.
: [[API GetItemUniqueness|GetItemUniqueness]](<span class="apiarg">item</span>)
: [[API IsBattlePayItem|IsBattlePayItem]](<span class="apiarg">bag, slot</span>)
: [[API IsConsumableItem|IsConsumableItem]](<span class="apiarg">item</span>)
: [[API IsCurrentItem|IsCurrentItem]](<span class="apiarg">item</span>)
: [[API IsEquippableItem|IsEquippableItem]](<span class="apiarg">item</span>) - Returns whether an item can be equipped.
: [[API IsEquippedItem|IsEquippedItem]](<span class="apiarg">item</span>)
: [[API IsEquippedItemType|IsEquippedItemType]](<span class="apiarg">type</span>) - Where "type" is any valid inventory type, item class, or item subclass.
: [[API IsHarmfulItem|IsHarmfulItem]](<span class="apiarg">item</span>) - Returns whether an item can be used against hostile units
: [[API IsHelpfulItem|IsHelpfulItem]](<span class="apiarg">item</span>) - Returns whether an item can be used on the player or friendly units
: [[API IsItemInRange|IsItemInRange]](<span class="apiarg">item [, unit]</span>) - Returns whether the item is in usable range of the unit.
: [[API IsUsableItem|IsUsableItem]](<span class="apiarg">item</span>) - Returns usable, noMana.
: [[API ItemHasRange|ItemHasRange]](<span class="apiarg">item</span>)
: [[API TargetSpellReplacesBonusTree|TargetSpellReplacesBonusTree]]()
: <small>PROTECTED</small> [[API UseItemByName|UseItemByName]](<span class="apiarg">itemName, unit</span>) - Use an item on the unit specified.
Item Enchants
: [[API BindEnchant|BindEnchant]]() - Confirm the binding of the item when enchanting it.
: [[API ReplaceEnchant|ReplaceEnchant]]()  - Confirm the replacement of an enchantment.
: [[API ReplaceTradeEnchant|ReplaceTradeEnchant]]() - Confirm the replacement of an enchantment via trade.
: <small>DEPRECATED</small> [[API GetItemUpdateLevel|GetItemUpdateLevel]]()
: <small>DEPRECATED</small> [[API GetItemUpgradeItemInfo|GetItemUpgradeItemInfo]]()
: <small>DEPRECATED</small> [[API GetItemUpgradeStats|GetItemUpgradeStats]](<span class="apiarg">upgraded</span>)
: <small>DEPRECATED</small> [[API IsDressableItem|IsDressableItem]](<span class="apiarg">item</span>) - Returns if the item can be shown in the [[Dressing room]].

=== Item Upgrade ===
: [[API C_ItemUpgrade.CanUpgradeItem|C_ItemUpgrade.CanUpgradeItem]](<span class="apiarg">baseItem</span>) : <span class="apiret">isValid</span>
: [[API C_ItemUpgrade.ClearItemUpgrade|C_ItemUpgrade.ClearItemUpgrade]]()
: [[API C_ItemUpgrade.CloseItemUpgrade|C_ItemUpgrade.CloseItemUpgrade]]()
: [[API C_ItemUpgrade.GetItemHyperlink|C_ItemUpgrade.GetItemHyperlink]]() : <span class="apiret">link</span>
: [[API C_ItemUpgrade.GetItemUpgradeCurrentLevel|C_ItemUpgrade.GetItemUpgradeCurrentLevel]]() : <span class="apiret">itemLevel, isPvpItemLevel</span>
: [[API C_ItemUpgrade.GetItemUpgradeEffect|C_ItemUpgrade.GetItemUpgradeEffect]](<span class="apiarg">effectIndex [, numUpgradeLevels]</span>) : <span class="apiret">outBaseEffect, outUpgradedEffect</span>
: [[API C_ItemUpgrade.GetItemUpgradeItemInfo|C_ItemUpgrade.GetItemUpgradeItemInfo]]() : <span class="apiret">itemInfo</span>
: [[API C_ItemUpgrade.GetItemUpgradePvpItemLevelDeltaValues|C_ItemUpgrade.GetItemUpgradePvpItemLevelDeltaValues]](<span class="apiarg">numUpgradeLevels</span>) : <span class="apiret">currentPvPItemLevel, upgradedPvPItemLevel</span>
: [[API C_ItemUpgrade.GetNumItemUpgradeEffects|C_ItemUpgrade.GetNumItemUpgradeEffects]]() : <span class="apiret">numItemUpgradeEffects</span>
: [[API C_ItemUpgrade.SetItemUpgradeFromCursorItem|C_ItemUpgrade.SetItemUpgradeFromCursorItem]]()
: [[API C_ItemUpgrade.SetItemUpgradeFromLocation|C_ItemUpgrade.SetItemUpgradeFromLocation]](<span class="apiarg">itemToSet</span>)
: [[API C_ItemUpgrade.UpgradeItem|C_ItemUpgrade.UpgradeItem]](<span class="apiarg">[numUpgrades]</span>)
: <small>DEPRECATED</small> [[API C_ItemUpgrade.GetItemLevelIncrement|C_ItemUpgrade.GetItemLevelIncrement]](<span class="apiarg">[numUpgradeLevels]</span>) : <span class="apiret">itemLevelIncrement</span>

=== Looting ===
Relates to [[Loot]].
: [[API C_Loot.IsLegacyLootModeEnabled|C_Loot.IsLegacyLootModeEnabled]]() : <span class="apiret">isLegacyLootModeEnabled</span>
: [[API C_LootHistory.CanMasterLoot|C_LootHistory.CanMasterLoot]](<span class="apiarg">itemIndex, playerIndex</span>)
: [[API C_LootHistory.GetExpiration|C_LootHistory.GetExpiration]]()
: [[API C_LootHistory.GetItem|C_LootHistory.GetItem]](<span class="apiarg">itemIndex</span>)
: [[API C_LootHistory.GetNumItems|C_LootHistory.GetNumItems]]()
: [[API C_LootHistory.GetPlayerInfo|C_LootHistory.GetPlayerInfo]](<span class="apiarg">itemIndex, playerIndex</span>)
: [[API C_LootHistory.GiveMasterLoot|C_LootHistory.GiveMasterLoot]](<span class="apiarg">itemIndex, playerIndex</span>)
: [[API C_LootHistory.SetExpiration|C_LootHistory.SetExpiration]](<span class="apiarg">numItemsToSave, secondsToSave</span>)
: [[API C_PlayerInfo.CanPlayerUseAreaLoot|C_PlayerInfo.CanPlayerUseAreaLoot]]() : <span class="apiret">canUseAreaLoot</span>
: [[API CanLootUnit|CanLootUnit]](<span class="apiarg">unitGUID</span>)
: [[API CancelMasterLootRoll|CancelMasterLootRoll]](<span class="apiarg">slot</span>)
: [[API CloseLoot|CloseLoot]](<span class="apiarg">[uiFailedFlag]</span>)
: [[API ConfirmLootRoll|ConfirmLootRoll]](<span class="apiarg">rollId [, roll]</span>) - Confirm a loot roll.
: [[API ConfirmLootSlot|ConfirmLootSlot]](<span class="apiarg">slot</span>) - Confirm looting of a BoP item.
: [[API DoMasterLootRoll|DoMasterLootRoll]](<span class="apiarg">slot</span>)
: [[API GetActiveLootRollIDs|GetActiveLootRollIDs]]()
: [[API GetLootInfo|GetLootInfo]]()
: [[API GetLootMethod|GetLootMethod]]() - Returns the currently active [[lootMethod]].
: [[API GetLootRollItemInfo|GetLootRollItemInfo]](<span class="apiarg">rollId</span>)
: [[API GetLootRollItemLink|GetLootRollItemLink]](<span class="apiarg">id</span>)
: [[API GetLootRollTimeLeft|GetLootRollTimeLeft]](<span class="apiarg">rollid</span>)
: [[API GetLootSlotInfo|GetLootSlotInfo]](<span class="apiarg">slot</span>) - Returns icon path, item name, and item quantity for the item in the given loot window slot.
: [[API GetLootSlotLink|GetLootSlotLink]](<span class="apiarg">slot</span>) - Returns an [[itemLink]] for the item in the given loot window slot.
: [[API GetLootSlotType|GetLootSlotType]](<span class="apiarg">slot</span>)
: [[API GetLootSourceInfo|GetLootSourceInfo]](<span class="apiarg">slot</span>) - Returns information about the source of the objects in a loot slot.
: [[API GetLootSpecialization|GetLootSpecialization]]()
: [[API GetLootThreshold|GetLootThreshold]]() - Returns the current loot threshold (for group/master loot)
: [[API GetMasterLootCandidate|GetMasterLootCandidate]](<span class="apiarg">index</span>) - Returns the name of a player who is eligible to receive loot in master mode.
: [[API GetNumLootItems|GetNumLootItems]]() - Returns amount of objects to loot (number)
: [[API GetOptOutOfLoot|GetOptOutOfLoot]]() - Returns whether the character is currently automatically passing on all loot.
: [[API GiveMasterLoot|GiveMasterLoot]](<span class="apiarg">slot, index</span>)
: [[API IsFishingLoot|IsFishingLoot]]()
: [[API IsMasterLooter|IsMasterLooter]]()
: [[API LootMoneyNotify|LootMoneyNotify]](<span class="apiarg">money, soleLooter</span>)
: [[API LootSlotHasItem|LootSlotHasItem]](<span class="apiarg">slot</span>)
: [[API LootSlot|LootSlot]](<span class="apiarg">slot</span>) - Used to loot the specified slot.
: [[API RollOnLoot|RollOnLoot]](<span class="apiarg">rollId [, roll]</span>) - Roll or pass on a loot event started by the game engine.
: [[API SetLootMethod|SetLootMethod]](<span class="apiarg">lootMethod [, masterPlayer or threshold]</span>) - Set the current loot method.
: [[API SetLootPortrait|SetLootPortrait]]()
: [[API SetLootSpecialization|SetLootSpecialization]](<span class="apiarg">specilizationID</span>)
: [[API SetLootThreshold|SetLootThreshold]](<span class="apiarg">itemQuality</span>) - Set the threshold for group/master loot.
: [[API SetOptOutOfLoot|SetOptOutOfLoot]](<span class="apiarg">optOut</span>) - Enables or disables automatic passing on all loot.

=== Macros ===
Relates to [[Macro]]s.
: <small>NOCOMBAT</small> [[API CreateMacro|CreateMacro]](<span class="apiarg">name, icon, body, perCharacter, isLocal</span>) - Create a new macro.
: [[API DeleteMacro|DeleteMacro]](<span class="apiarg">id or name</span>) - Deletes a macro.
: <small>NOCOMBAT</small> [[API EditMacro|EditMacro]](<span class="apiarg">index, name, iconIndex, body, isLocal, perCharacter</span>) - Saves a macro.
: [[API GetLooseMacroIcons|GetLooseMacroIcons]]()
: [[API GetLooseMacroItemIcons|GetLooseMacroItemIcons]]()
: [[API GetMacroBody|GetMacroBody]](<span class="apiarg">id or name</span>) - Returns the body (macro text) of a macro.
: [[API GetMacroIcons|GetMacroIcons]](<span class="apiarg">table</span>) - Returns an array of available macro texture paths (but not icons of items).
: [[API GetMacroIndexByName|GetMacroIndexByName]](<span class="apiarg">name</span>) - Returns macro index.
: [[API GetMacroInfo|GetMacroInfo]](<span class="apiarg">id or name</span>) - Returns "name", "iconTexture", "body", isLocal.
: [[API GetMacroItemIcons|GetMacroItemIcons]](<span class="apiarg">table</span>) - Returns an array of available macro texture paths (icons of items).
: [[API GetMacroItem|GetMacroItem]]()
: [[API GetMacroSpell|GetMacroSpell]]()
: [[API GetNumMacros|GetNumMacros]]() - Returns the number of macros the user has.
: [[API GetRunningMacroButton|GetRunningMacroButton]]()
: [[API GetRunningMacro|GetRunningMacro]]()
: <small>PROTECTED</small> [[API RunMacro|RunMacro]](<span class="apiarg">id or name</span>) - Runs a macro.
: <small>PROTECTED</small> [[API RunMacroText|RunMacroText]](<span class="apiarg">macro</span>) - Interpret the given string as a macro and run it.
: [[API SecureCmdOptionParse|SecureCmdOptionParse]](<span class="apiarg">command</span>) - Used for evaluating conditionals in macros, returning the appropriate choice.
: [[API SetMacroItem|SetMacroItem]](<span class="apiarg">macro, item [, target]</span>)
: [[API SetMacroSpell|SetMacroSpell]](<span class="apiarg">macro, spell [, target]</span>)
: <small>PROTECTED</small> [[API StopMacro|StopMacro]]() - Stops the currently executing macro.

=== Mail ===
Relates to [[Mail]].
: [[API C_Mail.CanCheckInbox|C_Mail.CanCheckInbox]]() : <span class="apiret">canCheckInbox, secondsUntilAllowed</span>
: [[API C_Mail.HasInboxMoney|C_Mail.HasInboxMoney]](<span class="apiarg">inboxIndex</span>) : <span class="apiret">inboxItemHasMoneyAttached</span> - Returns true if a mail has money attached.
: [[API C_Mail.IsCommandPending|C_Mail.IsCommandPending]]() : <span class="apiret">isCommandPending</span> - Returns true if the current mail command is still processing.
: [[API AutoLootMailItem|AutoLootMailItem]](<span class="apiarg">index</span>) - Loot all items from mail message.
: [[API CanComplainInboxItem|CanComplainInboxItem]](<span class="apiarg">index</span>) - Determines if we should show the “report spam” button on a mail item.
: [[API CheckInbox|CheckInbox]]() - Populate client's inbox with mail from server.
: [[API ClearSendMail|ClearSendMail]]() - This clears the text in the send mail tab and places the COD item in the inventory.
: [[API ClickSendMailItemButton|ClickSendMailItemButton]](<span class="apiarg">[itemIndex, clearItem]</span>) - Places or picks up an item from the send mail frame.
: [[API CloseMail|CloseMail]]() - Closes the mail window.
: [[API ComplainInboxItem|ComplainInboxItem]](<span class="apiarg">index</span>) - Complains about a particular mail item.
: [[API DeleteInboxItem|DeleteInboxItem]](<span class="apiarg">index</span>) - Deletes the inbox item at index. It returns immediately, it does not seem to wait for the deletion to go through, giving the normal problems with rapid mail removal attempts.
: [[API GetCoinIcon|GetCoinIcon]](<span class="apiarg">amount</span>)
: [[API GetInboxHeaderInfo|GetInboxHeaderInfo]](<span class="apiarg">index</span>) - Returns information about a message in the inbox.
: [[API GetInboxItem|GetInboxItem]](<span class="apiarg">index, itemIndex</span>) - Returns description of the attachment attached to message at (index).
: [[API GetInboxItemLink|GetInboxItemLink]](<span class="apiarg">index, itemIndex</span>) - Returns link of the attachment attached to message at (index).
: [[API GetInboxNumItems|GetInboxNumItems]]() - Returns the number of messages in your inbox.
: [[API GetInboxText|GetInboxText]](<span class="apiarg">index</span>) - Returns the message text of message at (index).
: [[API GetInboxInvoiceInfo|GetInboxInvoiceInfo]](<span class="apiarg">index</span>) - Returns informations about an auction house invoice.
: [[API GetLatestThreeSenders|GetLatestThreeSenders]]() - Returns the senders of the most recent unread mail.
: [[API GetSendMailCOD|GetSendMailCOD]]() - Determine amount of gold entered in COD box in mail frame when mail is sent.
: [[API GetSendMailItem|GetSendMailItem]](<span class="apiarg">index</span>) - Get information about an item attached on the send mail frame.
: [[API GetSendMailItemLink|GetSendMailItemLink]](<span class="apiarg">index</span>) - Get link for an item attached on the send mail frame.
: [[API GetSendMailMoney|GetSendMailMoney]]()
: [[API GetSendMailPrice|GetSendMailPrice]]() - Gets the cost for sending mail.
: [[API HasInboxItem|HasInboxItem]]()
: [[API HasNewMail|HasNewMail]]() - Returns nil if there is no new mail.
: [[API HasSendMailItem|HasSendMailItem]](<span class="apiarg">index</span>) - Returns boolean if item is attached to send mail frame in specified slot.
: [[API InboxItemCanDelete|InboxItemCanDelete]](<span class="apiarg">index</span>) - Boolean check for whether a message is returnable to the sender.
: [[API RespondMailLockSendItem|RespondMailLockSendItem]](<span class="apiarg">slot, keepItem</span>) - Confirm item wont be refunded, keepItem boolean.
: [[API ReturnInboxItem|ReturnInboxItem]](<span class="apiarg">index</span>) - Returns to the sender the attached item in the mail message at the specified index.
: <small>SCRIPT</small> [[API SendMail|SendMail]](<span class="apiarg">target, subject, body</span>) - If the mailbox is open, this sends mail.
: <small>PROTECTED</small> [[API SetSendMailCOD|SetSendMailCOD]](<span class="apiarg">amount</span>) - Make next mail sent using SendMail() COD target for amount.
: <small>PROTECTED</small> [[API SetSendMailMoney|SetSendMailMoney]](<span class="apiarg">amount</span>) - Add money to next mail sent using SendMail().
: [[API SetSendMailShowing|SetSendMailShowing]]()
: [[API TakeInboxItem|TakeInboxItem]](<span class="apiarg">index, itemIndex</span>) - Take the attached item from the mailbox message at index.
: [[API TakeInboxMoney|TakeInboxMoney]](<span class="apiarg">index</span>) - Take the attached money from the mailbox message at index.
: [[API TakeInboxTextItem|TakeInboxTextItem]](<span class="apiarg">index</span>) - Creates a permanent copy of letter (readable "Plain Letter").

=== Maps ===
The [[Map]] API was reworked in [[Patch 8.0.1]]. See also [[#MapUtil|MapUtil]] functions.
: [[API C_Map.CloseWorldMapInteraction|C_Map.CloseWorldMapInteraction]]()
: [[API C_Map.GetAreaInfo|C_Map.GetAreaInfo]](<span class="apiarg">areaID</span>) : <span class="apiret">name</span> - Returns a map subzone name.
: [[API C_Map.GetBestMapForUnit|C_Map.GetBestMapForUnit]](<span class="apiarg">unitToken</span>) : <span class="apiret">uiMapID</span> - Returns the current UI map for the given unit. Only works for the player and party members.
: [[API C_Map.GetBountySetMaps|C_Map.GetBountySetMaps]](<span class="apiarg">bountySetID</span>) : <span class="apiret">mapIDs</span> - Returns the maps for a bounty.
: [[API C_Map.GetFallbackWorldMapID|C_Map.GetFallbackWorldMapID]]() : <span class="apiret">uiMapID</span> - Returns the world map id.
: [[API C_Map.GetMapArtBackgroundAtlas|C_Map.GetMapArtBackgroundAtlas]](<span class="apiarg">uiMapID</span>) : <span class="apiret">atlasName</span> - Returns the background atlas for a map.
: [[API C_Map.GetMapArtHelpTextPosition|C_Map.GetMapArtHelpTextPosition]](<span class="apiarg">uiMapID</span>) : <span class="apiret">position</span> - Returns the position for the "Click to Zoom In" hint text on flight maps.
: [[API C_Map.GetMapArtID|C_Map.GetMapArtID]](<span class="apiarg">uiMapID</span>) : <span class="apiret">uiMapArtID</span> - Returns the art for a (phased) map.
: [[API C_Map.GetMapArtLayers|C_Map.GetMapArtLayers]](<span class="apiarg">uiMapID</span>) : <span class="apiret">layerInfo</span> - Returns the art layers for a map.
: [[API C_Map.GetMapArtLayerTextures|C_Map.GetMapArtLayerTextures]](<span class="apiarg">uiMapID, layerIndex</span>) : <span class="apiret">textures</span> - Returns the art layer textures for a map.
: [[API C_Map.GetMapBannersForMap|C_Map.GetMapBannersForMap]](<span class="apiarg">uiMapID</span>) : <span class="apiret">mapBanners</span> - Returns the poi banners for a map.
: [[API C_Map.GetMapChildrenInfo|C_Map.GetMapChildrenInfo]](<span class="apiarg">uiMapID [, mapType, allDescendants]</span>) : <span class="apiret">info</span> - Returns information on the sub-maps of the given uiMapID, optionally restricted to a specific "map type", and/or recursive.
: [[API C_Map.GetMapDisplayInfo|C_Map.GetMapDisplayInfo]](<span class="apiarg">uiMapID</span>) : <span class="apiret">hideIcons</span> - Returns whether group member pins should be hidden.
: [[API C_Map.GetMapGroupID|C_Map.GetMapGroupID]](<span class="apiarg">uiMapID</span>) : <span class="apiret">uiMapGroupID</span> - Returns the map group for a map.
: [[API C_Map.GetMapGroupMembersInfo|C_Map.GetMapGroupMembersInfo]](<span class="apiarg">uiMapGroupID</span>) : <span class="apiret">info</span> - Returns the floors for a map group.
: [[API C_Map.GetMapHighlightInfoAtPosition|C_Map.GetMapHighlightInfoAtPosition]](<span class="apiarg">uiMapID, x, y</span>) : <span class="apiret">fileDataID, atlasID, texturePercentageX, texturePercentageY, ...</span> - Returns a map highlight pin for a location.
: [[API C_Map.GetMapInfo|C_Map.GetMapInfo]](<span class="apiarg">uiMapID</span>) : <span class="apiret">info</span> - Returns map information.
: [[API C_Map.GetMapInfoAtPosition|C_Map.GetMapInfoAtPosition]](<span class="apiarg">uiMapID, x, y</span>) : <span class="apiret">info</span> - Returns map info for a location on the map.
: [[API C_Map.GetMapLevels|C_Map.GetMapLevels]](<span class="apiarg">uiMapID</span>) : <span class="apiret">playerMinLevel, playerMaxLevel, petMinLevel, petMaxLevel</span> - Returns the suggested player and battle pet levels for a map.
: [[API C_Map.GetMapLinksForMap|C_Map.GetMapLinksForMap]](<span class="apiarg">uiMapID</span>) : <span class="apiret">mapLinks</span> - Returns the map pins that link to another map.
: [[API C_Map.GetMapPosFromWorldPos|C_Map.GetMapPosFromWorldPos]](<span class="apiarg">continentID, worldPosition [, overrideUiMapID]</span>) : <span class="apiret">uiMapID, mapPosition</span> - Translates a world map position to a map position.
: [[API C_Map.GetMapRectOnMap|C_Map.GetMapRectOnMap]](<span class="apiarg">uiMapID, topUiMapID</span>) : <span class="apiret">minX, maxX, minY, maxY</span> - Returns the map rectangle location for a map on its parent map.
: [[API C_Map.GetMapWorldSize|C_Map.GetMapWorldSize]](<span class="apiarg">uiMapID</span>) : <span class="apiret">width, height</span>
: [[API C_Map.GetPlayerMapPosition|C_Map.GetPlayerMapPosition]](<span class="apiarg">uiMapID, unitToken</span>) : <span class="apiret">position</span> - Returns the location of the given unit. Only works for the player and party members.
: [[API C_Map.GetWorldPosFromMapPos|C_Map.GetWorldPosFromMapPos]](<span class="apiarg">uiMapID, mapPosition</span>) : <span class="apiret">continentID, worldPosition</span> - Translates a world map position to a map position.
: [[API C_Map.IsMapValidForNavBarDropDown|C_Map.IsMapValidForNavBarDropDown]](<span class="apiarg">uiMapID</span>) : <span class="apiret">isValid</span>
: [[API C_Map.MapHasArt|C_Map.MapHasArt]](<span class="apiarg">uiMapID</span>) : <span class="apiret">hasArt</span> - Returns true if the map has art and can be displayed by the FrameXML.
: [[API C_Map.RequestPreloadMap|C_Map.RequestPreloadMap]](<span class="apiarg">uiMapID</span>) - Preloads textures for a map.
: [[API C_MapExplorationInfo.GetExploredAreaIDsAtPosition|C_MapExplorationInfo.GetExploredAreaIDsAtPosition]](<span class="apiarg">uiMapID, normalizedPosition</span>) : <span class="apiret">areaID</span> - Returns the explored areas for the location on a map.
: [[API C_MapExplorationInfo.GetExploredMapTextures|C_MapExplorationInfo.GetExploredMapTextures]](<span class="apiarg">uiMapID</span>) : <span class="apiret">overlayInfo</span> - Returns explored map textures for a map.
: [[API C_FogOfWar.GetFogOfWarForMap|C_FogOfWar.GetFogOfWarForMap]](<span class="apiarg">uiMapID</span>) : <span class="apiret">fogOfWarID</span> - Returns the fog of war ID for an (Island Expedition) map.
: [[API C_FogOfWar.GetFogOfWarInfo|C_FogOfWar.GetFogOfWarInfo]](<span class="apiarg">fogOfWarID</span>) : <span class="apiret">fogOfWarInfo</span> - Returns fog of war info for an (Island Expedition) map.
: [[API GetAreaText|GetAreaText]]()
: [[API GetMinimapZoneText|GetMinimapZoneText]]() - Returns the zone text, that is displayed over the minimap.
: [[API GetPlayerFacing|GetPlayerFacing]]() - Returns the direction the player is facing.
: [[API GetRealZoneText|GetRealZoneText]](<span class="apiarg">[mapID]</span>) - Returns either instance name or zone name.
: [[API GetSubZoneText|GetSubZoneText]]() - Returns the subzone text (e.g. "The Canals").
: [[API GetZonePVPInfo|GetZonePVPInfo]]() - Returns PVP info for the current zone.
: [[API GetZoneText|GetZoneText]]() - Returns the zone text (e.g. "Stormwind City").
: [[API UnitPosition|UnitPosition]](<span class="apiarg">unit</span>) - Returns the position of a unit within the current world area.
: <small>UI</small> [https://www.townlong-yak.com/framexml/go/MapCanvasMixin:AddDataProvider WorldMapFrame:AddDataProvider](<span class="apiarg">dataProvider</span>) - Adds a map data provider.
: <small>UI</small> [https://www.townlong-yak.com/framexml/go/MapCanvasMixin:GetMapID WorldMapFrame:GetMapID]() - Returns the currently viewed world map.
: <small>UI</small> [https://www.townlong-yak.com/framexml/go/MapCanvasMixin:SetMapID WorldMapFrame:SetMapID](<span class="apiarg">uiMapID</span>) - Sets the world map.
: <small>UI</small> [https://www.townlong-yak.com/framexml/go/MapCanvasMixin:EnumerateAllPins WorldMapFrame:EnumerateAllPins]() - Enumerates through all map pins.

==== Minimap ====
The [[Widget_API#Minimap|Minimap]] was reworked in [[Patch 9.0.1]]
: [[API C_Minimap.GetDrawGroundTextures|C_Minimap.GetDrawGroundTextures]]() : <span class="apiret">draw</span>
: [[API C_Minimap.GetUiMapID|C_Minimap.GetUiMapID]]() : <span class="apiret">uiMapID</span>
: [[API C_Minimap.GetViewRadius|C_Minimap.GetViewRadius]]() : <span class="apiret">yards</span>
: [[API C_Minimap.IsRotateMinimapIgnored|C_Minimap.IsRotateMinimapIgnored]]() : <span class="apiret">isIgnored</span>
: [[API C_Minimap.SetDrawGroundTextures|C_Minimap.SetDrawGroundTextures]](<span class="apiarg">draw</span>)
: [[API C_Minimap.SetIgnoreRotateMinimap|C_Minimap.SetIgnoreRotateMinimap]](<span class="apiarg">ignore</span>)
: [[API C_Minimap.ShouldUseHybridMinimap|C_Minimap.ShouldUseHybridMinimap]]() : <span class="apiret">shouldUse</span>

==== Tracking ====
Relates to [[Tracking]] on the minimap.
: [[API ClearAllTracking|ClearAllTracking]]()
: [[API GetNumTrackingTypes|GetNumTrackingTypes]]() - Returns number of available tracking methods.
: [[API GetTrackingInfo|GetTrackingInfo]](<span class="apiarg">id</span>) - Retrieves tracking information from specified id.
: [[API SetTracking|SetTracking]](<span class="apiarg">id, enabled</span>) - Enables or disables a tracking method.

==== Points of Interest ====
: [[API C_AreaPoiInfo.GetAreaPOIForMap|C_AreaPoiInfo.GetAreaPOIForMap]](<span class="apiarg">uiMapID</span>) : <span class="apiret">areaPoiIDs</span> - Returns area points of interest for a map.
: [[API C_AreaPoiInfo.GetAreaPOIInfo|C_AreaPoiInfo.GetAreaPOIInfo]](<span class="apiarg">uiMapID, areaPoiID</span>) : <span class="apiret">poiInfo</span> - Returns area point of interest info.
: [[API C_AreaPoiInfo.GetAreaPOISecondsLeft|C_AreaPoiInfo.GetAreaPOISecondsLeft]](<span class="apiarg">areaPoiID</span>) : <span class="apiret">secondsLeft</span> - Returns the time left for an area poi.
: [[API C_AreaPoiInfo.IsAreaPOITimed|C_AreaPoiInfo.IsAreaPOITimed]](<span class="apiarg">areaPoiID</span>) : <span class="apiret">isTimed</span> - Returns whether an area poi is timed.
: [[API GetPOITextureCoords|GetPOITextureCoords]](<span class="apiarg">textureIndex</span>)
: [[API SetPOIIconOverlapDistance|SetPOIIconOverlapDistance]](<span class="apiarg">index</span>)
: [[API SetPOIIconOverlapPushDistance|SetPOIIconOverlapPushDistance]](<span class="apiarg">index</span>)
[[Vignette]]s are used for one-time rare mobs and treasure chests.
: [[API C_VignetteInfo.FindBestUniqueVignette|C_VignetteInfo.FindBestUniqueVignette]](<span class="apiarg">vignetteGUIDs</span>) : <span class="apiret">bestUniqueVignetteIndex</span>
: [[API C_VignetteInfo.GetVignetteInfo|C_VignetteInfo.GetVignetteInfo]](<span class="apiarg">vignetteGUID</span>) : <span class="apiret">vignetteInfo</span>
: [[API C_VignetteInfo.GetVignettePosition|C_VignetteInfo.GetVignettePosition]](<span class="apiarg">vignetteGUID, uiMapID</span>) : <span class="apiret">vignettePosition</span>
: [[API C_VignetteInfo.GetVignettes|C_VignetteInfo.GetVignettes]]() : <span class="apiret">vignetteGUIDs</span>

==== Waypoints ====
Tracked waypoints were added in [[Patch 9.0.1]]
: [[API C_Map.CanSetUserWaypointOnMap|C_Map.CanSetUserWaypointOnMap]](<span class="apiarg">uiMapID</span>) : <span class="apiret">canSet</span>
: [[API C_Map.ClearUserWaypoint|C_Map.ClearUserWaypoint]]()
: [[API C_Map.GetUserWaypoint|C_Map.GetUserWaypoint]]() : <span class="apiret">point</span>
: [[API C_Map.GetUserWaypointFromHyperlink|C_Map.GetUserWaypointFromHyperlink]](<span class="apiarg">hyperlink</span>) : <span class="apiret">point</span>
: [[API C_Map.GetUserWaypointHyperlink|C_Map.GetUserWaypointHyperlink]]() : <span class="apiret">hyperlink</span>
: [[API C_Map.GetUserWaypointPositionForMap|C_Map.GetUserWaypointPositionForMap]](<span class="apiarg">uiMapID</span>) : <span class="apiret">mapPosition</span>
: [[API C_Map.HasUserWaypoint|C_Map.HasUserWaypoint]]() : <span class="apiret">hasUserWaypoint</span>
: [[API C_Map.SetUserWaypoint|C_Map.SetUserWaypoint]](<span class="apiarg">point</span>)
: [[API C_Navigation.GetDistance|C_Navigation.GetDistance]]() : <span class="apiret">distance</span>
: [[API C_Navigation.GetFrame|C_Navigation.GetFrame]]() : <span class="apiret">frame</span>
: [[API C_Navigation.GetTargetState|C_Navigation.GetTargetState]]() : <span class="apiret">state</span>
: [[API C_Navigation.HasValidScreenPosition|C_Navigation.HasValidScreenPosition]]() : <span class="apiret">hasValidScreenPosition</span>
: [[API C_Navigation.WasClampedToScreen|C_Navigation.WasClampedToScreen]]() : <span class="apiret">wasClamped</span>
Controls what's actively being tracked.
: [[API C_SuperTrack.GetHighestPrioritySuperTrackingType|C_SuperTrack.GetHighestPrioritySuperTrackingType]]() : <span class="apiret">type</span>
: [[API C_SuperTrack.GetSuperTrackedQuestID|C_SuperTrack.GetSuperTrackedQuestID]]() : <span class="apiret">questID</span>
: [[API C_SuperTrack.IsSuperTrackingAnything|C_SuperTrack.IsSuperTrackingAnything]]() : <span class="apiret">isSuperTracking</span>
: [[API C_SuperTrack.IsSuperTrackingCorpse|C_SuperTrack.IsSuperTrackingCorpse]]() : <span class="apiret">isSuperTracking</span>
: [[API C_SuperTrack.IsSuperTrackingQuest|C_SuperTrack.IsSuperTrackingQuest]]() : <span class="apiret">isSuperTracking</span>
: [[API C_SuperTrack.IsSuperTrackingUserWaypoint|C_SuperTrack.IsSuperTrackingUserWaypoint]]() : <span class="apiret">isSuperTracking</span>
: [[API C_SuperTrack.SetSuperTrackedQuestID|C_SuperTrack.SetSuperTrackedQuestID]](<span class="apiarg">questID</span>)
: [[API C_SuperTrack.SetSuperTrackedUserWaypoint|C_SuperTrack.SetSuperTrackedUserWaypoint]](<span class="apiarg">superTracked</span>)
: [[API C_QuestLog.GetNextWaypoint|C_QuestLog.GetNextWaypoint]](<span class="apiarg">questID</span>) : <span class="apiret">mapID, x, y</span>
: [[API C_QuestLog.GetNextWaypointForMap|C_QuestLog.GetNextWaypointForMap]](<span class="apiarg">questID, uiMapID</span>) : <span class="apiret">x, y</span>
: [[API C_QuestLog.GetNextWaypointText|C_QuestLog.GetNextWaypointText]](<span class="apiarg">questID</span>) : <span class="apiret">waypointText</span>

==== Flight Master ====
Relates to [[Flight master]] taxi services.
: [[API C_TaxiMap.GetAllTaxiNodes|C_TaxiMap.GetAllTaxiNodes]](<span class="apiarg">uiMapID</span>) : <span class="apiret">taxiNodes</span>
: [[API C_TaxiMap.GetTaxiNodesForMap|C_TaxiMap.GetTaxiNodesForMap]](<span class="apiarg">uiMapID</span>) : <span class="apiret">mapTaxiNodes</span>
: [[API C_TaxiMap.ShouldMapShowTaxiNodes|C_TaxiMap.ShouldMapShowTaxiNodes]](<span class="apiarg">uiMapID</span>) : <span class="apiret">shouldShowNodes</span>
: [[API CloseTaxiMap|CloseTaxiMap]]() - Closes the Flightpath Map.
: [[API GetNumRoutes|GetNumRoutes]](<span class="apiarg">slot</span>) - Gets the number of hops between current-slot and slot.
: [[API GetTaxiBenchmarkMode|GetTaxiBenchmarkMode]]()
: [[API GetTaxiMapID|GetTaxiMapID]]()
: [[API NumTaxiNodes|NumTaxiNodes]]() - Returns the number of nodes (flight paths) on an open taxi map.
: [[API SetTaxiBenchmarkMode|SetTaxiBenchmarkMode]]()
: [[API SetTaxiMap|SetTaxiMap]](<span class="apiarg">frame</span>)
: [[API TakeTaxiNode|TakeTaxiNode]](<span class="apiarg">slot</span>) - Takes the named taxi node.
: [[API TaxiGetDestX|TaxiGetDestX]](<span class="apiarg">slot, hop</span>)
: [[API TaxiGetDestY|TaxiGetDestY]](<span class="apiarg">slot, hop</span>)
: [[API TaxiGetNodeSlot|TaxiGetNodeSlot]]()
: [[API TaxiGetSrcX|TaxiGetSrcX]](<span class="apiarg">slot, hop</span>)
: [[API TaxiGetSrcY|TaxiGetSrcY]](<span class="apiarg">slot, hop</span>)
: [[API TaxiIsDirectFlight|TaxiIsDirectFlight]]()
: [[API TaxiNodeCost|TaxiNodeCost]](<span class="apiarg">slot</span>) - Returns the cost in copper of a node.
: [[API TaxiNodeGetType|TaxiNodeGetType]](<span class="apiarg">slot</span>) - Returns the status of a node.
: [[API TaxiNodeName|TaxiNodeName]](<span class="apiarg">slot</span>) - Returns the name of a node.
: [[API TaxiNodePosition|TaxiNodePosition]](<span class="apiarg">slot</span>) - Returns position (x,y) of node on the map.
: [[API TaxiRequestEarlyLanding|TaxiRequestEarlyLanding]]()
: [[API UnitOnTaxi|UnitOnTaxi]](<span class="apiarg">unit</span>) - Returns 1 if unit is on a taxi.

=== Merchants ===
==== Vendor ====
Relates to [[Vendor]]s.
: [[API C_MerchantFrame.GetBuybackItemID|C_MerchantFrame.GetBuybackItemID]](<span class="apiarg">buybackSlotIndex</span>) : <span class="apiret">buybackItemID</span>
: [[API C_MerchantFrame.IsMerchantItemRefundable|C_MerchantFrame.IsMerchantItemRefundable]](<span class="apiarg">index</span>) : <span class="apiret">refundable</span>
: [[API BuyMerchantItem|BuyMerchantItem]](<span class="apiarg">index [, qty]</span>) - Buys an item from a merchant.
: [[API BuybackItem|BuybackItem]](<span class="apiarg">index</span>) - Buys back a sold item.
: [[API CanAffordMerchantItem|CanAffordMerchantItem]](<span class="apiarg">index</span>)
: [[API CanMerchantRepair|CanMerchantRepair]]() - Returns true if the merchant can repair items.
: [[API CloseMerchant|CloseMerchant]]() - Closes the merchant window.
: [[API ContainerRefundItemPurchase|ContainerRefundItemPurchase]](<span class="apiarg">index, slot [, isEquipped]</span>)
: [[API GetBuybackItemInfo|GetBuybackItemInfo]](<span class="apiarg">index</span>) - Returns information about the buyback item.
: [[API GetBuybackItemLink|GetBuybackItemLink]](<span class="apiarg">index</span>) - Returns an [[itemLink]] for the buyback item.
: [[API GetMerchantCurrencies|GetMerchantCurrencies]]()
: [[API GetMerchantFilter|GetMerchantFilter]]()
: [[API GetMerchantItemCostInfo|GetMerchantItemCostInfo]](<span class="apiarg">index</span>) - Returns "alternative currency" information about an item.
: [[API GetMerchantItemCostItem|GetMerchantItemCostItem]](<span class="apiarg">index, itemIndex</span>) - Returns information about an "alternative currency" component of the price for a purchasable item.
: [[API GetMerchantItemID|GetMerchantItemID]](<span class="apiarg">index</span>)
: [[API GetMerchantItemInfo|GetMerchantItemInfo]](<span class="apiarg">index</span>) - Returns information about the given purchasable item.
: [[API GetMerchantItemLink|GetMerchantItemLink]](<span class="apiarg">index</span>) - Returns an [[itemLink]] for the given purchasable item.
: [[API GetMerchantItemMaxStack|GetMerchantItemMaxStack]](<span class="apiarg">index</span>) - Returns the maximum number of items in a stack.
: [[API GetMerchantNumItems|GetMerchantNumItems]]() - Returns the number of items the merchant sells.
: [[API GetNumBuybackItems|GetNumBuybackItems]]() - Returns number of items available for buyback.
: [[API GetRepairAllCost|GetRepairAllCost]]()
: [[API RepairAllItems|RepairAllItems]](<span class="apiarg">[guildBankRepair]</span>) - Repairs all equipped and inventory items.
: [[API ResetSetMerchantFilter|ResetSetMerchantFilter]]()
: [[API SetMerchantFilter|SetMerchantFilter]]()

==== Trainer ====
Relates to [[Trainer]]s.
: [[API BuyTrainerService|BuyTrainerService]](<span class="apiarg">index</span>) - Used for buying new/upgrading professions, profession items and class skills.
: [[API CloseTrainer|CloseTrainer]]() - Closes the trainer window.
: [[API GetNumTrainerServices|GetNumTrainerServices]]() - Get the number of the trainer services.
: [[API GetTrainerGreetingText|GetTrainerGreetingText]]() - Get the trainer's greeting text.
: [[API GetTrainerSelectionIndex|GetTrainerSelectionIndex]]() - Get the index of the selected trainer service.
: [[API GetTrainerServiceAbilityReq|GetTrainerServiceAbilityReq]](<span class="apiarg">trainerIndex, reqIndex</span>) - Used for displaying the requirements to learn a new profession, profession skill or class skill.
: [[API GetTrainerServiceCost|GetTrainerServiceCost]](<span class="apiarg">index</span>) - Returns the cost of a specific trainer service.
: [[API GetTrainerServiceDescription|GetTrainerServiceDescription]](<span class="apiarg">index</span>) - Returns the description of a specific trainer service.
: [[API GetTrainerServiceIcon|GetTrainerServiceIcon]](<span class="apiarg">index</span>) - Returns icon texture for a trainer service.
: [[API GetTrainerServiceInfo|GetTrainerServiceInfo]](<span class="apiarg">index</span>) - Returns information about a trainer service.
: [[API GetTrainerServiceItemLink|GetTrainerServiceItemLink]](<span class="apiarg">index</span>) - Returns an item link for a trainer service.
: [[API GetTrainerServiceLevelReq|GetTrainerServiceLevelReq]](<span class="apiarg">index</span>) - Get the required level to learn the skill.
: [[API GetTrainerServiceNumAbilityReq|GetTrainerServiceNumAbilityReq]]() - Get the maximum number of requirements that [[API GetTrainerServiceAbilityReq|GetTrainerServiceAbilityReq]] has.
: [[API GetTrainerServiceSkillLine|GetTrainerServiceSkillLine]](<span class="apiarg">index</span>)
: [[API GetTrainerServiceSkillReq|GetTrainerServiceSkillReq]](<span class="apiarg">index</span>) - Returns a String and Variable for the requirements of a specific trainer service.
: [[API GetTrainerServiceStepIndex|GetTrainerServiceStepIndex]]()
: [[API GetTrainerServiceTypeFilter|GetTrainerServiceTypeFilter]](<span class="apiarg">filter</span>) - Returns the status of a skill filter in the trainer window.
: [[API GetTrainerTradeskillRankValues|GetTrainerTradeskillRankValues]]()
: [[API IsTradeskillTrainer|IsTradeskillTrainer]]() - Returns 1 if trainer is for a tradeskill.
: [[API OpenTrainer|OpenTrainer]]()
: [[API SelectTrainerService|SelectTrainerService]]()
: [[API SetTrainerServiceTypeFilter|SetTrainerServiceTypeFilter]](<span class="apiarg">filter, state</span>) - Sets the status of a skill filter in the trainer window.

=== Pet Battles ===
The [[Pet Battle System]] was added in [[Patch 5.0.4]]. See also [[#Pet Journal|Pet Journal]] functions.
: [[API C_PetBattles.AcceptPVPDuel|C_PetBattles.AcceptPVPDuel]]()
: [[API C_PetBattles.AcceptQueuedPVPMatch|C_PetBattles.AcceptQueuedPVPMatch]]()
: [[API C_PetBattles.CanAcceptQueuedPVPMatch|C_PetBattles.CanAcceptQueuedPVPMatch]]()
: [[API C_PetBattles.CanActivePetSwapOut|C_PetBattles.CanActivePetSwapOut]]()
: [[API C_PetBattles.CanPetSwapIn|C_PetBattles.CanPetSwapIn]](<span class="apiarg">petIndex</span>)
: [[API C_PetBattles.CancelPVPDuel|C_PetBattles.CancelPVPDuel]]()
: [[API C_PetBattles.ChangePet|C_PetBattles.ChangePet]](<span class="apiarg">petIndex</span>)
: [[API C_PetBattles.DeclineQueuedPVPMatch|C_PetBattles.DeclineQueuedPVPMatch]]()
: [[API C_PetBattles.ForfeitGame|C_PetBattles.ForfeitGame]]()
: [[API C_PetBattles.GetAbilityEffectInfo|C_PetBattles.GetAbilityEffectInfo]](<span class="apiarg">abilityID, turnIndex, effectIndex, effectName</span>)
: [[API C_PetBattles.GetAbilityInfoByID|C_PetBattles.GetAbilityInfoByID]](<span class="apiarg">abilityID</span>)
: [[API C_PetBattles.GetAbilityInfo|C_PetBattles.GetAbilityInfo]](<span class="apiarg">petOwner, petIndex, abilityIndex</span>)
: [[API C_PetBattles.GetAbilityProcTurnIndex|C_PetBattles.GetAbilityProcTurnIndex]](<span class="apiarg">abilityID, procType</span>)
: [[API C_PetBattles.GetAbilityStateModification|C_PetBattles.GetAbilityStateModification]](<span class="apiarg">abilityID, stateID</span>)
: [[API C_PetBattles.GetAbilityState|C_PetBattles.GetAbilityState]](<span class="apiarg">petOwner, petIndex, actionIndex</span>)
: [[API C_PetBattles.GetActivePet|C_PetBattles.GetActivePet]](<span class="apiarg">petOwner</span>)
: [[API C_PetBattles.GetAllEffectNames|C_PetBattles.GetAllEffectNames]]()
: [[API C_PetBattles.GetAllStates|C_PetBattles.GetAllStates]]()
: [[API C_PetBattles.GetAttackModifier|C_PetBattles.GetAttackModifier]](<span class="apiarg">petType, enemyPetType</span>)
: [[API C_PetBattles.GetAuraInfo|C_PetBattles.GetAuraInfo]](<span class="apiarg">petOwner, petIndex, auraIndex</span>)
: [[API C_PetBattles.GetBattleState|C_PetBattles.GetBattleState]]()
: [[API C_PetBattles.GetBreedQuality|C_PetBattles.GetBreedQuality]](<span class="apiarg">petOwner, slot</span>) : <span class="apiret">quality</span>
: [[API C_PetBattles.GetDisplayID|C_PetBattles.GetDisplayID]](<span class="apiarg">petOwner, petIndex</span>)
: [[API C_PetBattles.GetForfeitPenalty|C_PetBattles.GetForfeitPenalty]]()
: [[API C_PetBattles.GetHealth|C_PetBattles.GetHealth]](<span class="apiarg">petOwner, petIndex</span>)
: [[API C_PetBattles.GetIcon|C_PetBattles.GetIcon]](<span class="apiarg">petOwner, slot</span>) : <span class="apiret">iconFileID</span>
: [[API C_PetBattles.GetLevel|C_PetBattles.GetLevel]](<span class="apiarg">petOwner, petIndex</span>)
: [[API C_PetBattles.GetMaxHealth|C_PetBattles.GetMaxHealth]](<span class="apiarg">petOwner, petIndex</span>)
: [[API C_PetBattles.GetName|C_PetBattles.GetName]](<span class="apiarg">petOwner, slot</span>) : <span class="apiret">customName, speciesName</span>
: [[API C_PetBattles.GetNumAuras|C_PetBattles.GetNumAuras]](<span class="apiarg">petOwner, petIndex</span>)
: [[API C_PetBattles.GetNumPets|C_PetBattles.GetNumPets]](<span class="apiarg">petOwner</span>)
: [[API C_PetBattles.GetPVPMatchmakingInfo|C_PetBattles.GetPVPMatchmakingInfo]]()
: [[API C_PetBattles.GetPetSpeciesID|C_PetBattles.GetPetSpeciesID]](<span class="apiarg">petOwner, petIndex</span>)
: [[API C_PetBattles.GetPetType|C_PetBattles.GetPetType]](<span class="apiarg">petOwner, petIndex</span>)
: [[API C_PetBattles.GetPlayerTrapAbility|C_PetBattles.GetPlayerTrapAbility]]()
: [[API C_PetBattles.GetPower|C_PetBattles.GetPower]](<span class="apiarg">petOwner, petIndex</span>)
: [[API C_PetBattles.GetSelectedAction|C_PetBattles.GetSelectedAction]]()
: [[API C_PetBattles.GetSpeed|C_PetBattles.GetSpeed]](<span class="apiarg">petOwner, petIndex</span>)
: [[API C_PetBattles.GetStateValue|C_PetBattles.GetStateValue]](<span class="apiarg">petOwner, petIndex, stateID</span>)
: [[API C_PetBattles.GetTurnTimeInfo|C_PetBattles.GetTurnTimeInfo]]()
: [[API C_PetBattles.GetXP|C_PetBattles.GetXP]](<span class="apiarg">petOwner, petIndex</span>)
: [[API C_PetBattles.IsInBattle|C_PetBattles.IsInBattle]]()
: [[API C_PetBattles.IsPlayerNPC|C_PetBattles.IsPlayerNPC]]() : <span class="apiret">isPlayerNPC</span>
: [[API C_PetBattles.IsSkipAvailable|C_PetBattles.IsSkipAvailable]]()
: [[API C_PetBattles.IsTrapAvailable|C_PetBattles.IsTrapAvailable]]()
: [[API C_PetBattles.IsWaitingOnOpponent|C_PetBattles.IsWaitingOnOpponent]]()
: [[API C_PetBattles.IsWildBattle|C_PetBattles.IsWildBattle]]() : <span class="apiret">isWildBattle</span>
: [[API C_PetBattles.SetPendingReportBattlePetTarget|C_PetBattles.SetPendingReportBattlePetTarget]](<span class="apiarg">petIndex</span>)
: [[API C_PetBattles.SetPendingReportTargetFromUnit|C_PetBattles.SetPendingReportTargetFromUnit]](<span class="apiarg">unit</span>)
: [[API C_PetBattles.ShouldShowPetSelect|C_PetBattles.ShouldShowPetSelect]]()
: <small>HW</small> [[API C_PetBattles.SkipTurn|C_PetBattles.SkipTurn]]()
: [[API C_PetBattles.StartPVPDuel|C_PetBattles.StartPVPDuel]]()
: [[API C_PetBattles.StartPVPMatchmaking|C_PetBattles.StartPVPMatchmaking]]()
: [[API C_PetBattles.StopPVPMatchmaking|C_PetBattles.StopPVPMatchmaking]]()
: <small>HW</small> [[API C_PetBattles.UseAbility|C_PetBattles.UseAbility]](<span class="apiarg">actionIndex</span>)
: <small>HW</small> [[API C_PetBattles.UseTrap|C_PetBattles.UseTrap]]()
: [[API CanTrackBattlePets|CanTrackBattlePets]]() - Returns whether the player can track battle pets.
: [[API IsTrackingBattlePets|IsTrackingBattlePets]]() - Returns whether the player is currently tracking battle pets.
: [[API UnitBattlePetLevel|UnitBattlePetLevel]]()
: [[API UnitBattlePetSpeciesID|UnitBattlePetSpeciesID]]()
: [[API UnitBattlePetType|UnitBattlePetType]]()
: [[API UnitIsBattlePet|UnitIsBattlePet]](<span class="apiarg">unit</span>)
: [[API UnitIsBattlePetCompanion|UnitIsBattlePetCompanion]](<span class="apiarg">unit</span>)
: [[API UnitIsOtherPlayersBattlePet|UnitIsOtherPlayersBattlePet]](<span class="apiarg">unit</span>)
: [[API UnitIsWildBattlePet|UnitIsWildBattlePet]](<span class="apiarg">unit</span>)

=== Players ===
: [[API C_PlayerInfo.GetClass|C_PlayerInfo.GetClass]](<span class="apiarg">playerLocation</span>) : <span class="apiret">className, classFilename, classID</span> - Returns the class of a player.
: [[API C_PlayerInfo.GetName|C_PlayerInfo.GetName]](<span class="apiarg">playerLocation</span>) : <span class="apiret">name</span> - Returns the name of a player.
: [[API C_PlayerInfo.GetRace|C_PlayerInfo.GetRace]](<span class="apiarg">playerLocation</span>) : <span class="apiret">raceID</span> - Returns the race of a player.
: [[API C_PlayerInfo.GetSex|C_PlayerInfo.GetSex]](<span class="apiarg">playerLocation</span>) : <span class="apiret">sex</span> - Returns the sex of a player.
: [[API C_PlayerInfo.GUIDIsPlayer|C_PlayerInfo.GUIDIsPlayer]](<span class="apiarg">guid</span>) : <span class="apiret">isPlayer</span> - Returns true if the guid belongs to a player.
: [[API C_PlayerInfo.IsConnected|C_PlayerInfo.IsConnected]](<span class="apiarg">[playerLocation]</span>) : <span class="apiret">isConnected</span> - Returns true if a player is connected.
: [[API C_PlayerInfo.UnitIsSameServer|C_PlayerInfo.UnitIsSameServer]](<span class="apiarg">playerLocation</span>) : <span class="apiret">unitIsSameServer</span> - Returns true if another player is from your own or connected realm.
: [[API Ambiguate|Ambiguate]](<span class="apiarg">fullName, context</span>) - Returns a version of a character-realm string suitable for use in a given context.
: [[API GetAutoCompleteResults|GetAutoCompleteResults]](<span class="apiarg">text, include, exclude, maxResults [, cursorPosition]</span>) - Returns possible player names matching a given prefix string and specified requirements.
: [[API GetPlayerInfoByGUID|GetPlayerInfoByGUID]](<span class="apiarg">guid</span>) - Returns race, class, sex about the guid (client must have seen the guid)
: [[API IsRecognizedName|IsRecognizedName]](<span class="apiarg">text, includeBitField, excludeBitField</span>) - Returns true if a given character name is recognized by the client.

==== Inspection ====
: [[API CanInspect|CanInspect]](<span class="apiarg">unit [, showError]</span>) - Returns whether you can inspect the specified unit.
: [[API CheckInteractDistance|CheckInteractDistance]](<span class="apiarg">unit, interaction</span>) - Returns whether you're in range to perform various interactions with the specified unit.
: [[API ClearInspectPlayer|ClearInspectPlayer]]() - Reset inspect data once finished with it.
: [[API GetInspectArenaData|GetInspectArenaData]](<span class="apiarg">bracketIndex</span>)
: [[API GetInspectGuildInfo|GetInspectGuildInfo]](<span class="apiarg">unit</span>)
: [[API GetInspectHonorData|GetInspectHonorData]]() - Returns honor information about the inspected player.
: [[API GetInspectRatedBGData|GetInspectRatedBGData]]()
: [[API GetInspectSpecialization|GetInspectSpecialization]](<span class="apiarg">unit</span>) - Returns a number representing the current active specialization of a given unit.
: [[API GetInspectTalent|GetInspectTalent]]()
: [[API NotifyInspect|NotifyInspect]](<span class="apiarg">unit</span>) - Requests information about a unit's inventory and talents from the server.
: <small>UI</small> [[API InspectUnit|InspectUnit]](<span class="apiarg">unit</span>) - Instructs FrameXML to inspect a particular unit (query server; show UI).

==== Trading ====
Relates to [[Trade|Trading]].
: <small>HW</small> [[API AcceptTrade|AcceptTrade]]() - A pending trade will be accepted.
: [[API AddTradeMoney|AddTradeMoney]]() - Adds the money dropped into the player's trade frame.
: [[API BeginTrade|BeginTrade]]()
: [[API CancelTrade|CancelTrade]]() - Declines the offer to trade with the other player.
: [[API CancelTradeAccept|CancelTradeAccept]]() - Cancels the trade attempt which required an accept.
: [[API ClickTargetTradeButton|ClickTargetTradeButton]](<span class="apiarg">index</span>)
: [[API ClickTradeButton|ClickTradeButton]](<span class="apiarg">index</span>) - Equivalent of a mouseclick on the trade window buttons [1-7].
: [[API CloseTrade|CloseTrade]]() - Closes the trade.
: [[API GetPlayerTradeMoney|GetPlayerTradeMoney]]() - Returns the amount of money the player has in the trade window.
: [[API GetTargetTradeMoney|GetTargetTradeMoney]]() - Returns the amount of money in the trade frame of the target player.
: [[API GetTradePlayerItemInfo|GetTradePlayerItemInfo]](<span class="apiarg">id</span>) - Returns information about a trade item.
: [[API GetTradePlayerItemLink|GetTradePlayerItemLink]](<span class="apiarg">id</span>) - Returns an [[itemLink]] for the given item in your side of the trade window (if open)
: [[API GetTradeTargetItemInfo|GetTradeTargetItemInfo]](<span class="apiarg">id</span>) - Returns information about a trade item.
: [[API GetTradeTargetItemLink|GetTradeTargetItemLink]](<span class="apiarg">id</span>) - Returns an [[itemLink]] for the given item in the other player's side of the trade window (if open)
: [[API InitiateTrade|InitiateTrade]](<span class="apiarg">UnitId</span>) - Asks the specified unit to trade.
: [[API SetTradeMoney|SetTradeMoney]](<span class="apiarg">copper</span>) - Sets the amount of money offered as part of the player's trade offer.

==== Summoning ====
: [[API C_IncomingSummon.HasIncomingSummon|C_IncomingSummon.HasIncomingSummon]](<span class="apiarg">unit</span>) : <span class="apiret">summon</span> - Returns whether a group member has an incoming summon.
: [[API C_IncomingSummon.IncomingSummonStatus|C_IncomingSummon.IncomingSummonStatus]](<span class="apiarg">unit</span>) : <span class="apiret">status</span> - Returns the status of an group member's incoming summon.
: [[API C_SummonInfo.CancelSummon|C_SummonInfo.CancelSummon]]() - Rejects a summon request.
: [[API C_SummonInfo.ConfirmSummon|C_SummonInfo.ConfirmSummon]]() - Accepts a summon request.
: [[API C_SummonInfo.GetSummonConfirmAreaName|C_SummonInfo.GetSummonConfirmAreaName]]() : <span class="apiret">areaName</span> - Returns the name of the area you're being summoned to.
: [[API C_SummonInfo.GetSummonConfirmSummoner|C_SummonInfo.GetSummonConfirmSummoner]]() : <span class="apiret">summoner</span> - Returns the name of the player summoning you.
: [[API C_SummonInfo.GetSummonConfirmTimeLeft|C_SummonInfo.GetSummonConfirmTimeLeft]]() : <span class="apiret">timeLeft</span> - Returns the amount of time left before the pending summon expires.
: [[API C_SummonInfo.GetSummonReason|C_SummonInfo.GetSummonReason]]() : <span class="apiret">summonReason</span>
: [[API C_SummonInfo.IsSummonSkippingStartExperience|C_SummonInfo.IsSummonSkippingStartExperience]]() : <span class="apiret">isSummonSkippingStartExperience</span>
: [[API PlayerCanTeleport|PlayerCanTeleport]]()

==== Death ====
: [[API C_DeathInfo.GetCorpseMapPosition|C_DeathInfo.GetCorpseMapPosition]](<span class="apiarg">uiMapID</span>) : <span class="apiret">position</span> - Returns the location of the player's corpse on the map.
: [[API C_DeathInfo.GetDeathReleasePosition|C_DeathInfo.GetDeathReleasePosition]](<span class="apiarg">uiMapID</span>) : <span class="apiret">position</span> - Returns the death release location.
: [[API C_DeathInfo.GetGraveyardsForMap|C_DeathInfo.GetGraveyardsForMap]](<span class="apiarg">uiMapID</span>) : <span class="apiret">graveyards</span> - Returns graveyard info and location for a map.
: [[API C_DeathInfo.GetSelfResurrectOptions|C_DeathInfo.GetSelfResurrectOptions]]() : <span class="apiret">options</span> - Returns self resurrect options for your character, including from soulstones.
: [[API C_DeathInfo.UseSelfResurrectOption|C_DeathInfo.UseSelfResurrectOption]](<span class="apiarg">optionType, id</span>) - Uses a soulstone or similar means of self resurrection.
: [[API AcceptResurrect|AcceptResurrect]]() - The player accepts the request from another player to resurrect him/herself.
: [[API AcceptXPLoss|AcceptXPLoss]]() - Accept the durability loss to be reborn by a spirit healer. (The name is a remnant from when sprit res was an XP loss instead.)
: [[API CannotBeResurrected|CannotBeResurrected]]()
: [[API DeathRecap_GetEvents|DeathRecap_GetEvents]]()
: [[API DeathRecap_HasEvents|DeathRecap_HasEvents]]()
: [[API DeclineResurrect|DeclineResurrect]]() - Decline the request from another player to resurrect him/herself.
: [[API GetCemeteryPreference|GetCemeteryPreference]]()
: [[API GetCorpseRecoveryDelay|GetCorpseRecoveryDelay]]() - Time left before a player can accept a resurrection.
: [[API GetDeathRecapLink|GetDeathRecapLink]](<span class="apiarg">recapID</span>)
: [[API GetReleaseTimeRemaining|GetReleaseTimeRemaining]]() - Returns the amount of time left before your ghost is pulled from your body.
: [[API GetResSicknessDuration|GetResSicknessDuration]]()
: [[API HasNoReleaseAura|HasNoReleaseAura]]()
: [[API IsCemeterySelectionAvailable|IsCemeterySelectionAvailable]]()
: [[API IsEncounterLimitingResurrections|IsEncounterLimitingResurrections]]()
: [[API IsEncounterSuppressingRelease|IsEncounterSuppressingRelease]]()
: [[API NotWhileDeadError|NotWhileDeadError]]() - Generates an error message saying you cannot do that while dead.
: [[API PortGraveyard|PortGraveyard]]()
: [[API RepopMe|RepopMe]]() - The "Release Spirit" button. Sends you to the graveyard when dead.
: [[API ResurrectGetOfferer|ResurrectGetOfferer]]() - Returns the name of the person offering to resurrect you.
: [[API ResurrectHasSickness|ResurrectHasSickness]]() - Appears to be used when accepting a resurrection will give you resurrection sickessness.
: [[API ResurrectHasTimer|ResurrectHasTimer]]() - Does the player have to wait before accepting a resurrection.
: [[API RetrieveCorpse|RetrieveCorpse]]() - Resurrects when near corpse. e.g., The "Accept" button one sees after running back to your body.
: [[API SetCemeteryPreference|SetCemeteryPreference]](<span class="apiarg">cemeteryID</span>)
: [[API TimeoutResurrect|TimeoutResurrect]]()

=== Professions ===
Relates to [[Profession]]s.
: [[API C_TradeSkillUI.AnyRecipeCategoriesFiltered|C_TradeSkillUI.AnyRecipeCategoriesFiltered]]()
: [[API C_TradeSkillUI.AreAnyInventorySlotsFiltered|C_TradeSkillUI.AreAnyInventorySlotsFiltered]]()
: [[API C_TradeSkillUI.CanObliterateCursorItem|C_TradeSkillUI.CanObliterateCursorItem]]()
: [[API C_TradeSkillUI.CanTradeSkillListLink|C_TradeSkillUI.CanTradeSkillListLink]]()
: [[API C_TradeSkillUI.ClearInventorySlotFilter|C_TradeSkillUI.ClearInventorySlotFilter]]()
: [[API C_TradeSkillUI.ClearPendingObliterateItem|C_TradeSkillUI.ClearPendingObliterateItem]]()
: [[API C_TradeSkillUI.ClearRecipeCategoryFilter|C_TradeSkillUI.ClearRecipeCategoryFilter]]()
: [[API C_TradeSkillUI.ClearRecipeSourceTypeFilter|C_TradeSkillUI.ClearRecipeSourceTypeFilter]]()
: [[API C_TradeSkillUI.CloseObliterumForge|C_TradeSkillUI.CloseObliterumForge]]()
: [[API C_TradeSkillUI.CloseTradeSkill|C_TradeSkillUI.CloseTradeSkill]]() - Closes an open trade skill window.
: [[API C_TradeSkillUI.CraftRecipe|C_TradeSkillUI.CraftRecipe]](<span class="apiarg">recipeSpellID [, numCasts, optionalReagents, recipeLevel]</span>) - Performs the tradeskill a specified number of times.
: [[API C_TradeSkillUI.DropPendingObliterateItemFromCursor|C_TradeSkillUI.DropPendingObliterateItemFromCursor]]()
: [[API C_TradeSkillUI.GetAllFilterableInventorySlots|C_TradeSkillUI.GetAllFilterableInventorySlots]]()
: [[API C_TradeSkillUI.GetAllProfessionTradeSkillLines|C_TradeSkillUI.GetAllProfessionTradeSkillLines]]() : <span class="apiret">skillLineID</span>
: [[API C_TradeSkillUI.GetAllRecipeIDs|C_TradeSkillUI.GetAllRecipeIDs]]() - Returns a table containing all the recipe IDs for the current trade skill.
: [[API C_TradeSkillUI.GetCategories|C_TradeSkillUI.GetCategories]]()
: [[API C_TradeSkillUI.GetCategoryInfo|C_TradeSkillUI.GetCategoryInfo]](<span class="apiarg">categoryID [, returnTable]</span>)
: [[API C_TradeSkillUI.GetFilterableInventorySlots|C_TradeSkillUI.GetFilterableInventorySlots]]()
: [[API C_TradeSkillUI.GetFilteredRecipeIDs|C_TradeSkillUI.GetFilteredRecipeIDs]]()
: [[API C_TradeSkillUI.GetObliterateSpellID|C_TradeSkillUI.GetObliterateSpellID]]()
: [[API C_TradeSkillUI.GetOnlyShowLearnedRecipes|C_TradeSkillUI.GetOnlyShowLearnedRecipes]]()
: [[API C_TradeSkillUI.GetOnlyShowMakeableRecipes|C_TradeSkillUI.GetOnlyShowMakeableRecipes]]()
: [[API C_TradeSkillUI.GetOnlyShowSkillUpRecipes|C_TradeSkillUI.GetOnlyShowSkillUpRecipes]]()
: [[API C_TradeSkillUI.GetOnlyShowUnlearnedRecipes|C_TradeSkillUI.GetOnlyShowUnlearnedRecipes]]()
: [[API C_TradeSkillUI.GetOptionalReagentBonusText|C_TradeSkillUI.GetOptionalReagentBonusText]](<span class="apiarg">recipeSpellID, optionalReagentIndex, optionalReagents</span>) : <span class="apiret">bonusText</span>
: [[API C_TradeSkillUI.GetOptionalReagentInfo|C_TradeSkillUI.GetOptionalReagentInfo]](<span class="apiarg">recipeSpellID</span>) : <span class="apiret">slots</span>
: [[API C_TradeSkillUI.GetPendingObliterateItemID|C_TradeSkillUI.GetPendingObliterateItemID]]()
: [[API C_TradeSkillUI.GetPendingObliterateItemLink|C_TradeSkillUI.GetPendingObliterateItemLink]]()
: [[API C_TradeSkillUI.GetRecipeCooldown|C_TradeSkillUI.GetRecipeCooldown]](<span class="apiarg">recipeID</span>) - Returns the number of seconds left for a skill to cooldown.
: [[API C_TradeSkillUI.GetRecipeDescription|C_TradeSkillUI.GetRecipeDescription]](<span class="apiarg">recipeID</span>) - Returns the description text of the indicated trade skill.
: [[API C_TradeSkillUI.GetRecipeInfo|C_TradeSkillUI.GetRecipeInfo]](<span class="apiarg">recipeSpellID [, recipeLevel]</span>) : <span class="apiret">recipeInfo</span> - Returns information for a recipe.
: [[API C_TradeSkillUI.GetRecipeItemLevelFilter|C_TradeSkillUI.GetRecipeItemLevelFilter]]()
: [[API C_TradeSkillUI.GetRecipeItemLink|C_TradeSkillUI.GetRecipeItemLink]](<span class="apiarg">recipeID</span>) - Returns the [[itemLink]] for a trade skill item.
: [[API C_TradeSkillUI.GetRecipeItemNameFilter|C_TradeSkillUI.GetRecipeItemNameFilter]]()
: [[API C_TradeSkillUI.GetRecipeLink|C_TradeSkillUI.GetRecipeLink]](<span class="apiarg">recipeID</span>)
: [[API C_TradeSkillUI.GetRecipeNumItemsProduced|C_TradeSkillUI.GetRecipeNumItemsProduced]](<span class="apiarg">recipeID</span>) - Gets the number of items made in a single use of a skill.
: [[API C_TradeSkillUI.GetRecipeNumReagents|C_TradeSkillUI.GetRecipeNumReagents]](<span class="apiarg">recipeSpellID [, recipeLevel]</span>) : <span class="apiret">numReagents</span> - Returns the number of distinct reagents needed for the specified recipe.
: [[API C_TradeSkillUI.GetRecipeReagentInfo|C_TradeSkillUI.GetRecipeReagentInfo]](<span class="apiarg">recipeSpellID, reagentIndex [, recipeLevel]</span>) : <span class="apiret">reagentName, reagentFileID, reagentCount, playerReagentCount</span> - Returns the information for a reagent needed by a recipe.
: [[API C_TradeSkillUI.GetRecipeReagentItemLink|C_TradeSkillUI.GetRecipeReagentItemLink]](<span class="apiarg">recipeID, reagentIndex</span>) - Returns a link for a reagent needed by a recipe.
: [[API C_TradeSkillUI.GetRecipeRepeatCount|C_TradeSkillUI.GetRecipeRepeatCount]]() : <span class="apiret">recastTimes</span> - Returns the number of times the current item is being crafted.
: [[API C_TradeSkillUI.GetRecipeSourceText|C_TradeSkillUI.GetRecipeSourceText]](<span class="apiarg">recipeID</span>)
: [[API C_TradeSkillUI.GetRecipeTools|C_TradeSkillUI.GetRecipeTools]](<span class="apiarg">recipeID</span>) - Returns information about the tools needed for a tradeskill.
: [[API C_TradeSkillUI.GetSubCategories|C_TradeSkillUI.GetSubCategories]](<span class="apiarg">categoryID</span>)
: [[API C_TradeSkillUI.GetTradeSkillDisplayName|C_TradeSkillUI.GetTradeSkillDisplayName]](<span class="apiarg">skillLineID</span>) : <span class="apiret">professionDisplayName</span>
: [[API C_TradeSkillUI.GetTradeSkillLine|C_TradeSkillUI.GetTradeSkillLine]]() : <span class="apiret">skillLineID, skillLineDisplayName, skillLineRank, skillLineMaxRank, ...</span> - Returns information about the selected skill line.
: [[API C_TradeSkillUI.GetTradeSkillLineForRecipe|C_TradeSkillUI.GetTradeSkillLineForRecipe]](<span class="apiarg">recipeID</span>)
: [[API C_TradeSkillUI.GetTradeSkillLineInfoByID|C_TradeSkillUI.GetTradeSkillLineInfoByID]](<span class="apiarg">skillLineID</span>) : <span class="apiret">skillLineDisplayName, skillLineRank, skillLineMaxRank, skillLineModifier, ...</span>
: [[API C_TradeSkillUI.GetTradeSkillListLink|C_TradeSkillUI.GetTradeSkillListLink]]() - Returns the [[TradeSkillLink]] for a trade skill.
: [[API C_TradeSkillUI.GetTradeSkillTexture|C_TradeSkillUI.GetTradeSkillTexture]](<span class="apiarg">tradeSkillID</span>)
: [[API C_TradeSkillUI.IsAnyRecipeFromSource|C_TradeSkillUI.IsAnyRecipeFromSource]](<span class="apiarg">sourceType</span>)
: [[API C_TradeSkillUI.IsDataSourceChanging|C_TradeSkillUI.IsDataSourceChanging]]()
: [[API C_TradeSkillUI.IsEmptySkillLineCategory|C_TradeSkillUI.IsEmptySkillLineCategory]](<span class="apiarg">categoryID</span>) : <span class="apiret">effectivelyKnown</span>
: [[API C_TradeSkillUI.IsInventorySlotFiltered|C_TradeSkillUI.IsInventorySlotFiltered]](<span class="apiarg">index</span>)
: [[API C_TradeSkillUI.IsNPCCrafting|C_TradeSkillUI.IsNPCCrafting]]() - Checks if the Trade Skill UI is open for crafting by an NPC.
: [[API C_TradeSkillUI.IsRecipeCategoryFiltered|C_TradeSkillUI.IsRecipeCategoryFiltered]](<span class="apiarg">categoryID [, subCategoryID]</span>)
: [[API C_TradeSkillUI.IsRecipeFavorite|C_TradeSkillUI.IsRecipeFavorite]](<span class="apiarg">recipeID</span>)
: [[API C_TradeSkillUI.IsRecipeRepeating|C_TradeSkillUI.IsRecipeRepeating]]()
: [[API C_TradeSkillUI.IsRecipeSearchInProgress|C_TradeSkillUI.IsRecipeSearchInProgress]]()
: [[API C_TradeSkillUI.IsRecipeSourceTypeFiltered|C_TradeSkillUI.IsRecipeSourceTypeFiltered]](<span class="apiarg">sourceType</span>)
: [[API C_TradeSkillUI.IsTradeSkillGuild|C_TradeSkillUI.IsTradeSkillGuild]]() - Checks if the Trade Skill UI is open for a profession in the guild.
: [[API C_TradeSkillUI.IsTradeSkillGuildMember|C_TradeSkillUI.IsTradeSkillGuildMember]]()
: [[API C_TradeSkillUI.IsTradeSkillLinked|C_TradeSkillUI.IsTradeSkillLinked]]() - Checks if the Trade Skill UI is open for a profession linked by another character.
: [[API C_TradeSkillUI.IsTradeSkillReady|C_TradeSkillUI.IsTradeSkillReady]]()
: [[API C_TradeSkillUI.ObliterateItem|C_TradeSkillUI.ObliterateItem]]()
: [[API C_TradeSkillUI.OpenTradeSkill|C_TradeSkillUI.OpenTradeSkill]](<span class="apiarg">tradeSkillID</span>)
: [[API C_TradeSkillUI.SetInventorySlotFilter|C_TradeSkillUI.SetInventorySlotFilter]](<span class="apiarg">index [, enable, exclusive]</span>)
: [[API C_TradeSkillUI.SetOnlyShowLearnedRecipes|C_TradeSkillUI.SetOnlyShowLearnedRecipes]]()
: [[API C_TradeSkillUI.SetOnlyShowMakeableRecipes|C_TradeSkillUI.SetOnlyShowMakeableRecipes]](<span class="apiarg">onlyMakable</span>) - Controls whether only recipes you have the reagents to craft are shown.
: [[API C_TradeSkillUI.SetOnlyShowSkillUpRecipes|C_TradeSkillUI.SetOnlyShowSkillUpRecipes]]()
: [[API C_TradeSkillUI.SetOnlyShowUnlearnedRecipes|C_TradeSkillUI.SetOnlyShowUnlearnedRecipes]]()
: [[API C_TradeSkillUI.SetRecipeCategoryFilter|C_TradeSkillUI.SetRecipeCategoryFilter]](<span class="apiarg">categoryID [, subCategoryID]</span>)
: [[API C_TradeSkillUI.SetRecipeFavorite|C_TradeSkillUI.SetRecipeFavorite]](<span class="apiarg">recipeID, favorite</span>)
: [[API C_TradeSkillUI.SetRecipeItemLevelFilter|C_TradeSkillUI.SetRecipeItemLevelFilter]](<span class="apiarg">minLevel, maxLevel</span>)
: [[API C_TradeSkillUI.SetRecipeItemNameFilter|C_TradeSkillUI.SetRecipeItemNameFilter]]()
: [[API C_TradeSkillUI.SetRecipeRepeatCount|C_TradeSkillUI.SetRecipeRepeatCount]](<span class="apiarg">recipeSpellID [, numCasts, optionalReagents]</span>)
: [[API C_TradeSkillUI.SetRecipeSourceTypeFilter|C_TradeSkillUI.SetRecipeSourceTypeFilter]](<span class="apiarg">sourceType, filtered</span>)
: [[API C_TradeSkillUI.StopRecipeRepeat|C_TradeSkillUI.StopRecipeRepeat]]() - Stops creating additional queued items.
: [[API AbandonSkill|AbandonSkill]](<span class="apiarg">index</span>) - The player abandons a skill.
: [[API GetProfessionInfo|GetProfessionInfo]](<span class="apiarg">index</span>) - Gets details on a profession from its index including name, icon, and skill level.
: [[API GetProfessions|GetProfessions]]() - Gives all of the current character's professions.
: [[API GetSpellRank|GetSpellRank]](<span class="apiarg">recipeID</span>) - Returns recipe rank.

==== Archaeology ====
[[Archaeology]] was added in [[Patch 4.0.1]]
: [[API C_ResearchInfo.GetDigSitesForMap|C_ResearchInfo.GetDigSitesForMap]](<span class="apiarg">uiMapID</span>) : <span class="apiret">digSites</span> - Returns the dig sites on a map.
: [[API ArchaeologyMapUpdateAll|ArchaeologyMapUpdateAll]]() - Updates the digsites and returns the number of digsites in the current map-zone.
: [[API ArchaeologyGetIconInfo|ArchaeologyGetIconInfo]](<span class="apiarg">index</span>)
: [[API ArcheologyGetVisibleBlobID|ArcheologyGetVisibleBlobID]](<span class="apiarg">index</span>) - Returns BlobID of a digsite in the current map-zone.
: [[API CanItemBeSocketedToArtifact|CanItemBeSocketedToArtifact]](<span class="apiarg">itemID</span>) - Returns 1 if item could be added to the [[API SetSelectedArtifact|selected]] artifact.
: [[API CanScanResearchSite|CanScanResearchSite]]() - Returns whether the player is currently on a digsite.
: [[API CanSolveArtifact|CanSolveArtifact]]() - Returns true if artifact can be solved.
: [[API CloseResearch|CloseResearch]]()
: [[API GetActiveArtifactByRace|GetActiveArtifactByRace]](<span class="apiarg">raceIndex</span>) - Returns the information for the active artifact of raceIndex.
: [[API GetArchaeologyInfo|GetArchaeologyInfo]]() - Returns localized name of Archaeology skill.
: [[API GetArchaeologyRaceInfo|GetArchaeologyRaceInfo]](<span class="apiarg">raceIndex</span>) - Returns the information for a specific race used in Archaeology.
: [[API GetArchaeologyRaceInfoByID|GetArchaeologyRaceInfoByID]](<span class="apiarg">researchBranchID</span>) - Returns Racename and texture.
: [[API GetArtifactInfoByRace|GetArtifactInfoByRace]](<span class="apiarg">raceIndex, artifactIndex</span>) - Returns the information for a specific race's artifact.
: [[API GetNumArchaeologyRaces|GetNumArchaeologyRaces]]() - Returns the amount of Archaeology races in the game.
: [[API GetNumArtifactsByRace|GetNumArtifactsByRace]](<span class="apiarg">raceIndex</span>) - Returns the amount of artifacts the player has acquired from the provided race.
: [[API GetSelectedArtifactInfo|GetSelectedArtifactInfo]]() - Returns the information for the [[API SetSelectedArtifact|selected]] race.
: [[API GetArtifactProgress|GetArtifactProgress]]() - Returns fragment-information about the [[API SetSelectedArtifact|selected]] artifact.
: [[API IsArtifactCompletionHistoryAvailable|IsArtifactCompletionHistoryAvailable]]()
: [[API ItemAddedToArtifact|ItemAddedToArtifact]](<span class="apiarg">keystoneindex</span>) - Returns if there is a keystone in the artifact.
: [[API SetSelectedArtifact|SetSelectedArtifact]](<span class="apiarg">raceIndex</span>) - Sets the selected artifact to raceIndex.
: [[API RemoveItemFromArtifact|RemoveItemFromArtifact]]() - Remove a keystone from the [[API SetSelectedArtifact|selected]] artifact.
: [[API RequestArtifactCompletionHistory|RequestArtifactCompletionHistory]]()
: [[API SocketItemToArtifact|SocketItemToArtifact]]() - Add a keystone to the [[API SetSelectedArtifact|selected]] artifact.
: [[API SolveArtifact|SolveArtifact]]() - Solve the [[API SetSelectedArtifact|selected]] artifact.

==== Glyphs ====
[[Glyph]]s were added in [[Patch 3.0.2]]. After the Glyph interface was removed in [[Patch 7.0.3]] they were streamlined into the [[Spellbook]].
: [[API AttachGlyphToSpell|AttachGlyphToSpell]](<span class="apiarg">spellID</span>)
: [[API GetCurrentGlyphNameForSpell|GetCurrentGlyphNameForSpell]](<span class="apiarg">spellID</span>)
: [[API GetPendingGlyphName|GetPendingGlyphName]]()
: [[API HasAttachedGlyph|HasAttachedGlyph]](<span class="apiarg">spellID</span>)
: [[API HasPendingGlyphCast|HasPendingGlyphCast]]()
: [[API IsCastingGlyph|IsCastingGlyph]]()
: [[API IsPendingGlyphRemoval|IsPendingGlyphRemoval]]()
: [[API IsSpellValidForPendingGlyph|IsSpellValidForPendingGlyph]](<span class="apiarg">spellID</span>)

==== Item Socketing ====
The following were added along with socketed items and gems in [[Patch 2.0]]. ID refers to a 1-based index of the sockets in the item being considered for socketing.
: [[API C_ItemSocketInfo.CompleteSocketing|C_ItemSocketInfo.CompleteSocketing]]() - Completes socketing an item, binding it to the player.
: [[API AcceptSockets|AcceptSockets]]() - Sockets tentative gems into the sockets, replacing existing gems if necessary.
: [[API CloseSocketInfo|CloseSocketInfo]]() - Stops considering the item for socketing, without applying changes.
: [[API GetExistingSocketInfo|GetExistingSocketInfo]](<span class="apiarg">id</span>) - Returns information about the existing gem in the socket.
: [[API GetExistingSocketLink|GetExistingSocketLink]](<span class="apiarg">id</span>) - Returns an item link for the existing gem in the socket.
: [[API GetNewSocketInfo|GetNewSocketInfo]](<span class="apiarg">id</span>) - Returns information about the new (tentative) gem in the socket.
: [[API GetNewSocketLink|GetNewSocketLink]](<span class="apiarg">id</span>) - Returns an item link for the new (tentative) gem in the socket.
: [[API GetNumSockets|GetNumSockets]]() - Returns the number of sockets in the item currently being socketed.
: [[API GetSocketItemBoundTradeable|GetSocketItemBoundTradeable]]() - Returns whether the item currently being socketed is temporarily tradable (BoP boss loot).
: [[API GetSocketItemInfo|GetSocketItemInfo]]() - Returns information about the item currently being socketed.
: [[API GetSocketItemRefundable|GetSocketItemRefundable]]() - Returns whether the item currently being socketed is refundable.
: [[API GetSocketTypes|GetSocketTypes]](<span class="apiarg">id</span>) - Returns the type (color) of a socket in the item.
: [[API HasBoundGemProposed|HasBoundGemProposed]]()
: [[API SocketContainerItem|SocketContainerItem]](<span class="apiarg">bag, slot</span>) - Consider an item in a container slot for socketing.
: [[API SocketInventoryItem|SocketInventoryItem]](<span class="apiarg">slot</span>) - Considers the item in the inventory slot for socketing.

=== PvP ===
Relates to [[Player vs. Player]].
: [[API C_PvP.CanDisplayDeaths|C_PvP.CanDisplayDeaths]]() : <span class="apiret">canDisplay</span>
: [[API C_PvP.CanDisplayHonorableKills|C_PvP.CanDisplayHonorableKills]]() : <span class="apiret">canDisplay</span>
: [[API C_PvP.CanPlayerUseRatedPVPUI|C_PvP.CanPlayerUseRatedPVPUI]]() : <span class="apiret">canUse, failureReason</span>
: [[API C_PvP.DoesMatchOutcomeAffectRating|C_PvP.DoesMatchOutcomeAffectRating]]() : <span class="apiret">doesAffect</span>
: [[API C_PvP.GetActiveMatchBracket|C_PvP.GetActiveMatchBracket]]() : <span class="apiret">bracket</span>
: [[API C_PvP.GetActiveMatchDuration|C_PvP.GetActiveMatchDuration]]() : <span class="apiret">seconds</span>
: [[API C_PvP.GetActiveMatchState|C_PvP.GetActiveMatchState]]() : <span class="apiret">state</span>
: [[API C_PvP.GetActiveMatchWinner|C_PvP.GetActiveMatchWinner]]() : <span class="apiret">winner</span>
: [[API C_PvP.GetGlobalPvpScalingInfoForSpecID|C_PvP.GetGlobalPvpScalingInfoForSpecID]](<span class="apiarg">specializationID</span>) : <span class="apiret">pvpScalingData</span>
: [[API C_PvP.GetHonorRewardInfo|C_PvP.GetHonorRewardInfo]](<span class="apiarg">honorLevel</span>) : <span class="apiret">info</span>
: [[API C_PvP.GetMatchPVPStatColumn|C_PvP.GetMatchPVPStatColumn]](<span class="apiarg">pvpStatID</span>) : <span class="apiret">info</span>
: [[API C_PvP.GetMatchPVPStatColumns|C_PvP.GetMatchPVPStatColumns]]() : <span class="apiret">columns</span>
: [[API C_PvP.GetNextHonorLevelForReward|C_PvP.GetNextHonorLevelForReward]](<span class="apiarg">honorLevel</span>) : <span class="apiret">nextHonorLevelWithReward</span>
: [[API C_PvP.GetOutdoorPvPWaitTime|C_PvP.GetOutdoorPvPWaitTime]](<span class="apiarg">uiMapID</span>) : <span class="apiret">pvpWaitTime</span> - Returns the number of seconds until the next battle in a given world PvP zone.
: [[API C_PvP.GetPostMatchCurrencyRewards|C_PvP.GetPostMatchCurrencyRewards]]() : <span class="apiret">rewards</span>
: [[API C_PvP.GetPostMatchItemRewards|C_PvP.GetPostMatchItemRewards]]() : <span class="apiret">rewards</span>
: [[API C_PvP.GetPVPActiveMatchPersonalRatedInfo|C_PvP.GetPVPActiveMatchPersonalRatedInfo]]() : <span class="apiret">info</span>
: [[API C_PvP.GetPvpTierID|C_PvP.GetPvpTierID]](<span class="apiarg">tierEnum, bracketEnum</span>) : <span class="apiret">id</span>
: [[API C_PvP.GetPvpTierInfo|C_PvP.GetPvpTierInfo]](<span class="apiarg">tierID</span>) : <span class="apiret">pvpTierInfo</span>
: [[API C_PvP.GetRewardItemLevelsByTierEnum|C_PvP.GetRewardItemLevelsByTierEnum]](<span class="apiarg">pvpTierEnum</span>) : <span class="apiret">activityItemLevel, weeklyItemLevel</span>
: [[API C_PvP.GetScoreInfo|C_PvP.GetScoreInfo]](<span class="apiarg">offsetIndex</span>) : <span class="apiret">info</span>
: [[API C_PvP.GetScoreInfoByPlayerGuid|C_PvP.GetScoreInfoByPlayerGuid]](<span class="apiarg">guid</span>) : <span class="apiret">info</span>
: [[API C_PvP.GetSeasonBestInfo|C_PvP.GetSeasonBestInfo]]() : <span class="apiret">tierID, nextTierID</span>
: [[API C_PvP.GetSkirmishInfo|C_PvP.GetSkirmishInfo]](<span class="apiarg">pvpBracket</span>) : <span class="apiret">battlemasterListInfo</span>
: [[API C_PvP.GetSpecialEventDetails|C_PvP.GetSpecialEventDetails]]() : <span class="apiret">info</span>
: [[API C_PvP.GetSpecialEventInfo|C_PvP.GetSpecialEventInfo]]() : <span class="apiret">info</span>
: [[API C_PvP.GetTeamInfo|C_PvP.GetTeamInfo]](<span class="apiarg">factionIndex</span>) : <span class="apiret">info</span>
: [[API C_PvP.GetWeeklyChestInfo|C_PvP.GetWeeklyChestInfo]]() : <span class="apiret">rewardAchieved, lastWeekRewardAchieved, lastWeekRewardClaimed, ...</span>
: [[API C_PvP.IsActiveMatchRegistered|C_PvP.IsActiveMatchRegistered]]() : <span class="apiret">registered</span>
: [[API C_PvP.IsMatchFactional|C_PvP.IsMatchFactional]]() : <span class="apiret">isFactional</span>
: [[API C_PvP.IsPVPMap|C_PvP.IsPVPMap]]() : <span class="apiret">isPVPMap</span>
: [[API C_PvP.IsRatedMap|C_PvP.IsRatedMap]]() : <span class="apiret">isRatedMap</span>
: [[API C_PvP.RequestCrowdControlSpell|C_PvP.RequestCrowdControlSpell]](<span class="apiarg">playerToken</span>)
: [[API AcceptDuel|AcceptDuel]]() - The player accepts the challenge to duel.
: [[API CancelDuel|CancelDuel]]() - Refuse the invitation to fight a duel.
: [[API ClearBattlemaster|ClearBattlemaster]]()
: [[API ForfeitDuel|ForfeitDuel]]()
: [[API GetPVPDesired|GetPVPDesired]]() - Returns whether the player has permanently turned on their PvP flag.
: [[API GetPVPLifetimeStats|GetPVPLifetimeStats]]() - Get your PvP/Honor statistics for your lifetime.
: [[API GetPVPRoles|GetPVPRoles]]()
: [[API GetPVPSessionStats|GetPVPSessionStats]]() - Get your PvP/Honor statistics for this session.
: [[API GetPVPTimer|GetPVPTimer]]() - Returns the amount of time until your PvP flag fades.
: [[API GetPVPYesterdayStats|GetPVPYesterdayStats]]() - Get your PvP/Honor statistics for yesterday.
: [[API GetRewardPackArtifactPower|GetRewardPackArtifactPower]](<span class="apiarg">rewardPackID</span>)
: [[API GetRewardPackCurrencies|GetRewardPackCurrencies]](<span class="apiarg">rewardPackID</span>)
: [[API GetRewardPackItems|GetRewardPackItems]](<span class="apiarg">rewardPackID</span>)
: [[API GetRewardPackMoney|GetRewardPackMoney]](<span class="apiarg">rewardPackID</span>)
: [[API GetRewardPackTitleName|GetRewardPackTitleName]](<span class="apiarg">titleID</span>)
: [[API GetRewardPackTitle|GetRewardPackTitle]](<span class="apiarg">rewardPackID</span>)
: [[API IsCompetitiveModeEnabled|IsCompetitiveModeEnabled]]()
: [[API IsInActiveWorldPVP|IsInActiveWorldPVP]]()
: [[API IsPartyWorldPVP|IsPartyWorldPVP]]()
: [[API IsSubZonePVPPOI|IsSubZonePVPPOI]]()
: [[API PlayerIsPVPInactive|PlayerIsPVPInactive]](<span class="apiarg">unit</span>)
: [[API RequestPVPOptionsEnabled|RequestPVPOptionsEnabled]]()
: [[API RequestPVPRewards|RequestPVPRewards]]()
: [[API SetPVP|SetPVP]](<span class="apiarg">enable</span>) - Sets the players PVP mode (1 to enable, nil to toggle off eventually).
: [[API SetPVPRoles|SetPVPRoles]]()
: [[API SortBGList|SortBGList]]()
: [[API StartDuel|StartDuel]](<span class="apiarg">name</span>) - Challenge someone to a duel (by name)
: [[API TogglePVP|TogglePVP]]() - Toggles PVP status.
: [[API UnitHonor|UnitHonor]](<span class="apiarg">unit</span>) - Returns the amount of honor the unit has for the current rank.
: [[API UnitHonorLevel|UnitHonorLevel]](<span class="apiarg">unit</span>) - Returns the current honor rank for the unit.
: [[API UnitHonorMax|UnitHonorMax]](<span class="apiarg">unit</span>) - Returns the maximum amount of honor for the current rank.
: [[API UnitIsMercenary|UnitIsMercenary]]()
: [[API UnitIsPVPFreeForAll|UnitIsPVPFreeForAll]](<span class="apiarg">unit</span>) - Returns true if the specified unit is flagged for free-for-all PVP, false otherwise.
: [[API UnitIsPVPSanctuary|UnitIsPVPSanctuary]](<span class="apiarg">unit</span>) - Returns whether the unit is in a PvP sanctuary, and therefore cannot be attacked by other players.
: [[API UnitIsPVP|UnitIsPVP]](<span class="apiarg">unit</span>) - Returns true if the specified unit is flagged for PVP, false otherwise.
: [[API UnitPVPName|UnitPVPName]](<span class="apiarg">unit</span>) - Returns unit's name with PvP rank prefix (e.g., "Corporal Allianceguy").
: [[API UnitPvpClassification|UnitPvpClassification]](<span class="apiarg">unit</span>) : <span class="apiret">classification</span> - Returns whether the unit is a flag/orb carrier or cart runner.

==== Arena ====
: [[API C_PvP.GetArenaCrowdControlInfo|C_PvP.GetArenaCrowdControlInfo]](<span class="apiarg">playerToken</span>) : <span class="apiret">spellID, startTime, duration</span>
: [[API C_PvP.GetArenaRewards|C_PvP.GetArenaRewards]](<span class="apiarg">teamSize</span>) : <span class="apiret">honor, experience, itemRewards, currencyRewards</span>
: [[API C_PvP.GetArenaSkirmishRewards|C_PvP.GetArenaSkirmishRewards]]() : <span class="apiret">honor, experience, itemRewards, currencyRewards</span>
: [[API C_PvP.HasArenaSkirmishWinToday|C_PvP.HasArenaSkirmishWinToday]]() : <span class="apiret">hasArenaSkirmishWinToday</span>
: [[API C_PvP.IsArena|C_PvP.IsArena]]() : <span class="apiret">isArena</span>
: [[API C_PvP.IsMatchConsideredArena|C_PvP.IsMatchConsideredArena]]() : <span class="apiret">asArena</span>
: [[API C_PvP.IsRatedArena|C_PvP.IsRatedArena]]() : <span class="apiret">isRatedArena</span>
: [[API CanSurrenderArena|CanSurrenderArena]]()
: [[API GetArenaOpponentSpec|GetArenaOpponentSpec]]()
: [[API GetBattlefieldArenaFaction|GetBattlefieldArenaFaction]]()
: [[API GetBattlefieldTeamInfo|GetBattlefieldTeamInfo]](<span class="apiarg">index</span>) - Gets info about a registered Arena Team at the end of an arena match.
: [[API GetCurrentArenaSeason|GetCurrentArenaSeason]]() - Gets the current Arena season.
: [[API GetMaxArenaCurrency|GetMaxArenaCurrency]]()
: [[API GetNumArenaOpponents|GetNumArenaOpponents]]()
: [[API GetNumArenaOpponentSpecs|GetNumArenaOpponentSpecs]]()
: [[API GetPreviousArenaSeason|GetPreviousArenaSeason]]() - Gets the previous Arena season.
: [[API IsActiveBattlefieldArena|IsActiveBattlefieldArena]]() - Returns true if in an Arena Match, also Returns true for the second argument if it's a registered match.
: [[API IsArenaSkirmish|IsArenaSkirmish]]()
: [[API IsArenaTeamCaptain|IsArenaTeamCaptain]](<span class="apiarg">teamIndex</span>) - Returns a value based on whether the player is the arena team captain.
: [[API IsInArenaTeam|IsInArenaTeam]]() - Returns true if you are a member of an arena team.
: [[API JoinArena|JoinArena]]()
: [[API JoinSkirmish|JoinSkirmish]](<span class="apiarg">arenaID, joinAsGroup</span>) - Queue for a arena either solo or as a group.
: [[API RequeueSkirmish|RequeueSkirmish]]() - Requeues for an arena skirmish.
: [[API SurrenderArena|SurrenderArena]]()

==== Battlegrounds ====
: [[API C_PvP.GetLevelUpBattlegrounds|C_PvP.GetLevelUpBattlegrounds]](<span class="apiarg">level</span>) : <span class="apiret">battlefields</span>
: [[API C_PvP.GetRandomBGInfo|C_PvP.GetRandomBGInfo]]() : <span class="apiret">info</span>
: [[API C_PvP.GetRandomBGRewards|C_PvP.GetRandomBGRewards]]() : <span class="apiret">honor, experience, itemRewards, currencyRewards</span>
: [[API C_PvP.GetRandomEpicBGInfo|C_PvP.GetRandomEpicBGInfo]]() : <span class="apiret">info</span>
: [[API C_PvP.GetRandomEpicBGRewards|C_PvP.GetRandomEpicBGRewards]]() : <span class="apiret">honor, experience, itemRewards, currencyRewards</span>
: [[API C_PvP.GetRatedBGRewards|C_PvP.GetRatedBGRewards]]() : <span class="apiret">honor, experience, itemRewards, currencyRewards</span>
: [[API C_PvP.IsBattleground|C_PvP.IsBattleground]]() : <span class="apiret">isBattleground</span>
: [[API C_PvP.IsBattlegroundEnlistmentBonusActive|C_PvP.IsBattlegroundEnlistmentBonusActive]]() : <span class="apiret">battlegroundActive, brawlActive</span>
: [[API C_PvP.IsRatedBattleground|C_PvP.IsRatedBattleground]]() : <span class="apiret">isRatedBattleground</span>
: [[API AcceptAreaSpiritHeal|AcceptAreaSpiritHeal]]() - Accept a spirit heal.
: [[API AcceptBattlefieldPort|AcceptBattlefieldPort]](<span class="apiarg">index [, acceptFlag]</span>) - Accept or reject an offered battlefield port.
: [[API BattlefieldSetPendingReportTarget|BattlefieldSetPendingReportTarget]](<span class="apiarg">index</span>)
: [[API CanJoinBattlefieldAsGroup|CanJoinBattlefieldAsGroup]]() - Returns nil if the player can not do a group join for a battlefield.
: [[API CancelAreaSpiritHeal|CancelAreaSpiritHeal]]() - Cancel a spirit heal.
: [[API CheckSpiritHealerDist|CheckSpiritHealerDist]]() - Returns true if you are in range with spirit healer while dead.
: [[API GetAreaSpiritHealerTime|GetAreaSpiritHealerTime]]() - Returns the time left until the next resurrection by the Sprit Guide.
: [[API GetBattlefieldEstimatedWaitTime|GetBattlefieldEstimatedWaitTime]](<span class="apiarg">index</span>) - Get the estimated wait for entry into the battlefield.
: [[API GetBattlefieldFlagPosition|GetBattlefieldFlagPosition]](<span class="apiarg">index</span>) - Get the map position and texture of the flag.
: [[API GetBattlefieldInstanceExpiration|GetBattlefieldInstanceExpiration]]() - Get shutdown timer for the battlefield instance.
: [[API GetBattlefieldInstanceRunTime|GetBattlefieldInstanceRunTime]]() - In milliseconds, the time since battleground started (seems to be queried from server because it is not in sync with time()).
: [[API GetBattlefieldMapIconScale|GetBattlefieldMapIconScale]]() - Scale of the landmark icons on the battlefield minimap.
: [[API GetBattlefieldPortExpiration|GetBattlefieldPortExpiration]](<span class="apiarg">index</span>) - Get the remaining seconds before the battlefield port expires.
: [[API GetBattlefieldScore|GetBattlefieldScore]](<span class="apiarg">index</span>) - Get score information about a player.
: [[API GetBattlefieldStatData|GetBattlefieldStatData]](<span class="apiarg">playerIndex, slotIndex</span>) - Get information for a player from a column thats specific to a battleground (like Warsong Gulch flag captures).
: [[API GetBattlefieldStatus|GetBattlefieldStatus]](<span class="apiarg">index</span>) - Get the battlefield's current status.
: [[API GetBattlefieldTimeWaited|GetBattlefieldTimeWaited]](<span class="apiarg">index</span>) - Get time waited in queue in milliseconds.
: [[API GetBattlefieldWinner|GetBattlefieldWinner]]() - Get the battlefields winner.
: [[API GetBattlegroundInfo|GetBattlegroundInfo]](<span class="apiarg">index</span>) - Returns information about a battleground type.
: [[API GetBattlegroundPoints|GetBattlegroundPoints]]()
: [[API GetMaxBattlefieldID|GetMaxBattlefieldID]]() - Returns the max number of battlefields you can queue for.
: [[API GetNumBattlefieldFlagPositions|GetNumBattlefieldFlagPositions]]() - Get the number of flag positions available from GetBattlefieldFlagPosition().
: [[API GetNumBattlefieldScores|GetNumBattlefieldScores]]() - Returns the number of scores(players) listed in the battlefield scoreboard.
: [[API GetNumBattlegroundTypes|GetNumBattlegroundTypes]]()
: [[API GetPersonalRatedInfo|GetPersonalRatedInfo]](<span class="apiarg">bracketIndex</span>)
: [[API GetRatedBattleGroundInfo|GetRatedBattleGroundInfo]]()
: [[API IsPVPTimerRunning|IsPVPTimerRunning]]()
: <small>PROTECTED</small> [[API JoinBattlefield|JoinBattlefield]](<span class="apiarg">index [, joinAs]</span>) - Queue for a battleground either solo or as a group.
: <small>PROTECTED</small> [[API JoinRatedBattlefield|JoinRatedBattlefield]]()
: [[API LeaveBattlefield|LeaveBattlefield]]() - Leave the current battlefield.
: [[API ReportPlayerIsPVPAFK|ReportPlayerIsPVPAFK]](<span class="apiarg">unit</span>) - Reports the specified player as AFK in a battleground.
: [[API RequestBattlefieldScoreData|RequestBattlefieldScoreData]]() - Request new data for GetBattlefieldScore().
: [[API RequestRandomBattlegroundInstanceInfo|RequestRandomBattlegroundInstanceInfo]]()
: [[API RequestRatedInfo|RequestRatedInfo]]()
: [[API SetBattlefieldScoreFaction|SetBattlefieldScoreFaction]](<span class="apiarg">[faction]</span>) - Set the faction to show on the battlefield scoreboard.
: [[API SortBattlefieldScoreData|SortBattlefieldScoreData]](<span class="apiarg">type</span>)
: [[API UnitInBattleground|UnitInBattleground]](<span class="apiarg">unit</span>) - Returns the unit index if the unit is in your battleground, nil otherwise.

==== World Battlefields ====
The following functions are used for population-limited world PvP zones, like [[Lake Wintergrasp]] or [[Tol Barad]].
: [[API C_PvP.IsActiveBattlefield|C_PvP.IsActiveBattlefield]]() : <span class="apiret">isActiveBattlefield</span>
: [[API BattlefieldMgrEntryInviteResponse|BattlefieldMgrEntryInviteResponse]](<span class="apiarg">queueId, accept</span>)
: [[API BattlefieldMgrExitRequest|BattlefieldMgrExitRequest]](<span class="apiarg">queueId</span>)
: [[API BattlefieldMgrQueueInviteResponse|BattlefieldMgrQueueInviteResponse]](<span class="apiarg">queueId, accept</span>)
: [[API BattlefieldMgrQueueRequest|BattlefieldMgrQueueRequest]]()
: [[API CanHearthAndResurrectFromArea|CanHearthAndResurrectFromArea]]() - Returns whether you can currently be resurrected and teleported out of the world PvP zone.
: [[API HearthAndResurrectFromArea|HearthAndResurrectFromArea]]() - Resurrects the player, and ports them out of the world PvP zone.
: [[API GetNumWorldPVPAreas|GetNumWorldPVPAreas]]() - Returns the number of world PvP zones available.
: [[API GetWorldPVPAreaInfo|GetWorldPVPAreaInfo]](<span class="apiarg">index</span>) - Returns information about a world PvP zone.
: [[API GetWorldPVPQueueStatus|GetWorldPVPQueueStatus]](<span class="apiarg">queueId</span>)

==== Brawl ====
: [[API C_PvP.GetActiveBrawlInfo|C_PvP.GetActiveBrawlInfo]]() : <span class="apiret">brawlInfo</span>
: [[API C_PvP.GetAvailableBrawlInfo|C_PvP.GetAvailableBrawlInfo]]() : <span class="apiret">brawlInfo</span>
: [[API C_PvP.GetBrawlRewards|C_PvP.GetBrawlRewards]](<span class="apiarg">brawlType</span>) : <span class="apiret">honor, experience, itemRewards, currencyRewards, hasWon</span>
: [[API C_PvP.IsInBrawl|C_PvP.IsInBrawl]]() : <span class="apiret">isInBrawl</span>
: [[API C_PvP.JoinBrawl|C_PvP.JoinBrawl]]()

==== War Games ====
[[War Game]]s were added in [[Patch 4.0.1]]
: [[API CanInitiateWarGame|CanInitiateWarGame]]()
: [[API CollapseWarGameHeader|CollapseWarGameHeader]](<span class="apiarg">index</span>)
: [[API ExpandWarGameHeader|ExpandWarGameHeader]](<span class="apiarg">index</span>)
: [[API GetNumWarGameTypes|GetNumWarGameTypes]]()
: [[API GetSelectedWarGameType|GetSelectedWarGameType]]()
: [[API GetWarGameQueueStatus|GetWarGameQueueStatus]]()
: [[API GetWarGameTypeInfo|GetWarGameTypeInfo]](<span class="apiarg">index</span>)
: [[API IsWargame|IsWargame]]()
: [[API SetSelectedWarGameType|SetSelectedWarGameType]](<span class="apiarg">index</span>)
: [[API StartSpectatorWarGame|StartSpectatorWarGame]](<span class="apiarg">target1, target2, size, area, isTournamentMode</span>)
: [[API StartWarGameByName|StartWarGameByName]](<span class="apiarg">msg</span>) - Starts a [[War Game]]. Parameters are <code>playername, area, isTournamentMode</code> but passed as a whitespace delimited string.
: [[API StartWarGame|StartWarGame]](<span class="apiarg">target, name [, isTournament]</span>)
: [[API UpdateWarGamesList|UpdateWarGamesList]]()
: [[API WarGameRespond|WarGameRespond]](<span class="apiarg">accept</span>)

==== War Mode ====
[[War Mode]] was added in [[Patch 8.0.1]]
: [[API C_PvP.CanToggleWarMode|C_PvP.CanToggleWarMode]](<span class="apiarg">toggle</span>) : <span class="apiret">canTogglePvP</span>
: [[API C_PvP.CanToggleWarModeInArea|C_PvP.CanToggleWarModeInArea]]() : <span class="apiret">canTogglePvPInArea</span>
: [[API C_PvP.GetWarModeRewardBonus|C_PvP.GetWarModeRewardBonus]]() : <span class="apiret">rewardBonus</span>
: [[API C_PvP.GetWarModeRewardBonusDefault|C_PvP.GetWarModeRewardBonusDefault]]() : <span class="apiret">defaultBonus</span>
: [[API C_PvP.IsWarModeActive|C_PvP.IsWarModeActive]]() : <span class="apiret">warModeActive</span>
: [[API C_PvP.IsWarModeDesired|C_PvP.IsWarModeDesired]]() : <span class="apiret">warModeDesired</span>
: [[API C_PvP.IsWarModeFeatureEnabled|C_PvP.IsWarModeFeatureEnabled]]() : <span class="apiret">warModeEnabled</span>
: [[API C_PvP.SetWarModeDesired|C_PvP.SetWarModeDesired]](<span class="apiarg">warModeDesired</span>)
: [[API C_PvP.ToggleWarMode|C_PvP.ToggleWarMode]]()

=== Quests ===
Relates to [[Quest]]s.
: [[API C_QuestLine.GetAvailableQuestLines|C_QuestLine.GetAvailableQuestLines]](<span class="apiarg">uiMapID</span>) : <span class="apiret">questLines</span>
: [[API C_QuestLine.GetQuestLineInfo|C_QuestLine.GetQuestLineInfo]](<span class="apiarg">questID, uiMapID</span>) : <span class="apiret">questLineInfo</span>
: [[API C_QuestLine.GetQuestLineQuests|C_QuestLine.GetQuestLineQuests]](<span class="apiarg">questLineID</span>) : <span class="apiret">questIDs</span>
: [[API C_QuestLine.IsComplete|C_QuestLine.IsComplete]](<span class="apiarg">questLineID</span>) : <span class="apiret">isComplete</span>
: [[API C_QuestLine.RequestQuestLinesForMap|C_QuestLine.RequestQuestLinesForMap]](<span class="apiarg">uiMapID</span>)
: [[API AcknowledgeAutoAcceptQuest|AcknowledgeAutoAcceptQuest]]()
: [[API AddAutoQuestPopUp|AddAutoQuestPopUp]](<span class="apiarg">QuestID, Type</span>) - Adds quest to an internal list of quests for offer/completion popup notification.
: [[API ClearAutoAcceptQuestSound|ClearAutoAcceptQuestSound]]()
: [[API CollapseQuestHeader|CollapseQuestHeader]]() - Collapses a quest header.
: [[API ConfirmAcceptQuest|ConfirmAcceptQuest]]() - Accepts an offered quest that has been started by a party member; usually escort quests. (Might only be available after QUEST_ACCEPT_CONFIRM event.)
: [[API ExpandQuestHeader|ExpandQuestHeader]]() - Expands a quest header.
: [[API GetAutoQuestPopUp|GetAutoQuestPopUp]](<span class="apiarg">Index</span>) - Retrieves quest info by index that added using [[API AddAutoQuestPopUp|AddAutoQuestPopUp]].
: [[API GetCriteriaSpell|GetCriteriaSpell]]()
: [[API GetDailyQuestsCompleted|GetDailyQuestsCompleted]]() - Returns the current number of daily quests completed today.
: [[API GetMaxRewardCurrencies|GetMaxRewardCurrencies]]()
: [[API GetNumAutoQuestPopUps|GetNumAutoQuestPopUps]]() - Retrieves number of quests added via [[API AddAutoQuestPopUp|AddAutoQuestPopUp]].
: [[API GetNumQuestCurrencies|GetNumQuestCurrencies]]()
: [[API GetNumQuestItemDrops|GetNumQuestItemDrops]]()
: [[API GetNumQuestItems|GetNumQuestItems]]() - Returns the number of items necessary to complete a particular quest.
: [[API GetNumQuestLeaderBoards|GetNumQuestLeaderBoards]](<span class="apiarg">[questIndex]</span>) - Returns the number of available quest objectives.
: [[API GetNumQuestPOIWorldEffects|GetNumQuestPOIWorldEffects]]()
: [[API GetQuestBackgroundMaterial|GetQuestBackgroundMaterial]]() - Returns the material string associated with the particular quest.
: [[API GetQuestCurrencyID|GetQuestCurrencyID]](<span class="apiarg">type, index</span>)
: [[API GetQuestCurrencyInfo|GetQuestCurrencyInfo]](<span class="apiarg">type, index</span>)
: [[API GetQuestExpansion|GetQuestExpansion]](<span class="apiarg">questID</span>)
: [[API GetQuestFactionGroup|GetQuestFactionGroup]](<span class="apiarg">questID</span>)
: [[API GetQuestLink|GetQuestLink]](<span class="apiarg">index</span>) - Returns a [[QuestLink]] for a quest.
: [[API GetQuestObjectiveInfo|GetQuestObjectiveInfo]](<span class="apiarg">questID, index, displayComplete</span>)
: [[API GetQuestPOIBlobCount|GetQuestPOIBlobCount]](<span class="apiarg">questID</span>)
: [[API GetQuestPOILeaderBoard|GetQuestPOILeaderBoard]](<span class="apiarg">index</span>)
: [[API GetQuestPOIs|GetQuestPOIs]]()
: [[API GetQuestProgressBarPercent|GetQuestProgressBarPercent]](<span class="apiarg">questID</span>)
: [[API GetQuestResetTime|GetQuestResetTime]]() - Returns number of seconds until quest reset.
: [[API GetQuestReward|GetQuestReward]](<span class="apiarg">rewardIndex</span>) - Completes the quest with the specified quest reward.
: [[API GetQuestSortIndex|GetQuestSortIndex]](<span class="apiarg">questIndex</span>)
: [[API GetQuestSpellLink|GetQuestSpellLink]](<span class="apiarg">rewardSpellIndex</span>)
: [[API GetQuestUiMapID|GetQuestUiMapID]](<span class="apiarg">questID</span>)
: [[API GetSuggestedGroupSize|GetSuggestedGroupSize]]()
: [[API HaveQuestData|HaveQuestData]](<span class="apiarg">questID</span>)
: [[API HaveQuestRewardData|HaveQuestRewardData]](<span class="apiarg">questID</span>)
: [[API IsBreadcrumbQuest|IsBreadcrumbQuest]](<span class="apiarg">questID</span>)
: [[API IsCurrentQuestFailed|IsCurrentQuestFailed]]()
: [[API IsQuestCompletable|IsQuestCompletable]]() - Returns true if a quest is possible to complete.
: [[API IsQuestIDValidSpellTarget|IsQuestIDValidSpellTarget]](<span class="apiarg">questID</span>)
: [[API IsQuestItemHidden|IsQuestItemHidden]](<span class="apiarg">index</span>)
: [[API IsQuestSequenced|IsQuestSequenced]](<span class="apiarg">questID</span>)
: [[API IsStoryQuest|IsStoryQuest]](<span class="apiarg">questID</span>)
: [[API IsTrackingHiddenQuests|IsTrackingHiddenQuests]]()
: [[API PlayAutoAcceptQuestSound|PlayAutoAcceptQuestSound]]()
: [[API QuestChooseRewardError|QuestChooseRewardError]]() - Throws an error when the quest choose reward method doesn't work.
: [[API QuestFlagsPVP|QuestFlagsPVP]]() - Determine if the quest will flag you you for PvP when accepted.
: [[API QuestGetAutoAccept|QuestGetAutoAccept]]() - Returns whether the last-offered quest was automatically accepted.
: [[API QuestGetAutoLaunched|QuestGetAutoLaunched]]()
: [[API QuestHasPOIInfo|QuestHasPOIInfo]](<span class="apiarg">questID</span>)
: [[API QuestIsDaily|QuestIsDaily]]() - Returns whether the offered quest is a daily quest.
: [[API QuestIsFromAreaTrigger|QuestIsFromAreaTrigger]]()
: [[API QuestIsWeekly|QuestIsWeekly]]() - Returns whether the offered quest is a weekly quest.
: [[API QuestMapUpdateAllQuests|QuestMapUpdateAllQuests]]()
: [[API QuestPOIGetIconInfo|QuestPOIGetIconInfo]](<span class="apiarg">questID</span>)
: [[API QuestPOIGetSecondaryLocations|QuestPOIGetSecondaryLocations]](<span class="apiarg">questID [, table]</span>)
: [[API QuestPOIUpdateIcons|QuestPOIUpdateIcons]]()
: [[API RemoveAutoQuestPopUp|RemoveAutoQuestPopUp]]()
: [[API ShowQuestComplete|ShowQuestComplete]](<span class="apiarg">index</span>)
: [[API ShowQuestOffer|ShowQuestOffer]](<span class="apiarg">index</span>)
: [[API SortQuests|SortQuests]]()
: [[API SortQuestSortTypes|SortQuestSortTypes]]()
: [[API UnitQuestTrivialLevelRangeScaling|UnitQuestTrivialLevelRangeScaling]](<span class="apiarg">unit</span>) : <span class="apiret">levelRange</span>
: <small>UI</small> [https://www.townlong-yak.com/framexml/go/PVPGetConquestLevelInfo PVPGetConquestLevelInfo]()
: <small>UI</small> [https://www.townlong-yak.com/framexml/go/QuestUtils_GetQuestName QuestUtils_GetQuestName]() - Returns the name for a quest ID.

==== Quest Log ====
: [[API C_QuestLog.AbandonQuest|C_QuestLog.AbandonQuest]]() - Abandon the specified quest.
: [[API C_QuestLog.AddQuestWatch|C_QuestLog.AddQuestWatch]](<span class="apiarg">questID [, watchType]</span>) : <span class="apiret">wasWatched</span> - Add a quest to the watch list.
: [[API C_QuestLog.AddWorldQuestWatch|C_QuestLog.AddWorldQuestWatch]](<span class="apiarg">questID [, watchType]</span>) : <span class="apiret">wasWatched</span> - Adds a world quest to the watch list.
: [[API C_QuestLog.CanAbandonQuest|C_QuestLog.CanAbandonQuest]](<span class="apiarg">questID</span>) : <span class="apiret">canAbandon</span>
: [[API C_QuestLog.GetAbandonQuest|C_QuestLog.GetAbandonQuest]]() : <span class="apiret">questID</span> - Returns the ID of the quest being abandoned.
: [[API C_QuestLog.GetAbandonQuestItems|C_QuestLog.GetAbandonQuestItems]]() : <span class="apiret">itemIDs</span>
: [[API C_QuestLog.GetActiveThreatMaps|C_QuestLog.GetActiveThreatMaps]]() : <span class="apiret">uiMapIDs</span>
: [[API C_QuestLog.GetAllCompletedQuestIDs|C_QuestLog.GetAllCompletedQuestIDs]]() : <span class="apiret">quests</span> - Returns all completed quests for a character.
: [[API C_QuestLog.GetBountiesForMapID|C_QuestLog.GetBountiesForMapID]](<span class="apiarg">uiMapID</span>) : <span class="apiret">bounties</span>
: [[API C_QuestLog.GetBountySetInfoForMapID|C_QuestLog.GetBountySetInfoForMapID]](<span class="apiarg">uiMapID</span>) : <span class="apiret">displayLocation, lockQuestID, bountySetID</span>
: [[API C_QuestLog.GetDistanceSqToQuest|C_QuestLog.GetDistanceSqToQuest]](<span class="apiarg">questID</span>) : <span class="apiret">distanceSq, onContinent</span>
: [[API C_QuestLog.GetInfo|C_QuestLog.GetInfo]](<span class="apiarg">questLogIndex</span>) : <span class="apiret">info</span> - Returns information about a quest in the player's quest log.
: [[API C_QuestLog.GetLogIndexForQuestID|C_QuestLog.GetLogIndexForQuestID]](<span class="apiarg">questID</span>) : <span class="apiret">questLogIndex</span> - Returns the index of the specified questID in the quest log.
: [[API C_QuestLog.GetMapForQuestPOIs|C_QuestLog.GetMapForQuestPOIs]]() : <span class="apiret">uiMapID</span>
: [[API C_QuestLog.GetMaxNumQuests|C_QuestLog.GetMaxNumQuests]]() : <span class="apiret">maxNumQuests</span> - This is the maximum number of quests a player can be on, including hidden quests, world quests, emissaries etc
: [[API C_QuestLog.GetMaxNumQuestsCanAccept|C_QuestLog.GetMaxNumQuestsCanAccept]]() : <span class="apiret">maxNumQuestsCanAccept</span> - This is the maximum number of standard quests a player can accept. These are quests that are normally visible in the quest log.
: [[API C_QuestLog.GetNumQuestLogEntries|C_QuestLog.GetNumQuestLogEntries]]() : <span class="apiret">numShownEntries, numQuests</span> - Returns the number of entries in the quest log.
: [[API C_QuestLog.GetNumQuestObjectives|C_QuestLog.GetNumQuestObjectives]](<span class="apiarg">questID</span>) : <span class="apiret">leaderboardCount</span>
: [[API C_QuestLog.GetNumQuestWatches|C_QuestLog.GetNumQuestWatches]]() : <span class="apiret">numQuestWatches</span> - Returns the number of quest watches active.
: [[API C_QuestLog.GetNumWorldQuestWatches|C_QuestLog.GetNumWorldQuestWatches]]() : <span class="apiret">numQuestWatches</span>
: [[API C_QuestLog.GetQuestAdditionalHighlights|C_QuestLog.GetQuestAdditionalHighlights]](<span class="apiarg">questID</span>) : <span class="apiret">uiMapID, worldQuests, worldQuestsElite, dungeons, treasures</span>
: [[API C_QuestLog.GetQuestDetailsTheme|C_QuestLog.GetQuestDetailsTheme]](<span class="apiarg">questID</span>) : <span class="apiret">theme</span>
: [[API C_QuestLog.GetQuestDifficultyLevel|C_QuestLog.GetQuestDifficultyLevel]](<span class="apiarg">questID</span>) : <span class="apiret">level</span>
: [[API C_QuestLog.GetQuestIDForLogIndex|C_QuestLog.GetQuestIDForLogIndex]](<span class="apiarg">questLogIndex</span>) : <span class="apiret">questID</span>
: [[API C_QuestLog.GetQuestIDForQuestWatchIndex|C_QuestLog.GetQuestIDForQuestWatchIndex]](<span class="apiarg">questWatchIndex</span>) : <span class="apiret">questID</span>
: [[API C_QuestLog.GetQuestIDForWorldQuestWatchIndex|C_QuestLog.GetQuestIDForWorldQuestWatchIndex]](<span class="apiarg">questWatchIndex</span>) : <span class="apiret">questID</span>
: [[API C_QuestLog.GetQuestLogPortraitGiver|C_QuestLog.GetQuestLogPortraitGiver]](<span class="apiarg">[questLogIndex]</span>) : <span class="apiret">portraitGiver, portraitGiverText, portraitGiverName, portraitGiverMount, ...</span>
: [[API C_QuestLog.GetQuestObjectives|C_QuestLog.GetQuestObjectives]](<span class="apiarg">questID</span>) : <span class="apiret">objectives</span> - Returns information about objective status for a quest.
: [[API C_QuestLog.GetQuestsOnMap|C_QuestLog.GetQuestsOnMap]](<span class="apiarg">uiMapID</span>) : <span class="apiret">quests</span>
: [[API C_QuestLog.GetQuestTagInfo|C_QuestLog.GetQuestTagInfo]](<span class="apiarg">questID</span>) : <span class="apiret">info</span> - Returns tag information about the specified quest.
: [[API C_QuestLog.GetQuestType|C_QuestLog.GetQuestType]](<span class="apiarg">questID</span>) : <span class="apiret">questType</span>
: [[API C_QuestLog.GetQuestWatchType|C_QuestLog.GetQuestWatchType]](<span class="apiarg">questID</span>) : <span class="apiret">watchType</span>
: [[API C_QuestLog.GetRequiredMoney|C_QuestLog.GetRequiredMoney]](<span class="apiarg">[questID]</span>) : <span class="apiret">requiredMoney</span> - Returns amount of money required for quest completion from quest log.
: [[API C_QuestLog.GetSelectedQuest|C_QuestLog.GetSelectedQuest]]() : <span class="apiret">questID</span> - Returns a number associated with the QuestLogSelection index.
: [[API C_QuestLog.GetSuggestedGroupSize|C_QuestLog.GetSuggestedGroupSize]](<span class="apiarg">questID</span>) : <span class="apiret">suggestedGroupSize</span> - Returns suggested number of players for quest selected currently in log or 0 if there's no suggestion.
: [[API C_QuestLog.GetTimeAllowed|C_QuestLog.GetTimeAllowed]](<span class="apiarg">questID</span>) : <span class="apiret">totalTime, elapsedTime</span> - Returns the time available to complete a quest.
: [[API C_QuestLog.GetTitleForLogIndex|C_QuestLog.GetTitleForLogIndex]](<span class="apiarg">questLogIndex</span>) : <span class="apiret">title</span>
: [[API C_QuestLog.GetTitleForQuestID|C_QuestLog.GetTitleForQuestID]](<span class="apiarg">questID</span>) : <span class="apiret">title</span> - Returns the name for a Quest ID.
: [[API C_QuestLog.GetZoneStoryInfo|C_QuestLog.GetZoneStoryInfo]](<span class="apiarg">uiMapID</span>) : <span class="apiret">achievementID, storyMapID</span>
: [[API C_QuestLog.HasActiveThreats|C_QuestLog.HasActiveThreats]]() : <span class="apiret">hasActiveThreats</span>
: [[API C_QuestLog.IsAccountQuest|C_QuestLog.IsAccountQuest]](<span class="apiarg">questID</span>) : <span class="apiret">isAccountQuest</span>
: [[API C_QuestLog.IsComplete|C_QuestLog.IsComplete]](<span class="apiarg">questID</span>) : <span class="apiret">isComplete</span>
: [[API C_QuestLog.IsFailed|C_QuestLog.IsFailed]](<span class="apiarg">questID</span>) : <span class="apiret">isFailed</span>
: [[API C_QuestLog.IsLegendaryQuest|C_QuestLog.IsLegendaryQuest]](<span class="apiarg">questID</span>) : <span class="apiret">isLegendaryQuest</span>
: [[API C_QuestLog.IsOnMap|C_QuestLog.IsOnMap]](<span class="apiarg">questID</span>) : <span class="apiret">onMap, hasLocalPOI</span>
: [[API C_QuestLog.IsOnQuest|C_QuestLog.IsOnQuest]](<span class="apiarg">questID</span>) : <span class="apiret">isOnQuest</span>
: [[API C_QuestLog.IsPushableQuest|C_QuestLog.IsPushableQuest]](<span class="apiarg">questID</span>) : <span class="apiret">isPushable</span> - Returns true if the currently loaded quest in the quest window can be shared.
: [[API C_QuestLog.IsQuestBounty|C_QuestLog.IsQuestBounty]](<span class="apiarg">questID</span>) : <span class="apiret">isBounty</span>
: [[API C_QuestLog.IsQuestCalling|C_QuestLog.IsQuestCalling]](<span class="apiarg">questID</span>) : <span class="apiret">isCalling</span>
: [[API C_QuestLog.IsQuestCriteriaForBounty|C_QuestLog.IsQuestCriteriaForBounty]](<span class="apiarg">questID, bountyQuestID</span>) : <span class="apiret">isCriteriaForBounty</span>
: [[API C_QuestLog.IsQuestFlaggedCompleted|C_QuestLog.IsQuestFlaggedCompleted]](<span class="apiarg">questID</span>) : <span class="apiret">isCompleted</span> - Returns if a quest has been completed.
: [[API C_QuestLog.IsQuestInvasion|C_QuestLog.IsQuestInvasion]](<span class="apiarg">questID</span>) : <span class="apiret">isInvasion</span>
: [[API C_QuestLog.IsQuestTrivial|C_QuestLog.IsQuestTrivial]](<span class="apiarg">questID</span>) : <span class="apiret">isTrivial</span>
: [[API C_QuestLog.IsRepeatableQuest|C_QuestLog.IsRepeatableQuest]](<span class="apiarg">questID</span>) : <span class="apiret">isRepeatable</span>
: [[API C_QuestLog.IsThreatQuest|C_QuestLog.IsThreatQuest]](<span class="apiarg">questID</span>) : <span class="apiret">isThreat</span>
: [[API C_QuestLog.IsUnitOnQuest|C_QuestLog.IsUnitOnQuest]](<span class="apiarg">unit, questID</span>) : <span class="apiret">isOnQuest</span> - Determine if the specified unit is on the given quest.
: [[API C_QuestLog.QuestCanHaveWarModeBonus|C_QuestLog.QuestCanHaveWarModeBonus]](<span class="apiarg">questID</span>) : <span class="apiret">hasBonus</span>
: [[API C_QuestLog.QuestHasWarModeBonus|C_QuestLog.QuestHasWarModeBonus]](<span class="apiarg">questID</span>) : <span class="apiret">hasBonus</span>
: [[API C_QuestLog.ReadyForTurnIn|C_QuestLog.ReadyForTurnIn]](<span class="apiarg">questID</span>) : <span class="apiret">readyForTurnIn</span>
: [[API C_QuestLog.RemoveQuestWatch|C_QuestLog.RemoveQuestWatch]](<span class="apiarg">questID</span>) : <span class="apiret">wasRemoved</span> - Removes a quest watch.
: [[API C_QuestLog.RemoveWorldQuestWatch|C_QuestLog.RemoveWorldQuestWatch]](<span class="apiarg">questID</span>) : <span class="apiret">wasRemoved</span> - Removes a world quest from the watch.
: [[API C_QuestLog.RequestLoadQuestByID|C_QuestLog.RequestLoadQuestByID]](<span class="apiarg">questID</span>)
: [[API C_QuestLog.SetAbandonQuest|C_QuestLog.SetAbandonQuest]]() - Called before [[API AbandonQuest|AbandonQuest]].
: [[API C_QuestLog.SetMapForQuestPOIs|C_QuestLog.SetMapForQuestPOIs]](<span class="apiarg">uiMapID</span>)
: [[API C_QuestLog.SetSelectedQuest|C_QuestLog.SetSelectedQuest]](<span class="apiarg">questID</span>) - Sets the selected quest, required for most GetQuest functions.
: [[API C_QuestLog.ShouldDisplayTimeRemaining|C_QuestLog.ShouldDisplayTimeRemaining]](<span class="apiarg">questID</span>) : <span class="apiret">displayTimeRemaining</span>
: [[API C_QuestLog.ShouldShowQuestRewards|C_QuestLog.ShouldShowQuestRewards]](<span class="apiarg">questID</span>) : <span class="apiret">shouldShow</span>
: [[API C_QuestLog.SortQuestWatches|C_QuestLog.SortQuestWatches]]() - Sorts watched quests by proximity to the player character.
: [[API C_PlayerInfo.GetContentDifficultyQuestForPlayer|C_PlayerInfo.GetContentDifficultyQuestForPlayer]](<span class="apiarg">questID</span>) : <span class="apiret">difficulty</span>
: [[API GetNumQuestLogChoices|GetNumQuestLogChoices]]() - Returns the number of options someone has when getting a quest item.
: [[API GetNumQuestLogRewardCurrencies|GetNumQuestLogRewardCurrencies]]()
: [[API GetNumQuestLogRewardFactions|GetNumQuestLogRewardFactions]]()
: [[API GetNumQuestLogRewards|GetNumQuestLogRewards]]() - Returns the count of the rewards for a particular quest. (7.0.3)
: [[API GetNumQuestLogRewardSpells|GetNumQuestLogRewardSpells]]() - Returns the number of spell rewards for the current selected quest.
: [[API GetNumTreasurePickerItems|GetNumTreasurePickerItems]]()
: [[API GetQuestLogChoiceInfoLootType|GetQuestLogChoiceInfoLootType]](<span class="apiarg">index</span>)
: [[API GetQuestLogCompletionText|GetQuestLogCompletionText]]()
: [[API GetQuestLogCriteriaSpell|GetQuestLogCriteriaSpell]]()
: [[API GetQuestLogItemDrop|GetQuestLogItemDrop]](<span class="apiarg">index</span>)
: [[API GetQuestLogItemLink|GetQuestLogItemLink]](<span class="apiarg">type, index</span>) - Returns item link for selected quest reward/choice/required item from quest log.
: [[API GetQuestLogLeaderBoard|GetQuestLogLeaderBoard]](<span class="apiarg">ldrIndex [, questIndex]</span>) - Gets information about the objectives for a quest.
: [[API GetQuestLogPortraitTurnIn|GetQuestLogPortraitTurnIn]]()
: [[API GetQuestLogQuestText|GetQuestLogQuestText]]() - Returns the description and objectives required for the specified quest.
: [[API GetQuestLogQuestType|GetQuestLogQuestType]]()
: [[API GetQuestLogRewardArtifactXP|GetQuestLogRewardArtifactXP]]()
: [[API GetQuestLogRewardCurrencyInfo|GetQuestLogRewardCurrencyInfo]](<span class="apiarg">index [, questID]</span>)
: [[API GetQuestLogRewardFactionInfo|GetQuestLogRewardFactionInfo]](<span class="apiarg">questIndex</span>)
: [[API GetQuestLogRewardHonor|GetQuestLogRewardHonor]]()
: [[API GetQuestLogRewardInfo|GetQuestLogRewardInfo]]() - Returns a pile of reward item info from the quest log.
: [[API GetQuestLogRewardMoney|GetQuestLogRewardMoney]]() - Returns a number representing the amount of copper returned by a particular quest.
: [[API GetQuestLogRewardSkillPoints|GetQuestLogRewardSkillPoints]]()
: [[API GetQuestLogRewardSpell|GetQuestLogRewardSpell]]() - Returns name and texture of spell awarded for quest completion from quest log.
: [[API GetQuestLogRewardTitle|GetQuestLogRewardTitle]]()
: [[API GetQuestLogRewardXP|GetQuestLogRewardXP]]()
: [[API GetQuestLogSpecialItemCooldown|GetQuestLogSpecialItemCooldown]](<span class="apiarg">index</span>)
: [[API GetQuestLogSpecialItemInfo|GetQuestLogSpecialItemInfo]](<span class="apiarg">index</span>)
: [[API GetQuestLogSpellLink|GetQuestLogSpellLink]](<span class="apiarg">rewardSpellIndex</span>)
: [[API GetQuestLogTimeLeft|GetQuestLogTimeLeft]]() - Returns the seconds remaining on the current quest timer.
: [[API GetTreasurePickerItemInfo|GetTreasurePickerItemInfo]](<span class="apiarg">index [, questID]</span>)
: [[API IsQuestLogSpecialItemInRange|IsQuestLogSpecialItemInRange]](<span class="apiarg">index [, target]</span>)
: [[API ProcessQuestLogRewardFactions|ProcessQuestLogRewardFactions]]()
: [[API QuestLogPushQuest|QuestLogPushQuest]]() - Initiates the sharing of the currently viewed quest in the quest log.
: [[API QuestLogRewardHasTreasurePicker|QuestLogRewardHasTreasurePicker]]()
: [[API QuestLogShouldShowPortrait|QuestLogShouldShowPortrait]]()
: [[API UseQuestLogSpecialItem|UseQuestLogSpecialItem]](<span class="apiarg">index</span>)

==== Gossip ====
Gossip refers to interaction with an NPC.
: [[API C_GossipInfo.CloseGossip|C_GossipInfo.CloseGossip]]() - Dismiss the gossip window.
: [[API C_GossipInfo.ForceGossip|C_GossipInfo.ForceGossip]]() : <span class="apiret">forceGossip</span> - Returns whether the gossip text ''must'' be displayed.
: [[API C_GossipInfo.GetActiveQuests|C_GossipInfo.GetActiveQuests]]() : <span class="apiret">info</span> - Retrieves a list of quests which can be turned in on the NPC you are talking to.
: [[API C_GossipInfo.GetAvailableQuests|C_GossipInfo.GetAvailableQuests]]() : <span class="apiret">info</span> - Retrieves a list of the available quests on the NPC you are talking to.
: [[API C_GossipInfo.GetCustomGossipDescriptionString|C_GossipInfo.GetCustomGossipDescriptionString]]() : <span class="apiret">description</span>
: [[API C_GossipInfo.GetNumActiveQuests|C_GossipInfo.GetNumActiveQuests]]() : <span class="apiret">numQuests</span> - Returns the number of active quests that you should eventually turn in to this NPC.
: [[API C_GossipInfo.GetNumAvailableQuests|C_GossipInfo.GetNumAvailableQuests]]() : <span class="apiret">numQuests</span> - Returns the number of quests (that you are not already on) offered by this NPC.
: [[API C_GossipInfo.GetNumOptions|C_GossipInfo.GetNumOptions]]() : <span class="apiret">numOptions</span> - Returns the number of conversation options available with this NPC.
: [[API C_GossipInfo.GetOptions|C_GossipInfo.GetOptions]]() : <span class="apiret">info</span> - Retrieves a list of the available gossip items on the NPC you are talking to.
: [[API C_GossipInfo.GetPoiForUiMapID|C_GossipInfo.GetPoiForUiMapID]](<span class="apiarg">uiMapID</span>) : <span class="apiret">gossipPoiID</span> - Returns gossip poi for a map.
: [[API C_GossipInfo.GetPoiInfo|C_GossipInfo.GetPoiInfo]](<span class="apiarg">uiMapID, gossipPoiID</span>) : <span class="apiret">gossipPoiInfo</span> - Returns gossip poi info.
: [[API C_GossipInfo.GetText|C_GossipInfo.GetText]]() : <span class="apiret">gossipText</span> - Retrieves the gossip text.
: [[API C_GossipInfo.RefreshOptions|C_GossipInfo.RefreshOptions]]()
: [[API C_GossipInfo.SelectActiveQuest|C_GossipInfo.SelectActiveQuest]](<span class="apiarg">index</span>) - Selects an active quest.
: [[API C_GossipInfo.SelectAvailableQuest|C_GossipInfo.SelectAvailableQuest]](<span class="apiarg">index</span>) - Selects an available quest.
: [[API C_GossipInfo.SelectOption|C_GossipInfo.SelectOption]](<span class="apiarg">index [, text, confirmed]</span>) - Selects a gossip (conversation) option.
: [[API AcceptQuest|AcceptQuest]]() - Accept the specified quest.
: [[API CloseQuest|CloseQuest]]() - Closes the shown quest.
: [[API CompleteQuest|CompleteQuest]]() - Complete the specified quest.
: [[API DeclineQuest|DeclineQuest]]() - Declines the currently offered quest.
: [[API GetActiveLevel|GetActiveLevel]](<span class="apiarg">index</span>) - Gets the level of an active quest (only available after QUEST_GREETING event).
: [[API GetActiveQuestID|GetActiveQuestID]](<span class="apiarg">index</span>)
: [[API GetActiveTitle|GetActiveTitle]](<span class="apiarg">index</span>) - Gets the title of an active quest (only available after QUEST_GREETING event).
: [[API GetAvailableLevel|GetAvailableLevel]](<span class="apiarg">index</span>) - Gets the level of an available quest (only available after QUEST_GREETING event).
: [[API GetAvailableQuestInfo|GetAvailableQuestInfo]](<span class="apiarg">index</span>) - Returns metadata (quest type) about an available quest.
: [[API GetAvailableTitle|GetAvailableTitle]](<span class="apiarg">index</span>) - Gets the title of an available quest (only available after QUEST_GREETING event).
: [[API GetGreetingText|GetGreetingText]]()
: [[API GetNumActiveQuests|GetNumActiveQuests]]() - Gets the number of currently active quests from this NPC (only available after QUEST_GREETING event).
: [[API GetNumAvailableQuests|GetNumAvailableQuests]]() - Gets the number of currently available quests from this NPC (only available after QUEST_GREETING event).
: [[API GetNumQuestRewards|GetNumQuestRewards]]() - Returns number of reward items (those that you always get) for quest currently in gossip window.
: [[API GetNumRewardCurrencies|GetNumRewardCurrencies]]()
: [[API GetNumRewardSpells|GetNumRewardSpells]]()
: [[API GetObjectiveText|GetObjectiveText]]() - Gets the objective of the current quest.
: [[API GetProgressText|GetProgressText]]() - Returns quest progress text, displayed by the NPC before the player pressed "Continue".
: [[API GetQuestID|GetQuestID]]() - Returns the ID of the quest most recently displayed in a gossip frame, even after that frame is closed.
: [[API GetQuestItemInfo|GetQuestItemInfo]]() - Returns basic information about the reward/choice/required item for quest currently in gossip window.
: [[API GetQuestItemInfoLootType|GetQuestItemInfoLootType]](<span class="apiarg">type, index</span>)
: [[API GetQuestItemLink|GetQuestItemLink]](<span class="apiarg">type, index</span>) - Returns an [[itemLink]] for a selected quest reward/choice/required item for quest currently in gossip window.
: [[API GetQuestMoneyToGet|GetQuestMoneyToGet]]() - Returns amount of money required for quest currently displayed in gossip.
: [[API GetQuestPortraitGiver|GetQuestPortraitGiver]]()
: [[API GetQuestPortraitTurnIn|GetQuestPortraitTurnIn]]()
: [[API GetQuestText|GetQuestText]]() - Gets the description of the current quest.
: [[API GetRewardArtifactXP|GetRewardArtifactXP]]()
: [[API GetRewardHonor|GetRewardHonor]]()
: [[API GetRewardMoney|GetRewardMoney]]() - Returns a amount of copper rewarded for completion of quest displayed in gossip.
: [[API GetRewardNumSkillUps|GetRewardNumSkillUps]]()
: [[API GetRewardSkillLineID|GetRewardSkillLineID]]()
: [[API GetRewardSkillPoints|GetRewardSkillPoints]]()
: [[API GetRewardSpell|GetRewardSpell]]() - Returns name and texture of spell awarded for quest completion for quest currently in gossip window.
: [[API GetRewardText|GetRewardText]]() - Returns quest reward text, displayed by the NPC before the player hits "Complete Quest".
: [[API GetRewardTitle|GetRewardTitle]]() - Returns the title awarded by the currently displayed quest.
: [[API GetRewardXP|GetRewardXP]]() - Returns the amount of experience awarded by the currently displayed text.
: [[API GetTitleText|GetTitleText]]() - Retrieves the title of the quest while talking to the NPC about it.
: [[API IsActiveQuestLegendary|IsActiveQuestLegendary]](<span class="apiarg">index</span>)
: [[API IsActiveQuestTrivial|IsActiveQuestTrivial]](<span class="apiarg">index</span>)
: [[API IsAvailableQuestTrivial|IsAvailableQuestTrivial]](<span class="apiarg">index</span>)
: [[API SelectActiveQuest|SelectActiveQuest]]() - Selects an active quest from the NPC (only available after QUEST_GREETING event).
: [[API SelectAvailableQuest|SelectAvailableQuest]]() - Selects an available quest from the NPC (only available after QUEST_GREETING event).

==== Quest Choices ====
Relates to multiple quest choices, for instance at the [[Hero's Call Board]] and [[Warchief's Command Board]].
: [[API C_PlayerChoice.GetCurrentPlayerChoiceInfo|C_PlayerChoice.GetCurrentPlayerChoiceInfo]]() : <span class="apiret">choiceInfo</span>
: [[API C_PlayerChoice.GetNumRerolls|C_PlayerChoice.GetNumRerolls]]() : <span class="apiret">numRerolls</span>
: [[API C_PlayerChoice.IsWaitingForPlayerChoiceResponse|C_PlayerChoice.IsWaitingForPlayerChoiceResponse]]() : <span class="apiret">isWaitingForResponse</span>
: [[API C_PlayerChoice.OnUIClosed|C_PlayerChoice.OnUIClosed]]()
: [[API C_PlayerChoice.RequestRerollPlayerChoice|C_PlayerChoice.RequestRerollPlayerChoice]]()
: [[API C_PlayerChoice.SendPlayerChoiceResponse|C_PlayerChoice.SendPlayerChoiceResponse]](<span class="apiarg">responseID</span>)
: [[API C_PlayerInfo.GetAlternateFormInfo|C_PlayerInfo.GetAlternateFormInfo]]() : <span class="apiret">hasAlternateForm, inAlternateForm</span>
: [[API C_PlayerInfo.GetInstancesUnlockedAtLevel|C_PlayerInfo.GetInstancesUnlockedAtLevel]](<span class="apiarg">level, isRaid</span>) : <span class="apiret">dungeonID</span>
: [[API C_PlayerInfo.GetPlayerMythicPlusRatingSummary|C_PlayerInfo.GetPlayerMythicPlusRatingSummary]](<span class="apiarg">playerToken</span>) : <span class="apiret">ratingSummary</span>
: [[API GetNumQuestChoices|GetNumQuestChoices]]() - Returns the number of rewards available for choice for quest currently in gossip window.
: [[API GetQuestLogChoiceInfo|GetQuestLogChoiceInfo]]() - Returns a bunch of data about a quest reward choice from the quest log.
: <small>DEPRECATED</small> [[API ClosePlayerChoice|ClosePlayerChoice]]()
: <small>DEPRECATED</small> [[API C_PlayerChoice.GetPlayerChoiceInfo|C_PlayerChoice.GetPlayerChoiceInfo]]() : <span class="apiret">choiceInfo</span> - Returns information about a quest choice fork.
: <small>DEPRECATED</small> [[API C_PlayerChoice.GetPlayerChoiceOptionInfo|C_PlayerChoice.GetPlayerChoiceOptionInfo]](<span class="apiarg">optionIndex</span>) : <span class="apiret">info</span> - Returns information about an offered quest choice option.
: <small>DEPRECATED</small> [[API C_PlayerChoice.GetPlayerChoiceRewardInfo|C_PlayerChoice.GetPlayerChoiceRewardInfo]](<span class="apiarg">rewardIndex</span>) : <span class="apiret">rewardInfo</span> - Returns reward info on a quest option.

==== World Quests ====
Task Quests refer to [[World Quest]]s or [[Quest#Bonus_Objectives|Bonus Objective]] quests.
: [[API C_TaskQuest.DoesMapShowTaskQuestObjectives|C_TaskQuest.DoesMapShowTaskQuestObjectives]](<span class="apiarg">uiMapID</span>) : <span class="apiret">showsTaskQuestObjectives</span>
: [[API C_TaskQuest.GetQuestInfoByQuestID|C_TaskQuest.GetQuestInfoByQuestID]](<span class="apiarg">questID</span>) : <span class="apiret">questTitle, factionID, capped, displayAsObjective</span>
: [[API C_TaskQuest.GetQuestLocation|C_TaskQuest.GetQuestLocation]](<span class="apiarg">questID, uiMapID</span>) : <span class="apiret">locationX, locationY</span>
: [[API C_TaskQuest.GetQuestProgressBarInfo|C_TaskQuest.GetQuestProgressBarInfo]](<span class="apiarg">questID</span>) : <span class="apiret">progress</span>
: [[API C_TaskQuest.GetQuestTimeLeftMinutes|C_TaskQuest.GetQuestTimeLeftMinutes]](<span class="apiarg">questID</span>) : <span class="apiret">minutesLeft</span>
: [[API C_TaskQuest.GetQuestTimeLeftSeconds|C_TaskQuest.GetQuestTimeLeftSeconds]](<span class="apiarg">questID</span>) : <span class="apiret">secondsLeft</span>
: [[API C_TaskQuest.GetQuestZoneID|C_TaskQuest.GetQuestZoneID]](<span class="apiarg">questID</span>) : <span class="apiret">uiMapID</span>
: [[API C_TaskQuest.GetQuestsForPlayerByMapID|C_TaskQuest.GetQuestsForPlayerByMapID]](<span class="apiarg">uiMapID</span>) : <span class="apiret">taskPOIs</span>
: [[API C_TaskQuest.GetThreatQuests|C_TaskQuest.GetThreatQuests]]() : <span class="apiret">quests</span>
: [[API C_TaskQuest.IsActive|C_TaskQuest.IsActive]](<span class="apiarg">questID</span>) : <span class="apiret">active</span>
: [[API C_TaskQuest.RequestPreloadRewardData|C_TaskQuest.RequestPreloadRewardData]](<span class="apiarg">questID</span>)
: [[API C_QuestLog.IsQuestTask|C_QuestLog.IsQuestTask]](<span class="apiarg">questID</span>) : <span class="apiret">isTask</span>
: [[API C_QuestLog.IsWorldQuest|C_QuestLog.IsWorldQuest]](<span class="apiarg">questID</span>) : <span class="apiret">isWorldQuest</span>
: [[API GetNumQuestLogTasks|GetNumQuestLogTasks]]()
: [[API GetTaskInfo|GetTaskInfo]](<span class="apiarg">questID</span>)
: [[API GetTaskPOIs|GetTaskPOIs]]()
: [[API GetTasksTable|GetTasksTable]]()

==== Adventure Map ====
The [[Scouting Map]] was added in [[Patch 7.0.3]]
: [[API C_AdventureMap.Close|C_AdventureMap.Close]]()
: [[API C_AdventureMap.GetMapID|C_AdventureMap.GetMapID]]()
: [[API C_AdventureMap.GetMapInsetDetailTileInfo|C_AdventureMap.GetMapInsetDetailTileInfo]](<span class="apiarg">insetIndex, tileIndex</span>)
: [[API C_AdventureMap.GetMapInsetInfo|C_AdventureMap.GetMapInsetInfo]](<span class="apiarg">insetIndex</span>)
: [[API C_AdventureMap.GetNumMapInsets|C_AdventureMap.GetNumMapInsets]]()
: [[API C_AdventureMap.GetNumQuestOffers|C_AdventureMap.GetNumQuestOffers]]()
: [[API C_AdventureMap.GetNumZoneChoices|C_AdventureMap.GetNumZoneChoices]]()
: [[API C_AdventureMap.GetQuestInfo|C_AdventureMap.GetQuestInfo]](<span class="apiarg">questID</span>)
: [[API C_AdventureMap.GetQuestOfferInfo|C_AdventureMap.GetQuestOfferInfo]](<span class="apiarg">offerIndex</span>)
: [[API C_AdventureMap.GetZoneChoiceInfo|C_AdventureMap.GetZoneChoiceInfo]](<span class="apiarg">choiceIndex</span>)
: [[API C_AdventureMap.StartQuest|C_AdventureMap.StartQuest]](<span class="apiarg">questID</span>)
: [[API QuestIsFromAdventureMap|QuestIsFromAdventureMap]]()

==== War Campaigns ====
[[War Campaign]]s were added in [[Patch 8.0.1]]
: [[API C_CampaignInfo.GetAvailableCampaigns|C_CampaignInfo.GetAvailableCampaigns]]() : <span class="apiret">campaignIDs</span>
: [[API C_CampaignInfo.GetCampaignChapterInfo|C_CampaignInfo.GetCampaignChapterInfo]](<span class="apiarg">campaignChapterID</span>) : <span class="apiret">campaignChapterInfo</span>
: [[API C_CampaignInfo.GetCampaignID|C_CampaignInfo.GetCampaignID]](<span class="apiarg">questID</span>) : <span class="apiret">campaignID</span>
: [[API C_CampaignInfo.GetCampaignInfo|C_CampaignInfo.GetCampaignInfo]](<span class="apiarg">campaignID</span>) : <span class="apiret">campaignInfo</span>
: [[API C_CampaignInfo.GetChapterIDs|C_CampaignInfo.GetChapterIDs]](<span class="apiarg">campaignID</span>) : <span class="apiret">chapterIDs</span>
: [[API C_CampaignInfo.GetCurrentChapterID|C_CampaignInfo.GetCurrentChapterID]](<span class="apiarg">campaignID</span>) : <span class="apiret">currentChapterID</span>
: [[API C_CampaignInfo.GetFailureReason|C_CampaignInfo.GetFailureReason]](<span class="apiarg">campaignID</span>) : <span class="apiret">failureReason</span>
: [[API C_CampaignInfo.GetState|C_CampaignInfo.GetState]](<span class="apiarg">campaignID</span>) : <span class="apiret">state</span>
: [[API C_CampaignInfo.IsCampaignQuest|C_CampaignInfo.IsCampaignQuest]](<span class="apiarg">questID</span>) : <span class="apiret">isCampaignQuest</span>
: [[API C_CampaignInfo.UsesNormalQuestIcons|C_CampaignInfo.UsesNormalQuestIcons]](<span class="apiarg">campaignID</span>) : <span class="apiret">useNormalQuestIcons</span>
: [[API C_LoreText.RequestLoreTextForCampaignID|C_LoreText.RequestLoreTextForCampaignID]](<span class="apiarg">campaignID</span>)

==== Talking Head ====
These functions were added in [[Patch 7.0.3]]
: [[API C_TalkingHead.GetConversationsDeferred|C_TalkingHead.GetConversationsDeferred]]()
: [[API C_TalkingHead.GetCurrentLineAnimationInfo|C_TalkingHead.GetCurrentLineAnimationInfo]]()
: [[API C_TalkingHead.GetCurrentLineInfo|C_TalkingHead.GetCurrentLineInfo]]()
: [[API C_TalkingHead.IgnoreCurrentTalkingHead|C_TalkingHead.IgnoreCurrentTalkingHead]]()
: [[API C_TalkingHead.IsCurrentTalkingHeadIgnored|C_TalkingHead.IsCurrentTalkingHeadIgnored]]()
: [[API C_TalkingHead.SetConversationsDeferred|C_TalkingHead.SetConversationsDeferred]](<span class="apiarg">deferred</span>)

=== Races ===
: [[API C_CreatureInfo.GetFactionInfo|C_CreatureInfo.GetFactionInfo]](<span class="apiarg">raceID</span>) : <span class="apiret">factionInfo</span> - Returns the faction name for a race.
: [[API C_CreatureInfo.GetRaceInfo|C_CreatureInfo.GetRaceInfo]](<span class="apiarg">raceID</span>) : <span class="apiret">raceInfo</span> - Returns both localized and locale-independent race names.
: [[API NeutralPlayerSelectFaction|NeutralPlayerSelectFaction]]() - Allows Pandaren to choose a faction.
[[Allied Races]] were added in [[Patch 7.3.5]]
: [[API C_AlliedRaces.ClearAlliedRaceDetailsGiver|C_AlliedRaces.ClearAlliedRaceDetailsGiver]]()
: [[API C_AlliedRaces.GetAllRacialAbilitiesFromID|C_AlliedRaces.GetAllRacialAbilitiesFromID]](<span class="apiarg">raceID</span>) : <span class="apiret">allDisplayInfo</span> - Returns the racial spells from an allied race.
: [[API C_AlliedRaces.GetRaceInfoByID|C_AlliedRaces.GetRaceInfoByID]](<span class="apiarg">raceID</span>) : <span class="apiret">info</span> - Returns allied race info.
: [[API UnitAlliedRaceInfo|UnitAlliedRaceInfo]](<span class="apiarg">unit</span>) : <span class="apiret">isAlliedRace, hasHeritageArmorUnlocked</span>

=== Realms ===
Relates to [[Realm]]s.
: [[API GetAutoCompleteRealms|GetAutoCompleteRealms]]()
: [[API GetCurrentRegion|GetCurrentRegion]]()
: [[API GetCurrentRegionName|GetCurrentRegionName]]() : <span class="apiret">regionName</span>
: [[API GetNormalizedRealmName|GetNormalizedRealmName]]() - Returns the name of the server, but omitting spaces and hyphens.
: [[API GetRealmID|GetRealmID]]()
: [[API GetRealmName|GetRealmName]]() - Returns the name of the server a user is logged in to.
: [[API IsOnTournamentRealm|IsOnTournamentRealm]]() - Returns true if currently on a tournament realm, nil otherwise.

=== Reputation ===
Relates to [[Reputation]].
: [[API C_Reputation.GetFactionParagonInfo|C_Reputation.GetFactionParagonInfo]](<span class="apiarg">factionID</span>) : <span class="apiret">currentValue, threshold, rewardQuestID, hasRewardPending, ...</span> - Gets Paragon information.
: [[API C_Reputation.IsFactionParagon|C_Reputation.IsFactionParagon]](<span class="apiarg">factionID</span>) : <span class="apiret">hasParagon</span> - Returns true/false if a factionID is a Paragon.
: [[API C_Reputation.RequestFactionParagonPreloadRewardData|C_Reputation.RequestFactionParagonPreloadRewardData]](<span class="apiarg">factionID</span>) - Queries the server to pre-load Paragon reward data.
: [[API CollapseFactionHeader|CollapseFactionHeader]](<span class="apiarg">index</span>) - Collapse a faction header row.
: [[API CollapseAllFactionHeaders|CollapseAllFactionHeaders]]() - Collapse all faction header rows.
: [[API ExpandFactionHeader|ExpandFactionHeader]](<span class="apiarg">index</span>) - Expand a faction header row.
: [[API ExpandAllFactionHeaders|ExpandAllFactionHeaders]]() - Expand all faction header rows.
: [[API FactionToggleAtWar|FactionToggleAtWar]](<span class="apiarg">index</span>) - Toggle the At War flag for a faction.
: [[API GetFactionInfo|GetFactionInfo]](<span class="apiarg">index</span>) - Gets details for a specific faction/faction header.
: [[API GetFactionInfoByID|GetFactionInfoByID]](<span class="apiarg">factionID</span>) - Gets details for a specific faction by factionID.
: [[API GetFriendshipReputation|GetFriendshipReputation]](<span class="apiarg">factionID</span>) - Gets details about an NPC friend.
: [[API GetFriendshipReputationRanks|GetFriendshipReputationRanks]](<span class="apiarg">factionID</span>) - Gets rank data about an NPC friend.
: [[API GetNumFactions|GetNumFactions]]() - Returns the number of lines in the faction display.
: [[API GetSelectedFaction|GetSelectedFaction]]() - Returns the row index of the currently selected faction in reputation window.
: [[API GetWatchedFactionInfo|GetWatchedFactionInfo]]() - Returns information about the currently watched faction.
: [[API IsFactionInactive|IsFactionInactive]](<span class="apiarg">index</span>) - Returns true if the faction is marked inactive.
: [[API SetFactionActive|SetFactionActive]](<span class="apiarg">index</span>) - Remove a faction from inactive group.
: [[API SetFactionInactive|SetFactionInactive]](<span class="apiarg">index</span>) - Move a faction to inactive group.
: [[API SetSelectedFaction|SetSelectedFaction]](<span class="apiarg">index</span>) - Sets the currently selected faction in reputation window.
: [[API SetWatchedFactionIndex|SetWatchedFactionIndex]](<span class="apiarg">index</span>) - Sets which faction should be watched in Blizzard reputation bar.

=== Spells ===
: [[API C_Spell.DoesSpellExist|C_Spell.DoesSpellExist]](<span class="apiarg">spellID</span>) : <span class="apiret">spellExists</span>
: [[API C_Spell.IsSpellDataCached|C_Spell.IsSpellDataCached]](<span class="apiarg">spellID</span>) : <span class="apiret">isCached</span>
: [[API C_Spell.RequestLoadSpellData|C_Spell.RequestLoadSpellData]](<span class="apiarg">spellID</span>)
: [[API C_ZoneAbility.GetActiveAbilities|C_ZoneAbility.GetActiveAbilities]]() : <span class="apiret">zoneAbilities</span>
: [[API AcceptSpellConfirmationPrompt|AcceptSpellConfirmationPrompt]](<span class="apiarg">spellID</span>)
: <small>NOCOMBAT</small> [[API CancelSpellByName|CancelSpellByName]](<span class="apiarg">name</span>)
: <small>PROTECTED</small> [[API CastSpellByID|CastSpellByID]](<span class="apiarg">spellID [, target]</span>)
: <small>PROTECTED</small> [[API CastSpellByName|CastSpellByName]](<span class="apiarg">name [, target]</span>) - Cast the specified spell by display name.
: <small>PROTECTED</small> [[API CastSpell|CastSpell]](<span class="apiarg">spellIndex, bookType</span>) - Cast the spell in the specified spell book slot.
: [[API DeclineSpellConfirmationPrompt|DeclineSpellConfirmationPrompt]](<span class="apiarg">spellID</span>)
: [[API DoesSpellExist|DoesSpellExist]](<span class="apiarg">spellName</span>)
: [[API FindBaseSpellByID|FindBaseSpellByID]](<span class="apiarg">spellID</span>)
: [[API FindSpellOverrideByID|FindSpellOverrideByID]](<span class="apiarg">spellID</span>)
: [[API GetMaxSpellStartRecoveryOffset|GetMaxSpellStartRecoveryOffset]]()
: [[API GetSchoolString|GetSchoolString]](<span class="apiarg">schoolMask</span>)
: [[API GetSpellAutocast|GetSpellAutocast]](<span class="apiarg">spellName | spellId, bookType</span>) - Check whether the specified spell autocasts or not.
: [[API GetSpellBaseCooldown|GetSpellBaseCooldown]](<span class="apiarg">spellID</span>)
: [[API GetSpellCharges|GetSpellCharges]](<span class="apiarg">spellId | spellName</span>) - Returns information about the charges of a charge-accumulating player ability.
: [[API GetSpellConfirmationPromptsInfo|GetSpellConfirmationPromptsInfo]]()
: [[API GetSpellCooldown|GetSpellCooldown]](<span class="apiarg">spellName | spellID, bookType</span>) - Retrieves data on the cooldown of a specific spell.
: [[API GetSpellCount|GetSpellCount]]()
: [[API GetSpellDescription|GetSpellDescription]](<span class="apiarg">spellId</span>) - Returns the spell description.
: [[API GetSpellInfo|GetSpellInfo]](<span class="apiarg">spellId</span>) : <span class="apiret">name, rank, icon, castTime, minRange, maxRange, spellID</span> - Returns spell info.
: [[API GetSpellLink|GetSpellLink]](<span class="apiarg">spellName, spellRank</span>) - Returns the spell's link.
: [[API GetSpellPowerCost|GetSpellPowerCost]](<span class="apiarg">spellId | spellName</span>) - Returns information about a spell's resource cost.
: [[API GetSpellQueueWindow|GetSpellQueueWindow]]()
: [[API GetSpellSubtext|GetSpellSubtext]]()
: [[API GetSpellTexture|GetSpellTexture]](<span class="apiarg">spellId | spellName</span>) - Returns the fileId used for the spell's icon.
: [[API GetSpellTradeSkillLink|GetSpellTradeSkillLink]]()
: [[API IsAttackSpell|IsAttackSpell]](<span class="apiarg">spell</span>) - Returns 1 if the spell is the "Attack" spell.
: [[API IsAutoRepeatSpell|IsAutoRepeatSpell]](<span class="apiarg">spell</span>)
: [[API IsConsumableSpell|IsConsumableSpell]]()
: [[API IsCurrentSpell|IsCurrentSpell]](<span class="apiarg">spellID</span>) - Returns true if the spell is currently being casted by the player or is placed in the queue to be casted next. False otherwise.
: [[API IsHarmfulSpell|IsHarmfulSpell]](<span class="apiarg">spellSlot</span>) - Returns whether a spell can be used against hostile units
: [[API IsHelpfulSpell|IsHelpfulSpell]](<span class="apiarg">spellSlot</span>) - Returns whether an item can be used on the player or friendly units
: [[API IsPassiveSpell|IsPassiveSpell]](<span class="apiarg">spellID, bookType</span>) - Returns whether the icon in your spellbook is a Passive ability. Formerly IsSpellPassive(spell).
: [[API IsPlayerSpell|IsPlayerSpell]](<span class="apiarg">spellID</span>)
: [[API IsSpellInRange|IsSpellInRange]](<span class="apiarg">spellName [, unit]</span>) - Is nil for no valid target, 0 for out of range, 1 for in range.
: [[API IsSpellKnown|IsSpellKnown]](<span class="apiarg">spellID, isPetSpell</span>) - Returns whether the player (or pet) knows the given spell.
: [[API IsSpellKnownOrOverridesKnown|IsSpellKnownOrOverridesKnown]](<span class="apiarg">spellID [, isPet]</span>)
: [[API IsSpellOverlayed|IsSpellOverlayed]](<span class="apiarg">spellID</span>) - Returns whether the spell is currently affected by a proc (glow highlighting).
: [[API IsUsableSpell|IsUsableSpell]](<span class="apiarg">spellName | spellID | spellIndex, bookType</span>) - Determines whether a spell can be used by the player character.
: [[API SpellCancelQueuedSpell|SpellCancelQueuedSpell]]()
: [[API SpellCanTargetItem|SpellCanTargetItem]]()
: [[API SpellCanTargetItemID|SpellCanTargetItemID]]()
: [[API SpellCanTargetQuest|SpellCanTargetQuest]]()
: [[API SpellCanTargetUnit|SpellCanTargetUnit]](<span class="apiarg">unit</span>) - Returns true if the spell awaiting target selection can be cast on the specified unit.
: [[API SpellGetVisibilityInfo|SpellGetVisibilityInfo]](<span class="apiarg">spellID, visType</span>)
: [[API SpellHasRange|SpellHasRange]](<span class="apiarg">spell</span>) - Returns true if the specified spell has a ranged effect (i.e. requires a target).
: [[API SpellIsAlwaysShown|SpellIsAlwaysShown]](<span class="apiarg">spellID</span>)
: [[API SpellIsPriorityAura|SpellIsPriorityAura]](<span class="apiarg">spellID</span>)
: [[API SpellIsSelfBuff|SpellIsSelfBuff]](<span class="apiarg">spellID</span>)
: [[API SpellIsTargeting|SpellIsTargeting]]() - Returns true if a spell has been cast and is awaiting target selection.
: <small>PROTECTED</small> [[API SpellStopCasting|SpellStopCasting]]() - Stops the current spellcast.
: <small>PROTECTED</small> [[API SpellStopTargeting|SpellStopTargeting]]() - Cancels the spell awaiting target selection.
: <small>PROTECTED</small> [[API SpellTargetUnit|SpellTargetUnit]](<span class="apiarg">unit</span>) - Casts the spell awaiting target selection on the specified unit.
: <small>PROTECTED</small> [[API SpellTargetItem|SpellTargetItem]](<span class="apiarg">item</span>)
: <small>UI</small> [[API QueryCastSequence|QueryCastSequence]](<span class="apiarg">sequence</span>) - Returns index, item, spell for the spell/item that will be used next if the cast sequence is executed.

==== Spell Book ====
: [[API C_SpellBook.ContainsAnyDisenchantSpell|C_SpellBook.ContainsAnyDisenchantSpell]]() : <span class="apiret">contains</span>
: [[API C_SpellBook.GetCurrentLevelSpells|C_SpellBook.GetCurrentLevelSpells]](<span class="apiarg">level</span>) : <span class="apiret">spellIDs</span>
: [[API C_SpellBook.GetSkillLineIndexByID|C_SpellBook.GetSkillLineIndexByID]](<span class="apiarg">skillLineID</span>) : <span class="apiret">skillIndex</span>
: [[API C_SpellBook.GetSpellInfo|C_SpellBook.GetSpellInfo]](<span class="apiarg">spellID</span>) : <span class="apiret">spellInfo</span>
: [[API C_SpellBook.GetSpellLinkFromSpellID|C_SpellBook.GetSpellLinkFromSpellID]](<span class="apiarg">spellID</span>) : <span class="apiret">spellLink</span>
: [[API C_SpellBook.IsSpellDisabled|C_SpellBook.IsSpellDisabled]](<span class="apiarg">spellID</span>) : <span class="apiret">disabled</span>
: [[API FindSpellBookSlotBySpellID|FindSpellBookSlotBySpellID]](<span class="apiarg">spellID [, isPet]</span>)
: [[API GetNumSpellTabs|GetNumSpellTabs]]() - Returns the total number of tabs in the user's spellbook.
: [[API GetSpellAvailableLevel|GetSpellAvailableLevel]](<span class="apiarg">spellSlot</span>)
: [[API GetSpellBookItemInfo|GetSpellBookItemInfo]](<span class="apiarg">spellName or index, bookType</span>) - Returns the spell's type and spellID for a spell in the player's spellbook.
: [[API GetSpellBookItemName|GetSpellBookItemName]](<span class="apiarg">spellName or index, bookType</span>) - Returns the spell name and spell rank for a spell in the player's spellbook.
: [[API GetSpellBookItemTexture|GetSpellBookItemTexture]](<span class="apiarg">spellName or index, bookType</span>) - Returns the spell icon fileId for a spell in the player's spellbook.
: [[API GetSpellLevelLearned|GetSpellLevelLearned]]()
: [[API GetSpellTabInfo|GetSpellTabInfo]](<span class="apiarg">spellbookTabNum</span>) - Returns information about the specified spellbook tab.
: [[API IsSelectedSpellBookItem|IsSelectedSpellBookItem]](<span class="apiarg">spellSlot</span>)

=== Store ===
The [[In-Game Store]] was added in [[Patch 5.4.0]]
: [[API C_StorePublic.DoesGroupHavePurchaseableProducts|C_StorePublic.DoesGroupHavePurchaseableProducts]](<span class="apiarg">groupID</span>) : <span class="apiret">hasPurchaseableProducts</span>
: [[API C_StorePublic.IsDisabledByParentalControls|C_StorePublic.IsDisabledByParentalControls]]() : <span class="apiret">disabled</span> - Returns whether access to the in-game shop is disabled by parental controls.
: [[API C_StorePublic.IsEnabled|C_StorePublic.IsEnabled]]() : <span class="apiret">enabled</span> - Returns whether the In-Game Store is available for the player.
[[Character Boost]]s were added in [[Patch 5.4.7]]
: <small>PROTECTED</small> [[API C_CharacterServices.AssignUpgradeDistribution|C_CharacterServices.AssignUpgradeDistribution]]()
: <small>PROTECTED</small> [[API C_CharacterServices.GetActiveCharacterUpgradeBoostType|C_CharacterServices.GetActiveCharacterUpgradeBoostType]]()
: <small>PROTECTED</small> [[API C_CharacterServices.GetActiveClassTrialBoostType|C_CharacterServices.GetActiveClassTrialBoostType]]()
: <small>PROTECTED</small> [[API C_CharacterServices.GetAutomaticBoost|C_CharacterServices.GetAutomaticBoost]]()
: <small>PROTECTED</small> [[API C_CharacterServices.GetAutomaticBoostCharacter|C_CharacterServices.GetAutomaticBoostCharacter]]()
: <small>PROTECTED</small> [[API C_CharacterServices.GetCharacterServiceDisplayData|C_CharacterServices.GetCharacterServiceDisplayData]]()
: <small>PROTECTED</small> [[API C_CharacterServices.GetCharacterServiceDisplayOrder|C_CharacterServices.GetCharacterServiceDisplayOrder]]()
: <small>PROTECTED</small> [[API C_CharacterServices.HasRequiredBoostForClassTrial|C_CharacterServices.HasRequiredBoostForClassTrial]]()
: <small>PROTECTED</small> [[API C_CharacterServices.HasRequiredBoostForUnrevoke|C_CharacterServices.HasRequiredBoostForUnrevoke]]()
: <small>PROTECTED</small> [[API C_CharacterServices.SetAutomaticBoost|C_CharacterServices.SetAutomaticBoost]]()
: <small>PROTECTED</small> [[API C_CharacterServices.SetAutomaticBoostCharacter|C_CharacterServices.SetAutomaticBoostCharacter]]()
: [[API IsCharacterNewlyBoosted|IsCharacterNewlyBoosted]]()
[[Class Trial]]s were added in [[Patch 6.0.2]]
: [[API C_ClassTrial.GetClassTrialLogoutTimeSeconds|C_ClassTrial.GetClassTrialLogoutTimeSeconds]]()
: [[API C_ClassTrial.IsClassTrialCharacter|C_ClassTrial.IsClassTrialCharacter]]()
: [[API C_CharacterServicesPublic.ShouldSeeControlPopup|C_CharacterServicesPublic.ShouldSeeControlPopup]]()
: [[API C_SharedCharacterServices.GetLastSeenCharacterUpgradePopup|C_SharedCharacterServices.GetLastSeenCharacterUpgradePopup]]()
: [[API C_SharedCharacterServices.GetLastSeenExpansionTrialPopup|C_SharedCharacterServices.GetLastSeenExpansionTrialPopup]]()
: [[API C_SharedCharacterServices.GetUpgradeDistributions|C_SharedCharacterServices.GetUpgradeDistributions]]()
: [[API C_SharedCharacterServices.HasFreePromotionalUpgrade|C_SharedCharacterServices.HasFreePromotionalUpgrade]]()
: [[API C_SharedCharacterServices.HasSeenFreePromotionalUpgradePopup|C_SharedCharacterServices.HasSeenFreePromotionalUpgradePopup]]()
: [[API C_SharedCharacterServices.IsPurchaseIDPendingUpgrade|C_SharedCharacterServices.IsPurchaseIDPendingUpgrade]]()
: [[API C_SharedCharacterServices.QueryClassTrialBoostResult|C_SharedCharacterServices.QueryClassTrialBoostResult]]()
: [[API C_SharedCharacterServices.SetCharacterUpgradePopupSeen|C_SharedCharacterServices.SetCharacterUpgradePopupSeen]](<span class="apiarg">expansion_id</span>)
: [[API C_SharedCharacterServices.SetExpansionTrialPopupSeen|C_SharedCharacterServices.SetExpansionTrialPopupSeen]](<span class="apiarg">expansion_id</span>)
: [[API C_SharedCharacterServices.SetPromotionalPopupSeen|C_SharedCharacterServices.SetPromotionalPopupSeen]](<span class="apiarg">seen</span>)

=== System ===
: <small>HW</small> [[API C_UI.Reload|C_UI.Reload]]() - Reloads the UI from source files.
: [[API C_System.GetFrameStack|C_System.GetFrameStack]]() : <span class="apiret">objects</span>
: [[API CancelLogout|CancelLogout]]() - Cancels the logout timer (from camping or quitting).
: <small>PROTECTED</small> [[API CopyToClipboard|CopyToClipboard]](<span class="apiarg">text</span>) - Copies text to the clipboard.
: [[API DetectWowMouse|DetectWowMouse]]() - Attempts to detect the world of warcraft MMO mouse.
: [[API FlashClientIcon|FlashClientIcon]]() - Flashes the game client icon in the Operating System.
: <small>PROTECTED</small> [[API ForceLogout|ForceLogout]]()
: <small>PROTECTED</small> [[API ForceQuit|ForceQuit]]() - Instantly quits the game, bypassing the timer.
: [[API GetBuildInfo|GetBuildInfo]]() - Returns information about current client build.
: [[API GetFramerate|GetFramerate]]() - Returns the current framerate (full precision)
: [[API GetTickTime|GetTickTime]]() - Returns the time in seconds since the end of the previous frame and the start of the current frame.
: [[API Is64BitClient|Is64BitClient]]()
: [[API IsDebugBuild|IsDebugBuild]]()
: [[API IsGMClient|IsGMClient]]()
: [[API IsLinuxClient|IsLinuxClient]]() - Boolean - Returns true if WoW is being run on Linux.
: [[API IsLoggedIn|IsLoggedIn]]() - Returns nil before the PLAYER_LOGIN event has fired, 1 afterwards.
: [[API IsMacClient|IsMacClient]]() - Returns true if WoW is being run on Mac.
: [[API IsOnGlueScreen|IsOnGlueScreen]]()
: [[API IsPublicBuild|IsPublicBuild]]()
: [[API IsTestBuild|IsTestBuild]]()
: [[API IsUsingFixedTimeStep|IsUsingFixedTimeStep]]() - Whether the UI is updating at a fixed rate independent of the framerate.
: [[API IsWindowsClient|IsWindowsClient]]() - Returns true if WoW is being run on Windows.
: [[API LoadURLIndex|LoadURLIndex]](<span class="apiarg">index</span>)
: <small>PROTECTED</small> [[API Logout|Logout]]() - Logs the user out of the game.
: [[API ProcessExceptionClient|ProcessExceptionClient]]()
: <small>PROTECTED</small> [[API Quit|Quit]]() - Quits the game.
: [[API Screenshot|Screenshot]]() - Takes a screenshot.
: [[API SendSystemMessage|SendSystemMessage]](<span class="apiarg">message</span>) - Fires a CHAT_MSG_SYSTEM event for yourself.
: <small>PROTECTED</small> [[API Stuck|Stuck]]() - Informs the game engine that the player is Stuck.
: <small>UI</small> [[API ToggleFramerate|ToggleFramerate]]() - Show/Hide the FPS.

==== Network ====
: [[API GetAvailableBandwidth|GetAvailableBandwidth]]()
: [[API GetBackgroundLoadingStatus|GetBackgroundLoadingStatus]]()
: [[API GetDownloadedPercentage|GetDownloadedPercentage]]()
: [[API GetFileStreamingStatus|GetFileStreamingStatus]]()
: [[API GetNetIpTypes|GetNetIpTypes]]()
: [[API GetNetStats|GetNetStats]]() - Get bandwidth and latency network information.

==== Console ====
Relates to [[Console variables]] and commands.
: [[API C_CVar.GetCVar|C_CVar.GetCVar]](<span class="apiarg">name</span>) : <span class="apiret">value</span> - Returns the current value of a console variable.
: [[API C_CVar.GetCVarBitfield|C_CVar.GetCVarBitfield]](<span class="apiarg">name, index</span>) : <span class="apiret">value</span> - Returns the bitfield of a console variable.
: [[API C_CVar.GetCVarBool|C_CVar.GetCVarBool]](<span class="apiarg">name</span>) : <span class="apiret">value</span> - Returns the boolean value of a console variable.
: [[API C_CVar.GetCVarDefault|C_CVar.GetCVarDefault]](<span class="apiarg">name</span>) : <span class="apiret">defaultValue</span> - Returns the default value of a console variable.
: [[API C_CVar.RegisterCVar|C_CVar.RegisterCVar]](<span class="apiarg">name [, value]</span>) - Registers a custom cvar (temporarily).
: [[API C_CVar.ResetTestCVars|C_CVar.ResetTestCVars]]() - Resets the {{api|t=c|ActionCam}} cvars.
: [[API C_CVar.SetCVar|C_CVar.SetCVar]](<span class="apiarg">name [, value, scriptCVar]</span>) : <span class="apiret">success</span> - Sets a console variable.
: [[API C_CVar.SetCVarBitfield|C_CVar.SetCVarBitfield]](<span class="apiarg">name, index, value [, scriptCVar]</span>) : <span class="apiret">success</span> - Sets the bitfield of a console variable.
: [[API C_Console.GetAllCommands|C_Console.GetAllCommands]]() : <span class="apiret">commands</span> - Returns all console variables and commands.
: [[API C_Console.GetColorFromType|C_Console.GetColorFromType]](<span class="apiarg">colorType</span>) : <span class="apiret">color</span> - Returns color info for a color type.
: [[API C_Console.GetFontHeight|C_Console.GetFontHeight]]() : <span class="apiret">fontHeightInPixels</span> - Returns the console's currently used font height.
: [[API C_Console.PrintAllMatchingCommands|C_Console.PrintAllMatchingCommands]](<span class="apiarg">partialCommandText</span>) - Prints all matching console commands.
: [[API C_Console.SetFontHeight|C_Console.SetFontHeight]](<span class="apiarg">fontHeightInPixels</span>) - Sets the console's font height.
: [[API ConsoleAddMessage|ConsoleAddMessage]](<span class="apiarg">message</span>) - Prints a message to the console window.
: [[API ConsoleExec|ConsoleExec]](<span class="apiarg">command</span>) - Execute a console command.
: [[API GetCVarInfo|GetCVarInfo]](<span class="apiarg">name</span>) - Returns information on a console variable.
: [[API SetConsoleKey|SetConsoleKey]](<span class="apiarg">key</span>) - Sets the console key (normally ~ ).

==== Date & Time ====
: [[API C_DateAndTime.AdjustTimeByDays|C_DateAndTime.AdjustTimeByDays]](<span class="apiarg">date, days</span>) : <span class="apiret">newDate</span> - Returns the date after a given amount of days.
: [[API C_DateAndTime.AdjustTimeByMinutes|C_DateAndTime.AdjustTimeByMinutes]](<span class="apiarg">date, minutes</span>) : <span class="apiret">newDate</span> - Returns the date after a given amount of minutes.
: [[API C_DateAndTime.CompareCalendarTime|C_DateAndTime.CompareCalendarTime]](<span class="apiarg">lhsCalendarTime, rhsCalendarTime</span>) : <span class="apiret">comparison</span> - Compares two dates with eachother.
: [[API C_DateAndTime.GetCalendarTimeFromEpoch|C_DateAndTime.GetCalendarTimeFromEpoch]](<span class="apiarg">epoch</span>) : <span class="apiret">date</span> - Returns the date of a given amount of time since the UNIX epoch.
: [[API C_DateAndTime.GetCurrentCalendarTime|C_DateAndTime.GetCurrentCalendarTime]]() : <span class="apiret">date</span> - Returns the realm's current date and time.
: [[API C_DateAndTime.GetSecondsUntilDailyReset|C_DateAndTime.GetSecondsUntilDailyReset]]() : <span class="apiret">seconds</span>
: [[API C_DateAndTime.GetSecondsUntilWeeklyReset|C_DateAndTime.GetSecondsUntilWeeklyReset]]() : <span class="apiret">seconds</span>
: [[API C_DateAndTime.GetServerTimeLocal|C_DateAndTime.GetServerTimeLocal]]() : <span class="apiret">serverTimeLocal</span> - Returns the server's Unix time offset by the server's UTC timezone.
: [[API GetGameTime|GetGameTime]]() - Returns the realm's current time in hours and minutes.
: [[API GetLocalGameTime|GetLocalGameTime]]()
: [[API GetServerTime|GetServerTime]]() - Returns the server's Unix time.
: [[API GetSessionTime|GetSessionTime]]() - Returns the time since you opened the game client.
: [[API GetTime|GetTime]]() - Returns the system uptime in seconds (millisecond precision).
: [[API GetTimePreciseSec|GetTimePreciseSec]]() - Returns a monotonic timestamp in seconds, with millisecond precision.
: [[API RequestTimePlayed|RequestTimePlayed]]() - Request a summary of time played from the server.
: <small>Lua</small> [[API date|date]](<span class="apiarg">format, time</span>) - Returns the current date according to the user's machine.
: <small>Lua</small> [[API time|time]](<span class="apiarg">table</span>) - Returns a timestamp for the specified time or the current Unix time.

==== Timers ====
: [[API C_Timer.After|C_Timer.After]](<span class="apiarg">duration, callback</span>) - Runs callback after given duration.
: <small>UI</small> [[API C_Timer.NewTimer|C_Timer.NewTimer]](<span class="apiarg">duration, callback</span>) - Runs callback after given duration. (Cancelable)
: <small>UI</small> [[API C_Timer.NewTicker|C_Timer.NewTicker]](<span class="apiarg">duration, callback [, iterations]</span>) - Runs callback multiple times iterating every given duration. (Cancelable)

==== Debugging ====
: [[API AreDangerousScriptsAllowed|AreDangerousScriptsAllowed]]()
: [[API DumpMovementCapture|DumpMovementCapture]]() - Used in the protected Commentator UI.
: [[API FrameXML_Debug|FrameXML_Debug]](<span class="apiarg">flag</span>) - Sets FrameXML logging state which is output to "/WoW Folder/Logs/FrameXML.log".
: [[API GetCurrentEventID|GetCurrentEventID]]()
: [[API GetEventTime|GetEventTime]](<span class="apiarg">eventProfileIndex</span>)
: [[API GetGameMessageInfo|GetGameMessageInfo]](<span class="apiarg">gameMessageType</span>) - Returns the error message for an id.
: [[API HandleAtlasMemberCommand|HandleAtlasMemberCommand]]()
: [[API RunScript|RunScript]](<span class="apiarg">script</span>) - Execute "script" as a block of Lua code.
: [[API ScriptsDisallowedForBeta|ScriptsDisallowedForBeta]]()
: [[API SetAllowDangerousScripts|SetAllowDangerousScripts]]()
: [[API ToggleAnimKitDisplay|ToggleAnimKitDisplay]]()
: [[API ToggleDebugAIDisplay|ToggleDebugAIDisplay]]()
: [[API addframetext|addframetext]](<span class="apiarg">text</span>)
: [[API debuglocals|debuglocals]]()
: [[API debugprofilestart|debugprofilestart]]() - Starts a timer for profiling during debugging.
: [[API debugprofilestop|debugprofilestop]]() - Returns the time in milliseconds since the last call to debugprofilestart()
: [[API debugstack|debugstack]](<span class="apiarg">start, count1, count2</span>) - Returns a string representation of the current calling stack.
: [[API geterrorhandler|geterrorhandler]]() - Returns the currently set error handler.
: [[API seterrorhandler|seterrorhandler]](<span class="apiarg">errFunc</span>) - Set the error handler to the given parameter.
: <small>UI</small> [https://www.townlong-yak.com/framexml/go/DevTools_Dump DevTools_Dump](<span class="apiarg">value [, startKey]</span>) - Pretty prints a variable or value. Equivalent to the [[MACRO dump|<code>/dump</code> macro]].
: <small>UI</small> [[API print|print]](<span class="apiarg">...</span>) - Calls the current print output handler with the provided values; by default printing the values to the default chat frame.
: <small>UI</small> [[API getprinthandler|getprinthandler]]() - Returns the function currently handling print() output.
: <small>UI</small> [[API setprinthandler|setprinthandler]](<span class="apiarg">func</span>) - Changes the function handling print() output.
: <small>UI</small> [[API message|message]](<span class="apiarg">text</span>) - Displays a message box with your text message and an "Okay" button.
: <small>PROTECTED</small> [[API C_Debug.DashboardIsEnabled|C_Debug.DashboardIsEnabled]]()
: <small>PROTECTED</small> [[API C_Debug.GetAllPortLocsForMap|C_Debug.GetAllPortLocsForMap]](<span class="apiarg">uiMapID</span>)
: <small>PROTECTED</small> [[API C_Debug.GetMapDebugObjects|C_Debug.GetMapDebugObjects]](<span class="apiarg">uiMapID</span>)
: <small>PROTECTED</small> [[API C_Debug.TeleportToMapDebugObject|C_Debug.TeleportToMapDebugObject]](<span class="apiarg">pinIndex</span>)
: <small>PROTECTED</small> [[API C_Debug.TeleportToMapLocation|C_Debug.TeleportToMapLocation]](<span class="apiarg">uiMapID, mapX, mapY</span>)

==== Graphics ====
: [[API C_ScriptedAnimations.GetAllScriptedAnimationEffects|C_ScriptedAnimations.GetAllScriptedAnimationEffects]]() : <span class="apiret">scriptedAnimationEffects</span>
: [[API C_VideoOptions.GetGxAdapterInfo|C_VideoOptions.GetGxAdapterInfo]]() : <span class="apiret">adapters</span> - Returns info about the system's graphics adapter.
: [[API AntiAliasingSupported|AntiAliasingSupported]]()
: [[API AutoChooseCurrentGraphicsSetting|AutoChooseCurrentGraphicsSetting]]()
: [[API GetCurrentGraphicsSetting|GetCurrentGraphicsSetting]]()
: [[API GetCurrentResolution|GetCurrentResolution]]() - Get the index of the current screen resolution.
: [[API GetCurrentScaledResolution|GetCurrentScaledResolution]]()
: [[API GetCVarSettingValidity|GetCVarSettingValidity]](<span class="apiarg">cvar, settingsCount [, isRaid]</span>)
: [[API GetDefaultGraphicsQuality|GetDefaultGraphicsQuality]]()
: [[API GetDefaultVideoOption|GetDefaultVideoOption]]()
: [[API GetDefaultVideoOptions|GetDefaultVideoOptions]]()
: [[API GetDefaultVideoQualityOption|GetDefaultVideoQualityOption]]()
: [[API GetGraphicsAPIs|GetGraphicsAPIs]]() - Returns the supported graphics APIs for the system, D3D11_LEGACY, D3D11, D3D12, etc.
: [[API GetGraphicsDropdownIndexByMasterIndex|GetGraphicsDropdownIndexByMasterIndex]]()
: [[API GetMaxRenderScale|GetMaxRenderScale]]()
: [[API GetMinRenderScale|GetMinRenderScale]]()
: [[API GetMonitorAspectRatio|GetMonitorAspectRatio]]()
: [[API GetMonitorCount|GetMonitorCount]]()
: [[API GetMonitorName|GetMonitorName]]()
: [[API GetPhysicalScreenSize|GetPhysicalScreenSize]]()
: [[API GetScreenDPIScale|GetScreenDPIScale]]()
: [[API GetScreenHeight|GetScreenHeight]]() - Returns the height of the window in pixels.
: [[API GetScreenResolutions|GetScreenResolutions]]()
: [[API GetScreenWidth|GetScreenWidth]]() - Returns the width of the window in pixels.
: [[API GetToolTipInfo|GetToolTipInfo]](<span class="apiarg">1, size-1, cvar, validValue1, ...</span>) - Returns validity info for a graphics cvar.
: [[API GetVideoCaps|GetVideoCaps]]()
: [[API GetVideoOptions|GetVideoOptions]]()
: [[API IsDesaturateSupported|IsDesaturateSupported]]()
: [[API IsOutlineModeSupported|IsOutlineModeSupported]]()
: [[API MultiSampleAntiAliasingSupported|MultiSampleAntiAliasingSupported]]()
: [[API RestartGx|RestartGx]]() - Restarts the graphical engine. Needed for things such as resolution changes to take effect.
: [[API SetCurrentGraphicsSetting|SetCurrentGraphicsSetting]](<span class="apiarg">setting{0=normal, 1=raid/BG}</span>)
: [[API SetDefaultVideoOptions|SetDefaultVideoOptions]](<span class="apiarg">value</span>)
: [[API SetScreenResolution|SetScreenResolution]](<span class="apiarg">width, height, fullscreen</span>)
: [[API SetSelectedScreenResolutionIndex|SetSelectedScreenResolutionIndex]](<span class="apiarg">integerIndex</span>)
: [[API SupportsClipCursor|SupportsClipCursor]]()
: [[API ToggleSelfHighlight|ToggleSelfHighlight]]()
: [[API ToggleWindowed|ToggleWindowed]]()
: [[API UpdateWindow|UpdateWindow]]() - When in windowed mode, updates the window. This also aligns it to the top of the screen and increases the size to max widowed size.

==== Locales ====
: [[API BreakUpLargeNumbers|BreakUpLargeNumbers]](<span class="apiarg">number [, natural]</span>) - Converts a number into a localized string, grouping digits as required.
: [[API DeclineName|DeclineName]](<span class="apiarg">name, gender, declensionSet</span>) - Returns suggested declensions for a German or Russian name.
: [[API GetAvailableLocaleInfo|GetAvailableLocaleInfo]](<span class="apiarg">ignoreLocaleRestrictions</span>)
: [[API GetAvailableLocales|GetAvailableLocales]]()
: [[API GetLocale|GetLocale]]() - Returns client locale, example 'enUS'.
: [[API GetNumDeclensionSets|GetNumDeclensionSets]](<span class="apiarg">name, gender</span>) - Returns the number of suggested declension sets for a German or Russian name.
: [[API GetOSLocale|GetOSLocale]]()
: [[API GetText|GetText]]() - Used to localize some client text.
: [[API IsEuropeanNumbers|IsEuropeanNumbers]]()
: [[API SetEuropeanNumbers|SetEuropeanNumbers]](<span class="apiarg">flag</span>) - Sets the decimal separator to a comma instead of a dot.

==== Script Profiling ====
Note: CPU profiling is disabled by default since it has some overhead. CPU profiling is controlled by the [[CVar_scriptProfile|scriptProfile]] cvar, which persists across sessions, and takes effect after a UI reload. Memory profiling is always available. These functions have been added in Patch 2.1.
: [[API GetAddOnCPUUsage|GetAddOnCPUUsage]](<span class="apiarg">index or name</span>) - Returns the total time used by the specified AddOn. This returns a cached value calculated by UpdateAddOnCPUUsage().
: [[API GetAddOnMemoryUsage|GetAddOnMemoryUsage]](<span class="apiarg">index or name</span>) - Query an addon's memory use (in K, precision to 1 byte) - This returns a cached value calculated by UpdateAddOnMemoryUsage().
: [[API GetEventCPUUsage|GetEventCPUUsage]](<span class="apiarg">[event]</span>) - Returns the time used and number of times the specified event has been triggered. If 'event' is omitted, the time and count will be totals across all events.
: [[API GetFrameCPUUsage|GetFrameCPUUsage]](<span class="apiarg">frame [, includeChildren]</span>) - Returns the time used and number of function calls of any of the frame's script handlers. If 'includeChildren' is true or omitted, the time and call count will include the handlers for all of the frame's children as well.
: [[API GetFunctionCPUUsage|GetFunctionCPUUsage]](<span class="apiarg">func [, includeSubroutines]</span>) - Returns the time used and number of times the specified function was called. If 'includeSubroutines' is true or omitted, the time includes both the time spent in the function and subroutines called by the function. If it is false, then time is only the time actually spent by the code in the function itself.
: [[API GetScriptCPUUsage|GetScriptCPUUsage]]() - Returns the total time used by the scripting system.
: [[API ResetCPUUsage|ResetCPUUsage]]() - Reset all CPU profiling statistics to zero.
: [[API UpdateAddOnCPUUsage|UpdateAddOnCPUUsage]]() - Scan through the profiling data and update the per-addon statistics.
: [[API UpdateAddOnMemoryUsage|UpdateAddOnMemoryUsage]]() - Scan through memory profiling data and update the per-addon statistics.

==== Secure Execution ====
Relates to [[Secure Execution and Tainting]].
: [[API forceinsecure|forceinsecure]]() - Taint the current execution path.
: [[API hooksecurefunc|hooksecurefunc]](<span class="apiarg">[table,] funcName, hookfunc</span>) - Creates a secure 'post hook' for the named function. The hookfunc is invoked after the original function, and receives the same parameters. Return values from hookfunc are discarded. This is the only safe way to hook functions that execute protected functionality.
: [[API InCombatLockdown|InCombatLockdown]]() - Returns true if the in-combat AddOn restrictions are active.
: [[API issecure|issecure]]() - Determine if the current environment is secure.
: [[API issecurevariable|issecurevariable]](<span class="apiarg">[table,] name</span>) - Determine if the specified variable is secure.
: [[API scrub|scrub]](<span class="apiarg">...</span>) - Returns the argument list with non-number/boolean/string values changed to nil.
: [[API securecall|securecall]](<span class="apiarg">function or functionName, ...</span>) - Call a function from a secure environment without risking secure status.
: [[API securecallfunction|securecallfunction]]()
: [[API secureexecuterange|secureexecuterange]]()
: [[API StoreSecureReference|StoreSecureReference]](<span class="apiarg">name, obj</span>)
: <small>UI</small> [https://www.townlong-yak.com/framexml/go/CanAccessObject CanAccessObject](<span class="apiarg">obj</span>) - Returns true if an object is secure and not forbidden.

==== Sound ====
: [[API MuteSoundFile|MuteSoundFile]](<span class="apiarg">soundFile or fileDataID</span>) - Mutes a sound file.
: [[API PlayMusic|PlayMusic]](<span class="apiarg">musicfile or fileDataID</span>) - Plays the specified sound file on loop to the "Music" sound channel.
: [[API PlaySound|PlaySound]](<span class="apiarg">soundKitID [, channel, forceNoDuplicates, runFinishCallback]</span>) - Plays the specified sound by SoundKitID.
: [[API PlaySoundFile|PlaySoundFile]](<span class="apiarg">soundFile or soundFileID [, channel]</span>) - Plays the specified sound by [[FileDataID]] or by addon file path.
: [[API PlayVocalErrorSoundID|PlayVocalErrorSoundID]](<span class="apiarg">vocalErrorSoundID</span>)
: [[API StopMusic|StopMusic]]() - Stops the currently playing music.
: [[API StopSound|StopSound]](<span class="apiarg">soundHandleID [, fadeoutTime]</span>)
: [[API UnmuteSoundFile|UnmuteSoundFile]](<span class="apiarg">soundFile or fileDataID</span>) - Unmutes a sound file.
Sound Drivers
: [[API Sound_ChatSystem_GetInputDriverNameByIndex|Sound_ChatSystem_GetInputDriverNameByIndex]](<span class="apiarg">InputDriverIndex</span>)
: [[API Sound_ChatSystem_GetNumInputDrivers|Sound_ChatSystem_GetNumInputDrivers]]()
: [[API Sound_ChatSystem_GetNumOutputDrivers|Sound_ChatSystem_GetNumOutputDrivers]]()
: [[API Sound_ChatSystem_GetOutputDriverNameByIndex|Sound_ChatSystem_GetOutputDriverNameByIndex]](<span class="apiarg">OutputDriverIndex</span>)
: [[API Sound_GameSystem_GetInputDriverNameByIndex|Sound_GameSystem_GetInputDriverNameByIndex]](<span class="apiarg">InputDriverIndex</span>)
: [[API Sound_GameSystem_GetNumInputDrivers|Sound_GameSystem_GetNumInputDrivers]]()
: [[API Sound_GameSystem_GetNumOutputDrivers|Sound_GameSystem_GetNumOutputDrivers]]()
: [[API Sound_GameSystem_GetOutputDriverNameByIndex|Sound_GameSystem_GetOutputDriverNameByIndex]](<span class="apiarg">OutputDriverIndex</span>)
: [[API Sound_GameSystem_RestartSoundSystem|Sound_GameSystem_RestartSoundSystem]]()

==== Util ====
: [[API CalculateStringEditDistance|CalculateStringEditDistance]](<span class="apiarg">firstString, secondString</span>) - Returns [https://en.wikipedia.org/wiki/Levenshtein_distance Levenshtein] distance.
: [[API CaseAccentInsensitiveParse|CaseAccentInsensitiveParse]](<span class="apiarg">string</span>)

=== Spectator Mode ===
: [[API C_Commentator.AddPlayerOverrideName|C_Commentator.AddPlayerOverrideName]](<span class="apiarg">playerName, overrideName</span>)
: [[API C_Commentator.AddTrackedDefensiveAuras|C_Commentator.AddTrackedDefensiveAuras]](<span class="apiarg">spellIDs</span>)
: [[API C_Commentator.AddTrackedOffensiveAuras|C_Commentator.AddTrackedOffensiveAuras]](<span class="apiarg">spellIDs</span>)
: [[API C_Commentator.AreTeamsSwapped|C_Commentator.AreTeamsSwapped]]() : <span class="apiret">teamsAreSwapped</span>
: [[API C_Commentator.AssignPlayersToTeam|C_Commentator.AssignPlayersToTeam]](<span class="apiarg">playerName, teamName</span>)
: [[API C_Commentator.AssignPlayersToTeamInCurrentInstance|C_Commentator.AssignPlayersToTeamInCurrentInstance]](<span class="apiarg">teamIndex, teamName</span>)
: [[API C_Commentator.AssignPlayerToTeam|C_Commentator.AssignPlayerToTeam]](<span class="apiarg">playerName, teamName</span>)
: [[API C_Commentator.CanUseCommentatorCheats|C_Commentator.CanUseCommentatorCheats]]() : <span class="apiret">canUseCommentatorCheats</span>
: [[API C_Commentator.ClearCameraTarget|C_Commentator.ClearCameraTarget]]()
: [[API C_Commentator.ClearFollowTarget|C_Commentator.ClearFollowTarget]]()
: [[API C_Commentator.ClearLookAtTarget|C_Commentator.ClearLookAtTarget]](<span class="apiarg">[lookAtIndex]</span>)
: [[API C_Commentator.EnterInstance|C_Commentator.EnterInstance]]()
: [[API C_Commentator.ExitInstance|C_Commentator.ExitInstance]]()
: [[API C_Commentator.FindSpectatedUnit|C_Commentator.FindSpectatedUnit]](<span class="apiarg">unitToken</span>) : <span class="apiret">playerIndex, teamIndex, isPet</span>
: [[API C_Commentator.FindTeamNameInCurrentInstance|C_Commentator.FindTeamNameInCurrentInstance]](<span class="apiarg">teamIndex</span>) : <span class="apiret">teamName</span>
: [[API C_Commentator.FindTeamNameInDirectory|C_Commentator.FindTeamNameInDirectory]](<span class="apiarg">playerNames</span>) : <span class="apiret">teamName</span>
: [[API C_Commentator.FlushCommentatorHistory|C_Commentator.FlushCommentatorHistory]]()
: [[API C_Commentator.FollowPlayer|C_Commentator.FollowPlayer]](<span class="apiarg">factionIndex, playerIndex [, forceInstantTransition]</span>)
: [[API C_Commentator.FollowUnit|C_Commentator.FollowUnit]](<span class="apiarg">token</span>)
: [[API C_Commentator.ForceFollowTransition|C_Commentator.ForceFollowTransition]]()
: [[API C_Commentator.GetAdditionalCameraWeight|C_Commentator.GetAdditionalCameraWeight]]() : <span class="apiret">teamIndex, playerIndex</span>
: [[API C_Commentator.GetAdditionalCameraWeightByToken|C_Commentator.GetAdditionalCameraWeightByToken]](<span class="apiarg">unitToken</span>) : <span class="apiret">weight</span>
: [[API C_Commentator.GetAllPlayerOverrideNames|C_Commentator.GetAllPlayerOverrideNames]]() : <span class="apiret">nameEntries</span>
: [[API C_Commentator.GetCamera|C_Commentator.GetCamera]]() : <span class="apiret">xPos, yPos, zPos, yaw, pitch, roll, fov</span>
: [[API C_Commentator.GetCameraCollision|C_Commentator.GetCameraCollision]]() : <span class="apiret">isColliding</span>
: [[API C_Commentator.GetCameraPosition|C_Commentator.GetCameraPosition]]() : <span class="apiret">xPos, yPos, zPos</span>
: [[API C_Commentator.GetCommentatorHistory|C_Commentator.GetCommentatorHistory]]() : <span class="apiret">history</span>
: [[API C_Commentator.GetCurrentMapID|C_Commentator.GetCurrentMapID]]() : <span class="apiret">mapID</span>
: [[API C_Commentator.GetDampeningPercent|C_Commentator.GetDampeningPercent]]() : <span class="apiret">percentage</span>
: [[API C_Commentator.GetDistanceBeforeForcedHorizontalConvergence|C_Commentator.GetDistanceBeforeForcedHorizontalConvergence]]() : <span class="apiret">distance</span>
: [[API C_Commentator.GetDurationToForceHorizontalConvergence|C_Commentator.GetDurationToForceHorizontalConvergence]]() : <span class="apiret">ms</span>
: [[API C_Commentator.GetExcludeDistance|C_Commentator.GetExcludeDistance]]() : <span class="apiret">excludeDistance</span>
: [[API C_Commentator.GetHardlockWeight|C_Commentator.GetHardlockWeight]]() : <span class="apiret">weight</span>
: [[API C_Commentator.GetHorizontalAngleThresholdToSmooth|C_Commentator.GetHorizontalAngleThresholdToSmooth]]() : <span class="apiret">angle</span>
: [[API C_Commentator.GetIndirectSpellID|C_Commentator.GetIndirectSpellID]](<span class="apiarg">trackedSpellID</span>) : <span class="apiret">indirectSpellID</span>
: [[API C_Commentator.GetInstanceInfo|C_Commentator.GetInstanceInfo]](<span class="apiarg">mapIndex, instanceIndex</span>) : <span class="apiret">mapID, mapName, status, instanceIDLow, instanceIDHigh</span>
: [[API C_Commentator.GetLookAtLerpAmount|C_Commentator.GetLookAtLerpAmount]]() : <span class="apiret">amount</span>
: [[API C_Commentator.GetMapInfo|C_Commentator.GetMapInfo]](<span class="apiarg">mapIndex</span>) : <span class="apiret">teamSize, minLevel, maxLevel, numInstances</span>
: [[API C_Commentator.GetMatchDuration|C_Commentator.GetMatchDuration]]() : <span class="apiret">seconds</span>
: [[API C_Commentator.GetMaxNumPlayersPerTeam|C_Commentator.GetMaxNumPlayersPerTeam]]() : <span class="apiret">maxNumPlayersPerTeam</span>
: [[API C_Commentator.GetMaxNumTeams|C_Commentator.GetMaxNumTeams]]() : <span class="apiret">maxNumTeams</span>
: [[API C_Commentator.GetMode|C_Commentator.GetMode]]() : <span class="apiret">commentatorMode</span>
: [[API C_Commentator.GetMsToHoldForHorizontalMovement|C_Commentator.GetMsToHoldForHorizontalMovement]]() : <span class="apiret">ms</span>
: [[API C_Commentator.GetMsToHoldForVerticalMovement|C_Commentator.GetMsToHoldForVerticalMovement]]() : <span class="apiret">ms</span>
: [[API C_Commentator.GetMsToSmoothHorizontalChange|C_Commentator.GetMsToSmoothHorizontalChange]]() : <span class="apiret">ms</span>
: [[API C_Commentator.GetMsToSmoothVerticalChange|C_Commentator.GetMsToSmoothVerticalChange]]() : <span class="apiret">ms</span>
: [[API C_Commentator.GetNumMaps|C_Commentator.GetNumMaps]]() : <span class="apiret">numMaps</span>
: [[API C_Commentator.GetNumPlayers|C_Commentator.GetNumPlayers]](<span class="apiarg">factionIndex</span>) : <span class="apiret">numPlayers</span>
: [[API C_Commentator.GetOrCreateSeries|C_Commentator.GetOrCreateSeries]](<span class="apiarg">teamName1, teamName2</span>) : <span class="apiret">data</span>
: [[API C_Commentator.GetPlayerAuraInfo|C_Commentator.GetPlayerAuraInfo]](<span class="apiarg">teamIndex, playerIndex, spellID</span>) : <span class="apiret">startTime, duration, enable</span>
: [[API C_Commentator.GetPlayerAuraInfoByUnit|C_Commentator.GetPlayerAuraInfoByUnit]](<span class="apiarg">token, spellID</span>) : <span class="apiret">startTime, duration, enable</span>
: [[API C_Commentator.GetPlayerCooldownInfo|C_Commentator.GetPlayerCooldownInfo]](<span class="apiarg">teamIndex, playerIndex, spellID</span>) : <span class="apiret">startTime, duration, enable</span>
: [[API C_Commentator.GetPlayerCooldownInfoByUnit|C_Commentator.GetPlayerCooldownInfoByUnit]](<span class="apiarg">unitToken, spellID</span>) : <span class="apiret">startTime, duration, enable</span>
: [[API C_Commentator.GetPlayerCrowdControlInfo|C_Commentator.GetPlayerCrowdControlInfo]](<span class="apiarg">teamIndex, playerIndex</span>) : <span class="apiret">spellID, expiration, duration</span>
: [[API C_Commentator.GetPlayerCrowdControlInfoByUnit|C_Commentator.GetPlayerCrowdControlInfoByUnit]](<span class="apiarg">token</span>) : <span class="apiret">spellID, expiration, duration</span>
: [[API C_Commentator.GetPlayerData|C_Commentator.GetPlayerData]](<span class="apiarg">teamIndex, playerIndex</span>) : <span class="apiret">info</span>
: [[API C_Commentator.GetPlayerFlagInfo|C_Commentator.GetPlayerFlagInfo]](<span class="apiarg">teamIndex, playerIndex</span>) : <span class="apiret">hasFlag</span>
: [[API C_Commentator.GetPlayerFlagInfoByUnit|C_Commentator.GetPlayerFlagInfoByUnit]](<span class="apiarg">unitToken</span>) : <span class="apiret">hasFlag</span>
: [[API C_Commentator.GetPlayerOverrideName|C_Commentator.GetPlayerOverrideName]](<span class="apiarg">originalName</span>) : <span class="apiret">overrideName</span>
: [[API C_Commentator.GetPlayerSpellCharges|C_Commentator.GetPlayerSpellCharges]](<span class="apiarg">teamIndex, playerIndex, spellID</span>) : <span class="apiret">charges, maxCharges, startTime, duration</span>
: [[API C_Commentator.GetPlayerSpellChargesByUnit|C_Commentator.GetPlayerSpellChargesByUnit]](<span class="apiarg">unitToken, spellID</span>) : <span class="apiret">charges, maxCharges, startTime, duration</span>
: [[API C_Commentator.GetPositionLerpAmount|C_Commentator.GetPositionLerpAmount]]() : <span class="apiret">amount</span>
: [[API C_Commentator.GetSmoothFollowTransitioning|C_Commentator.GetSmoothFollowTransitioning]]() : <span class="apiret">enabled</span>
: [[API C_Commentator.GetSoftlockWeight|C_Commentator.GetSoftlockWeight]]() : <span class="apiret">weight</span>
: [[API C_Commentator.GetSpeedFactor|C_Commentator.GetSpeedFactor]]() : <span class="apiret">factor</span>
: [[API C_Commentator.GetStartLocation|C_Commentator.GetStartLocation]](<span class="apiarg">mapID</span>) : <span class="apiret">pos</span>
: [[API C_Commentator.GetTeamColor|C_Commentator.GetTeamColor]](<span class="apiarg">teamIndex</span>) : <span class="apiret">color</span>
: [[API C_Commentator.GetTeamColorByUnit|C_Commentator.GetTeamColorByUnit]](<span class="apiarg">unitToken</span>) : <span class="apiret">color</span>
: [[API C_Commentator.GetTimeLeftInMatch|C_Commentator.GetTimeLeftInMatch]]() : <span class="apiret">timeLeft</span>
: [[API C_Commentator.GetTrackedSpellID|C_Commentator.GetTrackedSpellID]](<span class="apiarg">indirectSpellID</span>) : <span class="apiret">trackedSpellID</span>
: [[API C_Commentator.GetTrackedSpells|C_Commentator.GetTrackedSpells]](<span class="apiarg">teamIndex, playerIndex, category</span>) : <span class="apiret">spells</span>
: [[API C_Commentator.GetTrackedSpellsByUnit|C_Commentator.GetTrackedSpellsByUnit]](<span class="apiarg">unitToken, category</span>) : <span class="apiret">spells</span>
: [[API C_Commentator.GetUnitData|C_Commentator.GetUnitData]](<span class="apiarg">unitToken</span>) : <span class="apiret">data</span>
: [[API C_Commentator.GetWargameInfo|C_Commentator.GetWargameInfo]](<span class="apiarg">listID</span>) : <span class="apiret">name, minPlayers, maxPlayers, isArena</span>
: [[API C_Commentator.HasTrackedAuras|C_Commentator.HasTrackedAuras]](<span class="apiarg">token</span>) : <span class="apiret">hasOffensiveAura, hasDefensiveAura</span>
: [[API C_Commentator.IsSmartCameraLocked|C_Commentator.IsSmartCameraLocked]]() : <span class="apiret">isSmartCameraLocked</span>
: [[API C_Commentator.IsSpectating|C_Commentator.IsSpectating]]() : <span class="apiret">isSpectating</span>
: [[API C_Commentator.IsTrackedDefensiveAura|C_Commentator.IsTrackedDefensiveAura]](<span class="apiarg">spellID</span>) : <span class="apiret">isDefensiveTrigger</span>
: [[API C_Commentator.IsTrackedOffensiveAura|C_Commentator.IsTrackedOffensiveAura]](<span class="apiarg">spellID</span>) : <span class="apiret">isOffensiveTrigger</span>
: [[API C_Commentator.IsTrackedSpell|C_Commentator.IsTrackedSpell]](<span class="apiarg">teamIndex, playerIndex, spellID, category</span>) : <span class="apiret">isTracked</span>
: [[API C_Commentator.IsTrackedSpellByUnit|C_Commentator.IsTrackedSpellByUnit]](<span class="apiarg">unitToken, spellID, category</span>) : <span class="apiret">isTracked</span>
: [[API C_Commentator.IsUsingSmartCamera|C_Commentator.IsUsingSmartCamera]]() : <span class="apiret">isUsingSmartCamera</span>
: [[API C_Commentator.LookAtPlayer|C_Commentator.LookAtPlayer]](<span class="apiarg">factionIndex, playerIndex [, lookAtIndex]</span>)
: [[API C_Commentator.RemoveAllOverrideNames|C_Commentator.RemoveAllOverrideNames]]()
: [[API C_Commentator.RemovePlayerOverrideName|C_Commentator.RemovePlayerOverrideName]](<span class="apiarg">originalPlayerName</span>)
: [[API C_Commentator.RequestPlayerCooldownInfo|C_Commentator.RequestPlayerCooldownInfo]](<span class="apiarg">teamIndex, playerIndex</span>)
: [[API C_Commentator.ResetFoVTarget|C_Commentator.ResetFoVTarget]]()
: [[API C_Commentator.ResetSeriesScores|C_Commentator.ResetSeriesScores]](<span class="apiarg">teamName1, teamName2</span>)
: [[API C_Commentator.ResetSettings|C_Commentator.ResetSettings]]()
: [[API C_Commentator.ResetTrackedAuras|C_Commentator.ResetTrackedAuras]]()
: [[API C_Commentator.SetAdditionalCameraWeight|C_Commentator.SetAdditionalCameraWeight]](<span class="apiarg">teamIndex, playerIndex, weight</span>)
: [[API C_Commentator.SetAdditionalCameraWeightByToken|C_Commentator.SetAdditionalCameraWeightByToken]](<span class="apiarg">unitToken, weight</span>)
: [[API C_Commentator.SetBlocklistedAuras|C_Commentator.SetBlocklistedAuras]](<span class="apiarg">spellIDs</span>)
: [[API C_Commentator.SetBlocklistedCooldowns|C_Commentator.SetBlocklistedCooldowns]](<span class="apiarg">specID, spellIDs</span>)
: [[API C_Commentator.SetCamera|C_Commentator.SetCamera]](<span class="apiarg">xPos, yPos, zPos, yaw, pitch, roll, fov</span>)
: [[API C_Commentator.SetCameraCollision|C_Commentator.SetCameraCollision]](<span class="apiarg">collide</span>)
: [[API C_Commentator.SetCameraPosition|C_Commentator.SetCameraPosition]](<span class="apiarg">xPos, yPos, zPos, snapToLocation</span>)
: [[API C_Commentator.SetCheatsEnabled|C_Commentator.SetCheatsEnabled]](<span class="apiarg">enableCheats</span>)
: [[API C_Commentator.SetCommentatorHistory|C_Commentator.SetCommentatorHistory]](<span class="apiarg">history</span>)
: [[API C_Commentator.SetDistanceBeforeForcedHorizontalConvergence|C_Commentator.SetDistanceBeforeForcedHorizontalConvergence]](<span class="apiarg">distance</span>)
: [[API C_Commentator.SetDurationToForceHorizontalConvergence|C_Commentator.SetDurationToForceHorizontalConvergence]](<span class="apiarg">ms</span>)
: [[API C_Commentator.SetExcludeDistance|C_Commentator.SetExcludeDistance]](<span class="apiarg">excludeDistance</span>)
: [[API C_Commentator.SetFollowCameraSpeeds|C_Commentator.SetFollowCameraSpeeds]](<span class="apiarg">elasticSpeed, minSpeed</span>)
: [[API C_Commentator.SetHardlockWeight|C_Commentator.SetHardlockWeight]](<span class="apiarg">weight</span>)
: [[API C_Commentator.SetHorizontalAngleThresholdToSmooth|C_Commentator.SetHorizontalAngleThresholdToSmooth]](<span class="apiarg">angle</span>)
: [[API C_Commentator.SetLookAtLerpAmount|C_Commentator.SetLookAtLerpAmount]](<span class="apiarg">amount</span>)
: [[API C_Commentator.SetMapAndInstanceIndex|C_Commentator.SetMapAndInstanceIndex]](<span class="apiarg">mapIndex, instanceIndex</span>)
: [[API C_Commentator.SetMouseDisabled|C_Commentator.SetMouseDisabled]](<span class="apiarg">disabled</span>)
: [[API C_Commentator.SetMoveSpeed|C_Commentator.SetMoveSpeed]](<span class="apiarg">newSpeed</span>)
: [[API C_Commentator.SetMsToHoldForHorizontalMovement|C_Commentator.SetMsToHoldForHorizontalMovement]](<span class="apiarg">ms</span>)
: [[API C_Commentator.SetMsToHoldForVerticalMovement|C_Commentator.SetMsToHoldForVerticalMovement]](<span class="apiarg">ms</span>)
: [[API C_Commentator.SetMsToSmoothHorizontalChange|C_Commentator.SetMsToSmoothHorizontalChange]](<span class="apiarg">ms</span>)
: [[API C_Commentator.SetMsToSmoothVerticalChange|C_Commentator.SetMsToSmoothVerticalChange]](<span class="apiarg">ms</span>)
: [[API C_Commentator.SetPositionLerpAmount|C_Commentator.SetPositionLerpAmount]](<span class="apiarg">amount</span>)
: [[API C_Commentator.SetRequestedDebuffCooldowns|C_Commentator.SetRequestedDebuffCooldowns]](<span class="apiarg">specID, spellIDs</span>)
: [[API C_Commentator.SetRequestedDefensiveCooldowns|C_Commentator.SetRequestedDefensiveCooldowns]](<span class="apiarg">specID, spellIDs</span>)
: [[API C_Commentator.SetRequestedOffensiveCooldowns|C_Commentator.SetRequestedOffensiveCooldowns]](<span class="apiarg">specID, spellIDs</span>)
: [[API C_Commentator.SetSeriesScore|C_Commentator.SetSeriesScore]](<span class="apiarg">teamName1, teamName2, scoringTeamName, score</span>)
: [[API C_Commentator.SetSeriesScores|C_Commentator.SetSeriesScores]](<span class="apiarg">teamName1, teamName2, score1, score2</span>)
: [[API C_Commentator.SetSmartCameraLocked|C_Commentator.SetSmartCameraLocked]](<span class="apiarg">locked</span>)
: [[API C_Commentator.SetSmoothFollowTransitioning|C_Commentator.SetSmoothFollowTransitioning]](<span class="apiarg">enabled</span>)
: [[API C_Commentator.SetSoftlockWeight|C_Commentator.SetSoftlockWeight]](<span class="apiarg">weight</span>)
: [[API C_Commentator.SetSpeedFactor|C_Commentator.SetSpeedFactor]](<span class="apiarg">factor</span>)
: [[API C_Commentator.SetTargetHeightOffset|C_Commentator.SetTargetHeightOffset]](<span class="apiarg">offset</span>)
: [[API C_Commentator.SetUseSmartCamera|C_Commentator.SetUseSmartCamera]](<span class="apiarg">useSmartCamera</span>)
: [[API C_Commentator.SnapCameraLookAtPoint|C_Commentator.SnapCameraLookAtPoint]]()
: [[API C_Commentator.StartWargame|C_Commentator.StartWargame]](<span class="apiarg">listID, teamSize, tournamentRules, teamOneCaptain, teamTwoCaptain</span>)
: [[API C_Commentator.SwapTeamSides|C_Commentator.SwapTeamSides]]()
: [[API C_Commentator.ToggleCheats|C_Commentator.ToggleCheats]]()
: [[API C_Commentator.UpdateMapInfo|C_Commentator.UpdateMapInfo]](<span class="apiarg">[targetPlayer]</span>)
: [[API C_Commentator.UpdatePlayerInfo|C_Commentator.UpdatePlayerInfo]]()
: [[API C_Commentator.ZoomIn|C_Commentator.ZoomIn]]()
: [[API C_Commentator.ZoomOut|C_Commentator.ZoomOut]]()

=== Tutorials ===
: [[API C_PlayerInfo.IsPlayerEligibleForNPE|C_PlayerInfo.IsPlayerEligibleForNPE]]() : <span class="apiret">isEligible, failureReason</span>
: [[API C_PlayerInfo.IsPlayerEligibleForNPEv2|C_PlayerInfo.IsPlayerEligibleForNPEv2]]() : <span class="apiret">isEligible, failureReason</span>
: [[API C_PlayerInfo.IsPlayerNPERestricted|C_PlayerInfo.IsPlayerNPERestricted]]() : <span class="apiret">isRestricted</span>
: [[API C_SplashScreen.AcknowledgeSplash|C_SplashScreen.AcknowledgeSplash]]()
: [[API C_SplashScreen.CanViewSplashScreen|C_SplashScreen.CanViewSplashScreen]]() : <span class="apiret">canView</span>
: [[API C_SplashScreen.RequestLatestSplashScreen|C_SplashScreen.RequestLatestSplashScreen]](<span class="apiarg">fromGameMenu</span>)
: [[API C_StableInfo.GetNumActivePets|C_StableInfo.GetNumActivePets]]() : <span class="apiret">numActivePets</span>
: [[API C_StableInfo.GetNumStablePets|C_StableInfo.GetNumStablePets]]() : <span class="apiret">numStablePets</span>
: [[API C_Tutorial.AbandonTutorialArea|C_Tutorial.AbandonTutorialArea]]()
: [[API C_Tutorial.ReturnToTutorialArea|C_Tutorial.ReturnToTutorialArea]]()
: [[API CanResetTutorials|CanResetTutorials]]()
: [[API ClearTutorials|ClearTutorials]]()
: [[API ClosestGameObjectPosition|ClosestGameObjectPosition]](<span class="apiarg">gameObjectID</span>)
: [[API ClosestUnitPosition|ClosestUnitPosition]](<span class="apiarg">creatureID</span>) - Returns the unit position of the closest creature by ID. Only works for mobs in the starting zones.
: [[API FlagTutorial|FlagTutorial]](<span class="apiarg">tutorial</span>)
: [[API GetNextCompleatedTutorial|GetNextCompleatedTutorial]](<span class="apiarg">tutorial</span>)
: [[API GetPrevCompleatedTutorial|GetPrevCompleatedTutorial]](<span class="apiarg">tutorial</span>)
: [[API GetTutorialsEnabled|GetTutorialsEnabled]]()
: [[API IsSplashFramePrimaryFeatureUnlocked|IsSplashFramePrimaryFeatureUnlocked]]()
: [[API IsTutorialFlagged|IsTutorialFlagged]](<span class="apiarg">tutorial</span>)
: [[API RequestBottomLeftActionBar|RequestBottomLeftActionBar]]()
: [[API ResetTutorials|ResetTutorials]]()
: [[API ShouldShowSpecialSplashScreen|ShouldShowSpecialSplashScreen]]()
: [[API SplashFrameCanBeShown|SplashFrameCanBeShown]]()
: [[API TriggerTutorial|TriggerTutorial]](<span class="apiarg">tutorial</span>)

=== UI Objects ===
: [[API GetFileIDFromPath|GetFileIDFromPath]](<span class="apiarg">filePath</span>) - Returns the fileID corresponding to the given game file path (texture, sound, model, etc.).
: [[API SetUIVisibility|SetUIVisibility]](<span class="apiarg">visible</span>) - Hides or shows the entire UI.
: <small>UI</small> [[API EasyMenu|EasyMenu]](<span class="apiarg">menuList, menuFrame, anchor, x, y, displayMode, autoHideDelay</span>)
: <small>UI</small> [[API ToggleDropDownMenu|ToggleDropDownMenu]](<span class="apiarg">level, value, dropDownFrame, anchorName, xOffset, yOffset</span>)

==== Frame ====
: [[API C_FrameManager.GetFrameVisibilityState|C_FrameManager.GetFrameVisibilityState]](<span class="apiarg">frameType</span>) : <span class="apiret">shouldShow</span>
: [[API CreateFrame|CreateFrame]](<span class="apiarg">frameType [, frameName, parentFrame, inheritsFrame, id]</span>) - Create a new frame of the specified type.
: [[API DoesTemplateExist|DoesTemplateExist]](<span class="apiarg">template</span>) - Returns if a virtual frame template exists.
: [[API EnumerateFrames|EnumerateFrames]](<span class="apiarg">currentFrame</span>) - Get the Frame which follows currentFrame.
: [[API GetClickFrame|GetClickFrame]](<span class="apiarg">name</span>)
: [[API GetCurrentKeyBoardFocus|GetCurrentKeyBoardFocus]]() - Returns the [editbox] widget currently handling keyboard events.
: [[API GetDefaultScale|GetDefaultScale]]()
: [[API GetFramesRegisteredForEvent|GetFramesRegisteredForEvent]](<span class="apiarg">event</span>) - Returns a list of frames that are registered for the given event.
: [[API GetMouseButtonName|GetMouseButtonName]]()
: [[API GetMouseClickFocus|GetMouseClickFocus]]()
: [[API GetMouseFocus|GetMouseFocus]]() - Returns the frame that currently has the mouse focus.
: [[API GetMouseMotionFocus|GetMouseMotionFocus]]()
: [[API GetNumFrames|GetNumFrames]]() - Get the current number of Frame (and derivative) objects.
: [[API SetupFullscreenScale|SetupFullscreenScale]](<span class="apiarg">frame</span>) - Configures scale of full-screen views, such as the world map, to best fill screen.
: <small>UI</small> [[API MouseIsOver|MouseIsOver]](<span class="apiarg">region, topOffset, bottomOffset, leftOffset, rightOffset</span>) - Checks whether the mouse is over the frame (or within specified offsets).
: <small>UI</small> [[API UIFrameFadeIn|UIFrameFadeIn]](<span class="apiarg">frame, timeToFade, startAlpha, endAlpha</span>) - Fades a frame in.
: <small>UI</small> [[API UIFrameFadeOut|UIFrameFadeOut]](<span class="apiarg">frame, timeToFade, startAlpha, endAlpha</span>) - Fades a frame out.

==== Font ====
: [[API CreateFont|CreateFont]](<span class="apiarg">name</span>) - Dynamically creates a font object.
: [[API GetFontInfo|GetFontInfo]](<span class="apiarg">font or name</span>)
: [[API GetFonts|GetFonts]]() - Returns all available fonts.

==== Texture ====
: [[API C_Texture.GetAtlasInfo|C_Texture.GetAtlasInfo]](<span class="apiarg">atlas</span>) : <span class="apiret">info</span> - Returns atlas info.
: [[API GetObjectIconTextureCoords|GetObjectIconTextureCoords]](<span class="apiarg">textureIndex</span>)
: [[API SetPortraitTexture|SetPortraitTexture]](<span class="apiarg">textureObject, unitToken</span>) - Sets a texture to a unit's 2D portrait.
: [[API SetPortraitToTexture|SetPortraitToTexture]](<span class="apiarg">textureObject, texturePath</span>) - Applies a circular mask to a texture, making it resemble a portrait.
: <small>UI</small> [https://www.townlong-yak.com/framexml/go/CreateAtlasMarkup CreateAtlasMarkup](<span class="apiarg">atlasName [, height, width, offsetX, offsetY]</span>) - Returns a texture fontstring for an atlas.
: <small>UI</small> [https://www.townlong-yak.com/framexml/go/CreateTextureMarkup CreateTextureMarkup](<span class="apiarg">file, fileWidth, fileHeight, width, height, left, right, top, bottom [, xOffset, yOffset]</span>) - Returns a texture fontstring.
: <small>UI</small> [https://www.townlong-yak.com/framexml/go/GetTextureInfo GetTextureInfo](<span class="apiarg">obj</span>) - Returns the type and info of a texture.

==== ModelScene ====
: [[API C_ModelInfo.AddActiveModelScene|C_ModelInfo.AddActiveModelScene]](<span class="apiarg">modelSceneFrame, modelSceneID</span>)
: [[API C_ModelInfo.AddActiveModelSceneActor|C_ModelInfo.AddActiveModelSceneActor]](<span class="apiarg">modelSceneFrameActor, modelSceneActorID</span>)
: [[API C_ModelInfo.ClearActiveModelScene|C_ModelInfo.ClearActiveModelScene]](<span class="apiarg">modelSceneFrame</span>)
: [[API C_ModelInfo.ClearActiveModelSceneActor|C_ModelInfo.ClearActiveModelSceneActor]](<span class="apiarg">modelSceneFrameActor</span>)
: [[API C_ModelInfo.GetModelSceneActorDisplayInfoByID|C_ModelInfo.GetModelSceneActorDisplayInfoByID]](<span class="apiarg">modelActorDisplayID</span>) : <span class="apiret">actorDisplayInfo</span>
: [[API C_ModelInfo.GetModelSceneActorInfoByID|C_ModelInfo.GetModelSceneActorInfoByID]](<span class="apiarg">modelActorID</span>) : <span class="apiret">actorInfo</span>
: [[API C_ModelInfo.GetModelSceneCameraInfoByID|C_ModelInfo.GetModelSceneCameraInfoByID]](<span class="apiarg">modelSceneCameraID</span>) : <span class="apiret">modelSceneCameraInfo</span>
: [[API C_ModelInfo.GetModelSceneInfoByID|C_ModelInfo.GetModelSceneInfoByID]](<span class="apiarg">modelSceneID</span>) : <span class="apiret">modelSceneType, modelCameraIDs, modelActorsIDs</span>
: [[API GetUICameraInfo|GetUICameraInfo]](<span class="apiarg">uiCameraID</span>)

==== Blizzard ====
Used internally for the Blizzard_PrototypeDialog addon.
: [[API C_PrototypeDialog.EnsureRemoved|C_PrototypeDialog.EnsureRemoved]](<span class="apiarg">instanceID</span>)
: [[API C_PrototypeDialog.SelectOption|C_PrototypeDialog.SelectOption]](<span class="apiarg">instanceID, optionIndex</span>)

==== Toasts ====
: [[API C_EventToastManager.GetLevelUpDisplayToastsFromLevel|C_EventToastManager.GetLevelUpDisplayToastsFromLevel]](<span class="apiarg">level</span>) : <span class="apiret">toastInfo</span>
: [[API C_EventToastManager.GetNextToastToDisplay|C_EventToastManager.GetNextToastToDisplay]]() : <span class="apiret">toastInfo</span>
: [[API C_EventToastManager.RemoveCurrentToast|C_EventToastManager.RemoveCurrentToast]]()

=== UI Widget Manager ===
The UI widget system was added in [[Patch_8.0.1/API_changes|Patch 8.0.1]] to replace the WorldStateFrame. It renders the UI elements used for e.g. PvP objectives.

Position
: [[API C_UIWidgetManager.GetAllWidgetsBySetID|C_UIWidgetManager.GetAllWidgetsBySetID]](<span class="apiarg">setID</span>) : <span class="apiret">widgets</span> - Returns all widgets for a widget set ID.
: [[API C_UIWidgetManager.GetBelowMinimapWidgetSetID|C_UIWidgetManager.GetBelowMinimapWidgetSetID]]() : <span class="apiret">setID</span>
: [[API C_UIWidgetManager.GetObjectiveTrackerWidgetSetID|C_UIWidgetManager.GetObjectiveTrackerWidgetSetID]]() : <span class="apiret">setID</span>
: [[API C_UIWidgetManager.GetPowerBarWidgetSetID|C_UIWidgetManager.GetPowerBarWidgetSetID]]() : <span class="apiret">setID</span>
: [[API C_UIWidgetManager.GetTopCenterWidgetSetID|C_UIWidgetManager.GetTopCenterWidgetSetID]]() : <span class="apiret">setID</span> - Returns the widget set ID for the top center part of the screen.
: [[API C_UIWidgetManager.GetWidgetSetInfo|C_UIWidgetManager.GetWidgetSetInfo]](<span class="apiarg">widgetSetID</span>) : <span class="apiret">widgetSetInfo</span>
Visualization
: [[API C_UIWidgetManager.GetBulletTextListWidgetVisualizationInfo|C_UIWidgetManager.GetBulletTextListWidgetVisualizationInfo]](<span class="apiarg">widgetID</span>) : <span class="apiret">widgetInfo</span>
: [[API C_UIWidgetManager.GetCaptureBarWidgetVisualizationInfo|C_UIWidgetManager.GetCaptureBarWidgetVisualizationInfo]](<span class="apiarg">widgetID</span>) : <span class="apiret">widgetInfo</span>
: [[API C_UIWidgetManager.GetCaptureZoneVisualizationInfo|C_UIWidgetManager.GetCaptureZoneVisualizationInfo]](<span class="apiarg">widgetID</span>) : <span class="apiret">widgetInfo</span>
: [[API C_UIWidgetManager.GetDiscreteProgressStepsVisualizationInfo|C_UIWidgetManager.GetDiscreteProgressStepsVisualizationInfo]](<span class="apiarg">widgetID</span>) : <span class="apiret">widgetInfo</span>
: [[API C_UIWidgetManager.GetDoubleIconAndTextWidgetVisualizationInfo|C_UIWidgetManager.GetDoubleIconAndTextWidgetVisualizationInfo]](<span class="apiarg">widgetID</span>) : <span class="apiret">widgetInfo</span>
: [[API C_UIWidgetManager.GetDoubleStateIconRowVisualizationInfo|C_UIWidgetManager.GetDoubleStateIconRowVisualizationInfo]](<span class="apiarg">widgetID</span>) : <span class="apiret">widgetInfo</span>
: [[API C_UIWidgetManager.GetDoubleStatusBarWidgetVisualizationInfo|C_UIWidgetManager.GetDoubleStatusBarWidgetVisualizationInfo]](<span class="apiarg">widgetID</span>) : <span class="apiret">widgetInfo</span>
: [[API C_UIWidgetManager.GetHorizontalCurrenciesWidgetVisualizationInfo|C_UIWidgetManager.GetHorizontalCurrenciesWidgetVisualizationInfo]](<span class="apiarg">widgetID</span>) : <span class="apiret">widgetInfo</span>
: [[API C_UIWidgetManager.GetIconAndTextWidgetVisualizationInfo|C_UIWidgetManager.GetIconAndTextWidgetVisualizationInfo]](<span class="apiarg">widgetID</span>) : <span class="apiret">widgetInfo</span>
: [[API C_UIWidgetManager.GetIconTextAndBackgroundWidgetVisualizationInfo|C_UIWidgetManager.GetIconTextAndBackgroundWidgetVisualizationInfo]](<span class="apiarg">widgetID</span>) : <span class="apiret">widgetInfo</span>
: [[API C_UIWidgetManager.GetIconTextAndCurrenciesWidgetVisualizationInfo|C_UIWidgetManager.GetIconTextAndCurrenciesWidgetVisualizationInfo]](<span class="apiarg">widgetID</span>) : <span class="apiret">widgetInfo</span>
: [[API C_UIWidgetManager.GetScenarioHeaderCurrenciesAndBackgroundWidgetVisualizationInfo|C_UIWidgetManager.GetScenarioHeaderCurrenciesAndBackgroundWidgetVisualizationInfo]](<span class="apiarg">widgetID</span>) : <span class="apiret">widgetInfo</span>
: [[API C_UIWidgetManager.GetScenarioHeaderTimerWidgetVisualizationInfo|C_UIWidgetManager.GetScenarioHeaderTimerWidgetVisualizationInfo]](<span class="apiarg">widgetID</span>) : <span class="apiret">widgetInfo</span>
: [[API C_UIWidgetManager.GetSpacerVisualizationInfo|C_UIWidgetManager.GetSpacerVisualizationInfo]](<span class="apiarg">widgetID</span>) : <span class="apiret">widgetInfo</span>
: [[API C_UIWidgetManager.GetSpellDisplayVisualizationInfo|C_UIWidgetManager.GetSpellDisplayVisualizationInfo]](<span class="apiarg">widgetID</span>) : <span class="apiret">widgetInfo</span>
: [[API C_UIWidgetManager.GetStackedResourceTrackerWidgetVisualizationInfo|C_UIWidgetManager.GetStackedResourceTrackerWidgetVisualizationInfo]](<span class="apiarg">widgetID</span>) : <span class="apiret">widgetInfo</span>
: [[API C_UIWidgetManager.GetStatusBarWidgetVisualizationInfo|C_UIWidgetManager.GetStatusBarWidgetVisualizationInfo]](<span class="apiarg">widgetID</span>) : <span class="apiret">widgetInfo</span>
: [[API C_UIWidgetManager.GetTextColumnRowVisualizationInfo|C_UIWidgetManager.GetTextColumnRowVisualizationInfo]](<span class="apiarg">widgetID</span>) : <span class="apiret">widgetInfo</span>
: [[API C_UIWidgetManager.GetTextureAndTextRowVisualizationInfo|C_UIWidgetManager.GetTextureAndTextRowVisualizationInfo]](<span class="apiarg">widgetID</span>) : <span class="apiret">widgetInfo</span>
: [[API C_UIWidgetManager.GetTextureAndTextVisualizationInfo|C_UIWidgetManager.GetTextureAndTextVisualizationInfo]](<span class="apiarg">widgetID</span>) : <span class="apiret">widgetInfo</span>
: [[API C_UIWidgetManager.GetTextureWithAnimationVisualizationInfo|C_UIWidgetManager.GetTextureWithAnimationVisualizationInfo]](<span class="apiarg">widgetID</span>) : <span class="apiret">widgetInfo</span>
: [[API C_UIWidgetManager.GetTextWithStateWidgetVisualizationInfo|C_UIWidgetManager.GetTextWithStateWidgetVisualizationInfo]](<span class="apiarg">widgetID</span>) : <span class="apiret">widgetInfo</span>
: [[API C_UIWidgetManager.GetZoneControlVisualizationInfo|C_UIWidgetManager.GetZoneControlVisualizationInfo]](<span class="apiarg">widgetID</span>) : <span class="apiret">widgetInfo</span>

: [[API C_UIWidgetManager.RegisterUnitForWidgetUpdates|C_UIWidgetManager.RegisterUnitForWidgetUpdates]](<span class="apiarg">unitToken [, isGuid]</span>)
: [[API C_UIWidgetManager.SetProcessingUnit|C_UIWidgetManager.SetProcessingUnit]](<span class="apiarg">[unit]</span>)
: [[API C_UIWidgetManager.SetProcessingUnitGuid|C_UIWidgetManager.SetProcessingUnitGuid]](<span class="apiarg">[unit]</span>)
: [[API C_UIWidgetManager.UnregisterUnitForWidgetUpdates|C_UIWidgetManager.UnregisterUnitForWidgetUpdates]](<span class="apiarg">unitToken [, isGuid]</span>)
: [[API C_TaskQuest.GetUIWidgetSetIDFromQuestID|C_TaskQuest.GetUIWidgetSetIDFromQuestID]](<span class="apiarg">questID</span>) : <span class="apiret">UiWidgetSetID</span>
: [[API C_Widget.IsFrameWidget|C_Widget.IsFrameWidget]]()
: [[API C_Widget.IsRenderableWidget|C_Widget.IsRenderableWidget]]()
: [[API C_Widget.IsWidget|C_Widget.IsWidget]](<span class="apiarg">object</span>)
: [[API UnitWidgetSet|UnitWidgetSet]](<span class="apiarg">unit</span>) : <span class="apiret">uiWidgetSet</span>

=== Units ===
These are functions which act on one or more units. Units are identified by [[UnitId]]s.
: [[API C_PlayerInfo.GetContentDifficultyCreatureForPlayer|C_PlayerInfo.GetContentDifficultyCreatureForPlayer]](<span class="apiarg">unitToken</span>) : <span class="apiret">difficulty</span>
: [[API GetThreatStatusColor|GetThreatStatusColor]](<span class="apiarg">status</span>) - Returns RGB values for a given UnitThreatSituation return value.
: [[API GetUnitChargedPowerPoints|GetUnitChargedPowerPoints]](<span class="apiarg">unit</span>) : <span class="apiret">pointIndices</span>
: [[API GetUnitSpeed|GetUnitSpeed]](<span class="apiarg">unit</span>) - Returns the moving speed of the unit.
: [[API UnitAffectingCombat|UnitAffectingCombat]](<span class="apiarg">unit</span>) - Determine if the unit is in combat or has aggro. (returns nil if "false" and 1 if "true")
: [[API UnitArmor|UnitArmor]](<span class="apiarg">unit</span>) - Returns the armor statistics relevant to the specified unit.
: [[API UnitAttackPower|UnitAttackPower]](<span class="apiarg">unit</span>) - Returns the unit's melee attack power and modifiers.
: [[API UnitAttackSpeed|UnitAttackSpeed]](<span class="apiarg">unit</span>) - Returns the unit's melee attack speed for each hand.
: [[API UnitCanAssist|UnitCanAssist]](<span class="apiarg">unit, otherUnit</span>) - Indicates whether the first unit can assist the second unit.
: [[API UnitCanAttack|UnitCanAttack]](<span class="apiarg">unit, otherUnit</span>) - Returns true if the first unit can attack the second, false otherwise.
: [[API UnitCanCooperate|UnitCanCooperate]](<span class="apiarg">unit, otherUnit</span>) - Returns true if the first unit can cooperate with the second, false otherwise.
: [[API UnitCanPetBattle|UnitCanPetBattle]]()
: [[API UnitCastingInfo|UnitCastingInfo]](<span class="apiarg">unit</span>) - Returns information about the spell currently being cast by the specified unit.
: [[API UnitChannelInfo|UnitChannelInfo]](<span class="apiarg">unit</span>) - Returns information about the spell currently being channeled by the specified unit.
: [[API UnitClass|UnitClass]](<span class="apiarg">unit</span>) : <span class="apiret">className, classFilename, classID</span> - Returns the class name of the specified unit (e.g., "Warrior" or "Shaman").
: [[API UnitClassBase|UnitClassBase]](<span class="apiarg">unit</span>) : <span class="apiret">classFilename, classID</span>
: [[API UnitClassification|UnitClassification]](<span class="apiarg">unit</span>) - Returns the classification of the specified unit (e.g., "elite" or "worldboss").
: [[API UnitCreatureFamily|UnitCreatureFamily]](<span class="apiarg">unit</span>) - Returns the type of creature of the specified unit (e.g., "Crab").
: [[API UnitCreatureType|UnitCreatureType]](<span class="apiarg">unit</span>) - Returns the classification type of creature of the specified unit (e.g., "Beast").
: [[API UnitDamage|UnitDamage]](<span class="apiarg">unit</span>) - Returns the damage statistics relevant to the specified unit.
: [[API UnitDetailedThreatSituation|UnitDetailedThreatSituation]](<span class="apiarg">unit, unitMob</span>) - Returns detailed information about the specified unit's threat on a mob.
: [[API UnitDistanceSquared|UnitDistanceSquared]](<span class="apiarg">unit</span>) - Returns the squared distance to a unit in your group.
: [[API UnitEffectiveLevel|UnitEffectiveLevel]](<span class="apiarg">unit</span>) - Returns the unit's effective (scaled) level.
: [[API UnitExists|UnitExists]](<span class="apiarg">unit</span>) - Returns 1 if the specified unit exists, nil otherwise.
: [[API UnitFactionGroup|UnitFactionGroup]](<span class="apiarg">unit</span>) - Returns the faction group id and name of the specified unit. (eg. "Alliance") - string returned is localization-independent (used in filepath)
: [[API UnitFullName|UnitFullName]](<span class="apiarg">unit</span>) - Returns the player's (unit's) name and server.
: [[API UnitGetAvailableRoles|UnitGetAvailableRoles]]()
: [[API UnitGetIncomingHeals|UnitGetIncomingHeals]](<span class="apiarg">unit [, healer]</span>) - Returns the predicted heals cast on the specified unit.
: [[API UnitGetTotalAbsorbs|UnitGetTotalAbsorbs]](<span class="apiarg">unit</span>) - Returns the total amount of damage the unit can absorb before losing health.
: [[API UnitGetTotalHealAbsorbs|UnitGetTotalHealAbsorbs]](<span class="apiarg">unit</span>) - Returns the total amount of healing the unit can absorb without gaining health.
: [[API UnitGroupRolesAssigned|UnitGroupRolesAssigned]](<span class="apiarg">unit</span>) - Returns the assigned role in a group formed via the Dungeon Finder Tool.
: [[API UnitGUID|UnitGUID]](<span class="apiarg">unit</span>) - Returns the GUID as a string for the specified unit matching the GUIDs used by the new combat logs.
: [[API UnitHasIncomingResurrection|UnitHasIncomingResurrection]](<span class="apiarg">unit</span>) - Returns whether the unit is currently being resurrected.
: [[API UnitHasLFGDeserter|UnitHasLFGDeserter]](<span class="apiarg">unit</span>) - Returns whether the unit is currently unable to use the dungeon finder due to leaving a group prematurely.
: [[API UnitHasLFGRandomCooldown|UnitHasLFGRandomCooldown]](<span class="apiarg">unit</span>) - Returns whether the unit is currently under the effects of the random dungeon cooldown.
: [[API UnitHasRelicSlot|UnitHasRelicSlot]](<span class="apiarg">unit</span>)
: [[API UnitHealth|UnitHealth]](<span class="apiarg">unit</span>) - Returns the current health, in points, of the specified unit.
: [[API UnitHealthMax|UnitHealthMax]](<span class="apiarg">unit</span>) - Returns the maximum health, in points, of the specified unit.
: [[API UnitHPPerStamina|UnitHPPerStamina]]()
: [[API UnitInOtherParty|UnitInOtherParty]]()
: [[API UnitInRange|UnitInRange]](<span class="apiarg">unit</span>) - Returns true if the unit (party or raid only) is in range of a typical spell such as flash heal.
: [[API UnitIsAFK|UnitIsAFK]](<span class="apiarg">unit</span>) - Only works for friendly units.
: [[API UnitIsCharmed|UnitIsCharmed]](<span class="apiarg">unit</span>) - Returns true if the specified unit is charmed, false otherwise.
: [[API UnitIsConnected|UnitIsConnected]](<span class="apiarg">unit</span>) : <span class="apiret">isConnected</span> - Returns 1 if the specified unit is connected or npc, nil if offline or not a valid unit.
: [[API UnitIsControlling|UnitIsControlling]](<span class="apiarg">unit</span>) - Returns true if the local player is directly controlling the specified unit.
: [[API UnitIsCorpse|UnitIsCorpse]](<span class="apiarg">unit</span>) - Returns true if the specified unit is a corpse, false otherwise.
: [[API UnitIsDead|UnitIsDead]](<span class="apiarg">unit</span>) - Returns true if the specified unit is dead, nil otherwise.
: [[API UnitIsDeadOrGhost|UnitIsDeadOrGhost]](<span class="apiarg">unit</span>) - Returns true if the specified unit is dead or a ghost, nil otherwise.
: [[API UnitIsDND|UnitIsDND]](<span class="apiarg">unit</span>) - Only works for friendly units.
: [[API UnitIsEnemy|UnitIsEnemy]](<span class="apiarg">unit, otherUnit</span>) - Returns true if the specified units are enemies, false otherwise.
: [[API UnitIsFeignDeath|UnitIsFeignDeath]](<span class="apiarg">unit</span>) - Returns true if the specified unit (must be a member of your group) is feigning death.
: [[API UnitIsFriend|UnitIsFriend]](<span class="apiarg">unit, otherUnit</span>) - Returns true if the specified units are friends (PC of same faction or friendly NPC), false otherwise.
: [[API UnitIsGhost|UnitIsGhost]](<span class="apiarg">unit</span>) - Returns true if the specified unit is a ghost, false otherwise.
: [[API UnitIsGroupAssistant|UnitIsGroupAssistant]]()
: [[API UnitIsInMyGuild|UnitIsInMyGuild]](<span class="apiarg">unit</span>) - Returns whether the specified unit is in the same guild as the player's character.
: [[API UnitIsOtherPlayersPet|UnitIsOtherPlayersPet]]()
: [[API UnitIsOwnerOrControllerOfUnit|UnitIsOwnerOrControllerOfUnit]](<span class="apiarg">controllingUnit, controlledUnit</span>) : <span class="apiret">unitIsOwnerOrControllerOfUnit</span>
: [[API UnitIsPlayer|UnitIsPlayer]](<span class="apiarg">unit</span>) - Returns true if the specified unit is a player character, false otherwise.
: [[API UnitIsPossessed|UnitIsPossessed]](<span class="apiarg">unit</span>) - Returns whether the specified unit is currently under control of another (i.e. "pet" when casting Mind Control).
: [[API UnitIsQuestBoss|UnitIsQuestBoss]](<span class="apiarg">unit</span>) - Returns true if the specified unit is the "boss" (objective) of a kill quest. If true, then the default UI displays a shield with a yellow "!" on it on the unit's unitframe.
: [[API UnitIsRaidOfficer|UnitIsRaidOfficer]](<span class="apiarg">unit</span>) - Returns whether the specified unit is an officer in your raid.
: [[API UnitIsSameServer|UnitIsSameServer]](<span class="apiarg">unit</span>) - Returns whether the specified unit is from the same server as the player's character.
: [[API UnitIsTapDenied|UnitIsTapDenied]]()
: [[API UnitIsTrivial|UnitIsTrivial]](<span class="apiarg">unit</span>) - Returns true if the specified unit is trivial (Trivial means the unit is "grey" to the player. false otherwise.
: [[API UnitIsUnconscious|UnitIsUnconscious]]()
: [[API UnitIsUnit|UnitIsUnit]](<span class="apiarg">unit, otherUnit</span>) - Determine if two units are the same unit.
: [[API UnitIsVisible|UnitIsVisible]](<span class="apiarg">unit</span>) - 1 if visible, nil if not.
: [[API UnitLeadsAnyGroup|UnitLeadsAnyGroup]]()
: [[API UnitLevel|UnitLevel]](<span class="apiarg">unit</span>) - Returns the level of a unit.
: [[API UnitName|UnitName]](<span class="apiarg">unit</span>) - Returns the name (and realm name) of a unit.
: [[API UnitNameUnmodified|UnitNameUnmodified]]()
: [[API UnitPlayerControlled|UnitPlayerControlled]](<span class="apiarg">unit</span>) - Returns true if the specified unit is controlled by a player, false otherwise.
: [[API UnitPlayerOrPetInParty|UnitPlayerOrPetInParty]](<span class="apiarg">unit</span>) - Returns 1 if the specified unit/pet is a member of the player's party, nil otherwise (returns nil for "player" and "pet")
: [[API UnitPlayerOrPetInRaid|UnitPlayerOrPetInRaid]](<span class="apiarg">unit</span>) - Returns 1 if the specified unit/pet is a member of the player's raid, nil otherwise (returns nil for "player" and "pet")
: [[API UnitPower|UnitPower]](<span class="apiarg">unitToken [, powerType, unmodified]</span>) : <span class="apiret">power</span> - Returns current power of the specified unit (Replaces [[API UnitMana|UnitMana]])
: [[API UnitPowerDisplayMod|UnitPowerDisplayMod]](<span class="apiarg">powerType</span>) : <span class="apiret">displayMod</span>
: [[API UnitPowerMax|UnitPowerMax]](<span class="apiarg">unitToken [, powerType, unmodified]</span>) : <span class="apiret">maxPower</span> - Returns max power of the specified unit (Replaces [[API UnitManaMax|UnitManaMax]])
: [[API UnitPowerType|UnitPowerType]](<span class="apiarg">unit</span>) - Returns a number corresponding to the power type (e.g., mana, rage or energy) of the specified unit.
: [[API UnitQuestTrivialLevelRange|UnitQuestTrivialLevelRange]](<span class="apiarg">unit</span>) : <span class="apiret">levelRange</span> - Returns the difference between the units' current level and the level at which fixed-level quests are of trivial difficulty.
: [[API UnitRace|UnitRace]](<span class="apiarg">unit</span>) - Returns the race name of the specified unit (e.g., "Human" or "Troll").
: [[API UnitRangedAttackPower|UnitRangedAttackPower]](<span class="apiarg">unit</span>) - Returns the ranged attack power of the unit.
: [[API UnitRangedDamage|UnitRangedDamage]](<span class="apiarg">unit</span>) - Returns the ranged attack speed and damage of the unit.
: [[API UnitReaction|UnitReaction]](<span class="apiarg">unit, otherUnit</span>) - Returns a number corresponding to the reaction (aggressive, neutral or friendly) of the first unit towards the second unit.
: [[API UnitRealmRelationship|UnitRealmRelationship]]()
: [[API UnitSelectionColor|UnitSelectionColor]](<span class="apiarg">unit [, useExtendedColors]</span>) - Returns RGBA values for the color of a unit's selection (the outline around and the circle underneath a player character or an NPC).
: [[API UnitSelectionType|UnitSelectionType]](<span class="apiarg">unit [, useExtendedColors]</span>) - Returns a number corresponding to the type of a unit's selection (the outline around and the circle underneath a player character or an NPC).
: [[API UnitSetRole|UnitSetRole]]()
: [[API UnitSex|UnitSex]](<span class="apiarg">unit</span>) : <span class="apiret">sex</span> - Returns a code indicating the gender of the specified unit, if known. (1=unknown, 2=male, 3=female)
: [[API UnitShouldDisplayName|UnitShouldDisplayName]]()
: [[API UnitSpellHaste|UnitSpellHaste]](<span class="apiarg">unit</span>) - Returns the current spell haste percentage for a unit.
: [[API UnitStagger|UnitStagger]]()
: [[API UnitStat|UnitStat]](<span class="apiarg">unit, statIndex</span>) - Returns the statistics relevant to the specified unit and basic attribute (e.g., strength or intellect).
: [[API UnitThreatPercentageOfLead|UnitThreatPercentageOfLead]]()
: [[API UnitThreatSituation|UnitThreatSituation]](<span class="apiarg">unit, mobUnit</span>) - Returns the specified unit's threat status on a mob.
: [[API UnitTreatAsPlayerForDisplay|UnitTreatAsPlayerForDisplay]](<span class="apiarg">unit</span>) : <span class="apiret">treatAsPlayer</span> - Whether a unit should be treated as if it was an actual player.
: [[API UnitTrialBankedLevels|UnitTrialBankedLevels]](<span class="apiarg">unit</span>)
: [[API UnitTrialXP|UnitTrialXP]](<span class="apiarg">unit</span>)
: [[API UnitWeaponAttackPower|UnitWeaponAttackPower]](<span class="apiarg">unit</span>)
: [[API UnitXP|UnitXP]](<span class="apiarg">unit</span>) - Returns the number of experience points the specified unit has in their current level. (only works on your player)
: [[API UnitXPMax|UnitXPMax]](<span class="apiarg">unit</span>) - Returns the number of experience points the specified unit needs to reach their next level. (only works on your player)
: <small>UI</small> [[API GetUnitName|GetUnitName]](<span class="apiarg">unit, showServerName</span>) - Returns the name and optionally the realm of the unit.

==== Buffs ====
: <small>NOCOMBAT</small> [[API CancelUnitBuff|CancelUnitBuff]](<span class="apiarg">unit, index or spell [, filter or rank]</span>) - Removes a specific buff from the player.
: [[API GetPlayerAuraBySpellID|GetPlayerAuraBySpellID]](<span class="apiarg">spellID</span>) - Returns an active buff/debuff by spell ID on the player character.
: [[API UnitAura|UnitAura]](<span class="apiarg">unit, index [, filter]</span>) - Returns info about buffs and debuffs of a unit.
: [[API UnitAuraBySlot|UnitAuraBySlot]](<span class="apiarg">unit, slot</span>)
: [[API UnitAuraSlots|UnitAuraSlots]](<span class="apiarg">unit [, filter, maxSlots, continuationToken]</span>)
: [[API UnitBuff|UnitBuff]](<span class="apiarg">unit, index [, raidFilter]</span>) - Shorthand for <code>UnitAura(unit, index, "HELPFUL")</code>
: [[API UnitDebuff|UnitDebuff]](<span class="apiarg">unit, index [, raidFilter]</span>) - Shorthand for <code>UnitAura(unit, index, "HARMFUL")</code>
: <small>UI</small> [https://github.com/Gethe/wow-ui-source/search?q=FindAura AuraUtil.FindAura](<span class="apiarg">predicate, unit, filter, predicateArg1, predicateArg2, predicateArg3</span>)
: <small>UI</small> [https://github.com/Gethe/wow-ui-source/search?q=FindAuraByName AuraUtil.FindAuraByName](<span class="apiarg">auraName, unit, filter</span>) - Finds the first aura that matches the name.
: <small>UI</small> [https://github.com/Gethe/wow-ui-source/search?q=ForEachAura AuraUtil.ForEachAura](<span class="apiarg">unit, filter, maxCount, func</span>)
Weapon Enchants
: <small>PROTECTED</small> [[API CancelItemTempEnchantment|CancelItemTempEnchantment]](<span class="apiarg">weaponHand</span>) - Cancels a temporary weapon enchant on ''weaponHand'' (1 for Main hand, 2 for Off hand).
: [[API GetWeaponEnchantInfo|GetWeaponEnchantInfo]]() - Returns information about main and offhand weapon enchantments.

==== Nameplates ====
Nameplates were reworked in [[Patch 7.0.3]]
: [[API C_NamePlate.GetNamePlateEnemyClickThrough|C_NamePlate.GetNamePlateEnemyClickThrough]]()
: [[API C_NamePlate.GetNamePlateEnemyPreferredClickInsets|C_NamePlate.GetNamePlateEnemyPreferredClickInsets]]()
: [[API C_NamePlate.GetNamePlateEnemySize|C_NamePlate.GetNamePlateEnemySize]]()
: [[API C_NamePlate.GetNamePlateForUnit|C_NamePlate.GetNamePlateForUnit]](<span class="apiarg">unitToken [, includeForbidden]</span>)
: [[API C_NamePlate.GetNamePlateFriendlyClickThrough|C_NamePlate.GetNamePlateFriendlyClickThrough]]()
: [[API C_NamePlate.GetNamePlateFriendlyPreferredClickInsets|C_NamePlate.GetNamePlateFriendlyPreferredClickInsets]]()
: [[API C_NamePlate.GetNamePlateFriendlySize|C_NamePlate.GetNamePlateFriendlySize]]()
: [[API C_NamePlate.GetNamePlates|C_NamePlate.GetNamePlates]](<span class="apiarg">[includeForbidden]</span>)
: [[API C_NamePlate.GetNamePlateSelfClickThrough|C_NamePlate.GetNamePlateSelfClickThrough]]()
: [[API C_NamePlate.GetNamePlateSelfPreferredClickInsets|C_NamePlate.GetNamePlateSelfPreferredClickInsets]]()
: [[API C_NamePlate.GetNamePlateSelfSize|C_NamePlate.GetNamePlateSelfSize]]()
: [[API C_NamePlate.GetNumNamePlateMotionTypes|C_NamePlate.GetNumNamePlateMotionTypes]]()
: [[API C_NamePlate.GetTargetClampingInsets|C_NamePlate.GetTargetClampingInsets]]()
: [[API C_NamePlate.SetNamePlateEnemyClickThrough|C_NamePlate.SetNamePlateEnemyClickThrough]](<span class="apiarg">clickthrough</span>)
: [[API C_NamePlate.SetNamePlateEnemyPreferredClickInsets|C_NamePlate.SetNamePlateEnemyPreferredClickInsets]]()
: [[API C_NamePlate.SetNamePlateEnemySize|C_NamePlate.SetNamePlateEnemySize]](<span class="apiarg">width, height</span>)
: [[API C_NamePlate.SetNamePlateFriendlyClickThrough|C_NamePlate.SetNamePlateFriendlyClickThrough]]()
: [[API C_NamePlate.SetNamePlateFriendlyPreferredClickInsets|C_NamePlate.SetNamePlateFriendlyPreferredClickInsets]](<span class="apiarg">left, right, top, bottom</span>)
: [[API C_NamePlate.SetNamePlateFriendlySize|C_NamePlate.SetNamePlateFriendlySize]](<span class="apiarg">width, height</span>)
: [[API C_NamePlate.SetNamePlateSelfClickThrough|C_NamePlate.SetNamePlateSelfClickThrough]](<span class="apiarg">clickthrough</span>)
: [[API C_NamePlate.SetNamePlateSelfPreferredClickInsets|C_NamePlate.SetNamePlateSelfPreferredClickInsets]](<span class="apiarg">left, right, top, bottom</span>)
: [[API C_NamePlate.SetNamePlateSelfSize|C_NamePlate.SetNamePlateSelfSize]](<span class="apiarg">width, height</span>)
: [[API C_NamePlate.SetTargetClampingInsets|C_NamePlate.SetTargetClampingInsets]](<span class="apiarg">clickthrough</span>)
: [[API SetInWorldUIVisibility|SetInWorldUIVisibility]](<span class="apiarg">visible</span>) - Allows nameplates to be shown even while the UI is hidden (with Alt-Z)
: [[API UnitNameplateShowsWidgetsOnly|UnitNameplateShowsWidgetsOnly]](<span class="apiarg">unit</span>) : <span class="apiret">nameplateShowsWidgetsOnly</span>

==== Loss of Control ====
: [[API C_LossOfControl.GetActiveLossOfControlData|C_LossOfControl.GetActiveLossOfControlData]](<span class="apiarg">index</span>) : <span class="apiret">event</span> - Returns info about an active loss-of-control effect.
: [[API C_LossOfControl.GetActiveLossOfControlDataByUnit|C_LossOfControl.GetActiveLossOfControlDataByUnit]](<span class="apiarg">unitToken, index</span>) : <span class="apiret">event</span>
: [[API C_LossOfControl.GetActiveLossOfControlDataCount|C_LossOfControl.GetActiveLossOfControlDataCount]]() : <span class="apiret">count</span> - Returns the number of active loss-of-control effects.
: [[API C_LossOfControl.GetActiveLossOfControlDataCountByUnit|C_LossOfControl.GetActiveLossOfControlDataCountByUnit]](<span class="apiarg">unitToken</span>) : <span class="apiret">count</span>
: [[API GetActionLossOfControlCooldown|GetActionLossOfControlCooldown]](<span class="apiarg">slot</span>)
: [[API GetSpellLossOfControlCooldown|GetSpellLossOfControlCooldown]](<span class="apiarg">spellSlot</span>)

==== Phasing ====
Players in different [[Phasing|Phases]] cannot see eachother.
: [[API UnitInPartyShard|UnitInPartyShard]](<span class="apiarg">unit</span>) : <span class="apiret">inPartyShard</span>
: [[API UnitPhaseReason|UnitPhaseReason]](<span class="apiarg">unit</span>) : <span class="apiret">reason</span> - Returns the reason if a unit is NOT in the same phase.

==== Power Bar ====
: [[API GetUnitPowerBarInfo|GetUnitPowerBarInfo]](<span class="apiarg">unitToken</span>) : <span class="apiret">info</span>
: [[API GetUnitPowerBarInfoByID|GetUnitPowerBarInfoByID]](<span class="apiarg">barID</span>) : <span class="apiret">info</span>
: [[API GetUnitPowerBarStrings|GetUnitPowerBarStrings]](<span class="apiarg">unitToken</span>) : <span class="apiret">name, tooltip, cost</span>
: [[API GetUnitPowerBarStringsByID|GetUnitPowerBarStringsByID]](<span class="apiarg">barID</span>) : <span class="apiret">name, tooltip, cost</span>
: [[API GetUnitPowerBarTextureInfo|GetUnitPowerBarTextureInfo]](<span class="apiarg">unitToken, textureIndex [, timerIndex]</span>) : <span class="apiret">texture, colorR, colorG, colorB, colorA</span>
: [[API GetUnitPowerBarTextureInfoByID|GetUnitPowerBarTextureInfoByID]](<span class="apiarg">barID, textureIndex</span>) : <span class="apiret">texture, colorR, colorG, colorB, colorA</span>
: [[API UnitNumPowerBarTimers|UnitNumPowerBarTimers]]()
: [[API UnitPowerBarID|UnitPowerBarID]](<span class="apiarg">unitToken</span>) : <span class="apiret">barID</span>
: [[API UnitPowerBarTimerInfo|UnitPowerBarTimerInfo]]()

=== Vehicles ===
These functions were added in [[Patch 3.0.2]]
: [[API C_PvP.GetBattlefieldVehicleInfo|C_PvP.GetBattlefieldVehicleInfo]](<span class="apiarg">vehicleIndex, uiMapID</span>) : <span class="apiret">info</span>
: [[API C_PvP.GetBattlefieldVehicles|C_PvP.GetBattlefieldVehicles]](<span class="apiarg">uiMapID</span>) : <span class="apiret">vehicles</span>
: [[API CanEjectPassengerFromSeat|CanEjectPassengerFromSeat]](<span class="apiarg">seat</span>) - Returns 1 if the player can eject a passenger from a seat.
: [[API CanExitVehicle|CanExitVehicle]]() - Returns 1 if the player can be exit the Vehicle.
: [[API CanSwitchVehicleSeat|CanSwitchVehicleSeat]]()
: [[API CanSwitchVehicleSeats|CanSwitchVehicleSeats]]() - Returns 1 if the player can Switch Seats in the Vehicle.
: [[API EjectPassengerFromSeat|EjectPassengerFromSeat]](<span class="apiarg">seat</span>) - Ejects a passenger from a seat.
: [[API GetNumBattlefieldVehicles|GetNumBattlefieldVehicles]](<span class="apiarg">index</span>)
: [[API GetVehicleUIIndicator|GetVehicleUIIndicator]](<span class="apiarg">indicatorID</span>)
: [[API GetVehicleUIIndicatorSeat|GetVehicleUIIndicatorSeat]](<span class="apiarg">indicatorID, indicatorSeatIndex</span>)
: [[API IsUsingVehicleControls|IsUsingVehicleControls]]()
: [[API IsVehicleAimAngleAdjustable|IsVehicleAimAngleAdjustable]]() - Returns 1 if the player can adjust the Aim Angle of the Vehicle.
: [[API IsVehicleAimPowerAdjustable|IsVehicleAimPowerAdjustable]]() - Returns 1 if the player can adjust the Aim Power of the Vehicle.
: [[API PlayerVehicleHasComboPoints|PlayerVehicleHasComboPoints]]() : <span class="apiret">vehicleHasComboPoints</span>
: [[API UnitControllingVehicle|UnitControllingVehicle]](<span class="apiarg">unit</span>)
: [[API UnitHasVehiclePlayerFrameUI|UnitHasVehiclePlayerFrameUI]]()
: [[API UnitHasVehicleUI|UnitHasVehicleUI]](<span class="apiarg">unit</span>)
: [[API UnitInVehicle|UnitInVehicle]](<span class="apiarg">unit</span>)
: [[API UnitInVehicleControlSeat|UnitInVehicleControlSeat]](<span class="apiarg">unit</span>)
: [[API UnitInVehicleHidesPetFrame|UnitInVehicleHidesPetFrame]]()
: [[API UnitSwitchToVehicleSeat|UnitSwitchToVehicleSeat]](<span class="apiarg">unit, seatId</span>)
: [[API UnitTargetsVehicleInRaidUI|UnitTargetsVehicleInRaidUI]](<span class="apiarg">unit</span>)
: [[API UnitUsingVehicle|UnitUsingVehicle]](<span class="apiarg">unit</span>) - Returns whether the specified unit is currently using a vehicle (including transitioning between seats).
: [[API UnitVehicleSeatCount|UnitVehicleSeatCount]](<span class="apiarg">unit</span>)
: [[API UnitVehicleSeatInfo|UnitVehicleSeatInfo]](<span class="apiarg">unit, seatId</span>)
: [[API UnitVehicleSkin|UnitVehicleSkin]](<span class="apiarg">unit</span>)
: [[API VehicleAimDecrement|VehicleAimDecrement]]()
: [[API VehicleAimDownStart|VehicleAimDownStart]]()
: [[API VehicleAimDownStop|VehicleAimDownStop]]()
: [[API VehicleAimGetAngle|VehicleAimGetAngle]]()
: [[API VehicleAimGetNormAngle|VehicleAimGetNormAngle]]()
: [[API VehicleAimGetNormPower|VehicleAimGetNormPower]]()
: [[API VehicleAimIncrement|VehicleAimIncrement]]()
: [[API VehicleAimRequestAngle|VehicleAimRequestAngle]]()
: [[API VehicleAimRequestNormAngle|VehicleAimRequestNormAngle]]()
: [[API VehicleAimSetNormPower|VehicleAimSetNormPower]]()
: [[API VehicleAimUpStart|VehicleAimUpStart]]()
: [[API VehicleAimUpStop|VehicleAimUpStop]]()
: [[API VehicleExit|VehicleExit]]() - Exit the current Vehicle.
: [[API VehicleNextSeat|VehicleNextSeat]]()
: [[API VehiclePrevSeat|VehiclePrevSeat]]()

=== Warlords of Draenor ===
==== Garrison Tech ====
[[Garrison]]s were added in [[Patch 6.0.2]] and also utilized in later expanions.
: [[API C_Garrison.CanUpgradeGarrison|C_Garrison.CanUpgradeGarrison]]()
: [[API C_Garrison.ClearCompleteTalent|C_Garrison.ClearCompleteTalent]](<span class="apiarg">garrisonType</span>)
: [[API C_Garrison.CloseArchitect|C_Garrison.CloseArchitect]]()
: [[API C_Garrison.CloseGarrisonTradeskillNPC|C_Garrison.CloseGarrisonTradeskillNPC]]()
: [[API C_Garrison.CloseTalentNPC|C_Garrison.CloseTalentNPC]]()
: [[API C_Garrison.CloseTradeskillCrafter|C_Garrison.CloseTradeskillCrafter]]()
: [[API C_Garrison.GetAllBonusAbilityEffects|C_Garrison.GetAllBonusAbilityEffects]]()
: [[API C_Garrison.GetCompleteTalent|C_Garrison.GetCompleteTalent]](<span class="apiarg">garrisonType</span>)
: [[API C_Garrison.GetCurrencyTypes|C_Garrison.GetCurrencyTypes]](<span class="apiarg">garrType</span>)
: [[API C_Garrison.GetCurrentGarrTalentTreeFriendshipFactionID|C_Garrison.GetCurrentGarrTalentTreeFriendshipFactionID]]() : <span class="apiret">currentGarrTalentTreeFriendshipFactionID</span>
: [[API C_Garrison.GetCurrentGarrTalentTreeID|C_Garrison.GetCurrentGarrTalentTreeID]]() : <span class="apiret">currentGarrTalentTreeID</span>
: [[API C_Garrison.GetGarrisonInfo|C_Garrison.GetGarrisonInfo]](<span class="apiarg">garrisonType</span>)
: [[API C_Garrison.GetGarrisonTalentTreeCurrencyTypes|C_Garrison.GetGarrisonTalentTreeCurrencyTypes]](<span class="apiarg">garrTalentTreeID</span>) : <span class="apiret">garrTalentTreeCurrencyType</span>
: [[API C_Garrison.GetGarrisonTalentTreeType|C_Garrison.GetGarrisonTalentTreeType]](<span class="apiarg">garrTalentTreeID</span>) : <span class="apiret">garrTalentTreeType</span>
: [[API C_Garrison.GetGarrisonUpgradeCost|C_Garrison.GetGarrisonUpgradeCost]](<span class="apiarg">followerType</span>)
: [[API C_Garrison.GetLandingPageGarrisonType|C_Garrison.GetLandingPageGarrisonType]]()
: [[API C_Garrison.GetLandingPageItems|C_Garrison.GetLandingPageItems]](<span class="apiarg">garrTypeID [, noSort]</span>)
: [[API C_Garrison.GetLandingPageShipmentCount|C_Garrison.GetLandingPageShipmentCount]]()
: [[API C_Garrison.GetLandingPageShipmentInfoByContainerID|C_Garrison.GetLandingPageShipmentInfoByContainerID]](<span class="apiarg">shipmentContainerID</span>)
: [[API C_Garrison.GetLooseShipments|C_Garrison.GetLooseShipments]](<span class="apiarg">garrTypeID</span>)
: [[API C_Garrison.GetNumPendingShipments|C_Garrison.GetNumPendingShipments]]()
: [[API C_Garrison.GetNumShipmentCurrencies|C_Garrison.GetNumShipmentCurrencies]]()
: [[API C_Garrison.GetNumShipmentReagents|C_Garrison.GetNumShipmentReagents]]()
: [[API C_Garrison.GetPendingShipmentInfo|C_Garrison.GetPendingShipmentInfo]](<span class="apiarg">index</span>)
: [[API C_Garrison.GetShipmentContainerInfo|C_Garrison.GetShipmentContainerInfo]]()
: [[API C_Garrison.GetShipmentItemInfo|C_Garrison.GetShipmentItemInfo]]()
: [[API C_Garrison.GetShipmentReagentCurrencyInfo|C_Garrison.GetShipmentReagentCurrencyInfo]](<span class="apiarg">currencyIndex</span>)
: [[API C_Garrison.GetShipmentReagentInfo|C_Garrison.GetShipmentReagentInfo]](<span class="apiarg">reagentIndex</span>)
: [[API C_Garrison.GetShipmentReagentItemLink|C_Garrison.GetShipmentReagentItemLink]](<span class="apiarg">reagentIndex</span>)
: [[API C_Garrison.GetSpecChangeCost|C_Garrison.GetSpecChangeCost]]()
: [[API C_Garrison.GetTalentInfo|C_Garrison.GetTalentInfo]](<span class="apiarg">talentID</span>) : <span class="apiret">info</span>
: [[API C_Garrison.GetTalentPointsSpentInTalentTree|C_Garrison.GetTalentPointsSpentInTalentTree]](<span class="apiarg">garrTalentTreeID</span>) : <span class="apiret">talentPoints</span>
: [[API C_Garrison.GetTalentTreeIDsByClassID|C_Garrison.GetTalentTreeIDsByClassID]](<span class="apiarg">garrType, classID</span>) : <span class="apiret">treeIDs</span>
: [[API C_Garrison.GetTalentTreeInfo|C_Garrison.GetTalentTreeInfo]](<span class="apiarg">treeID</span>) : <span class="apiret">info</span>
: [[API C_Garrison.GetTalentTreeResetInfo|C_Garrison.GetTalentTreeResetInfo]](<span class="apiarg">garrTalentTreeID</span>) : <span class="apiret">goldCost, currencyCosts</span>
: [[API C_Garrison.GetTalentTreeTalentPointResearchInfo|C_Garrison.GetTalentTreeTalentPointResearchInfo]](<span class="apiarg">garrTalentTreeID, talentPointIndex, isRespec</span>) : <span class="apiret">goldCost, currencyCosts, durationSecs</span>
: [[API C_Garrison.GetTalentUnlockWorldQuest|C_Garrison.GetTalentUnlockWorldQuest]](<span class="apiarg">talentID</span>) : <span class="apiret">worldQuestID</span>
: [[API C_Garrison.HasAdventures|C_Garrison.HasAdventures]]() : <span class="apiret">hasAdventures</span>
: [[API C_Garrison.HasGarrison|C_Garrison.HasGarrison]](<span class="apiarg">garrisonType</span>)
: [[API C_Garrison.IsFollowerOnCompletedMission|C_Garrison.IsFollowerOnCompletedMission]](<span class="apiarg">followerID</span>) : <span class="apiret">followerOnCompletedMission</span>
: [[API C_Garrison.IsInvasionAvailable|C_Garrison.IsInvasionAvailable]]()
: [[API C_Garrison.IsOnGarrisonMap|C_Garrison.IsOnGarrisonMap]]()
: [[API C_Garrison.IsOnShipmentQuestForNPC|C_Garrison.IsOnShipmentQuestForNPC]]()
: [[API C_Garrison.IsPlayerInGarrison|C_Garrison.IsPlayerInGarrison]](<span class="apiarg">garrType</span>)
: [[API C_Garrison.IsTalentConditionMet|C_Garrison.IsTalentConditionMet]](<span class="apiarg">talentID</span>) : <span class="apiret">isMet, failureString</span>
: [[API C_Garrison.IsUsingPartyGarrison|C_Garrison.IsUsingPartyGarrison]]()
: [[API C_Garrison.IsVisitGarrisonAvailable|C_Garrison.IsVisitGarrisonAvailable]]()
: [[API C_Garrison.RequestGarrisonUpgradeable|C_Garrison.RequestGarrisonUpgradeable]](<span class="apiarg">followerType</span>)
: [[API C_Garrison.RequestLandingPageShipmentInfo|C_Garrison.RequestLandingPageShipmentInfo]]()
: [[API C_Garrison.RequestShipmentCreation|C_Garrison.RequestShipmentCreation]]()
: [[API C_Garrison.RequestShipmentInfo|C_Garrison.RequestShipmentInfo]]()
: [[API C_Garrison.ResearchTalent|C_Garrison.ResearchTalent]](<span class="apiarg">garrTalentID</span>)
: [[API C_Garrison.SetUsingPartyGarrison|C_Garrison.SetUsingPartyGarrison]](<span class="apiarg">enabled</span>)
: [[API C_Garrison.ShouldShowMapTab|C_Garrison.ShouldShowMapTab]](<span class="apiarg">garrType</span>)
: [[API C_Garrison.UpgradeGarrison|C_Garrison.UpgradeGarrison]](<span class="apiarg">followerType</span>)
: [[API GetEquipmentNameFromSpell|GetEquipmentNameFromSpell]]() - returns a garrison equipment for a spell.
: [[API GetFollowerTypeIDFromSpell|GetFollowerTypeIDFromSpell]]() - Returns the Garrison expansion type.
: [[API ReopenInteraction|ReopenInteraction]]() - Reopens the order hall talents interaction.

==== Buildings ====
: [[API C_Garrison.CancelConstruction|C_Garrison.CancelConstruction]](<span class="apiarg">plotInstanceID</span>)
: [[API C_Garrison.GetBuildingInfo|C_Garrison.GetBuildingInfo]](<span class="apiarg">buildingID</span>)
: [[API C_Garrison.GetBuildingLockInfo|C_Garrison.GetBuildingLockInfo]]()
: [[API C_Garrison.GetBuildingSizes|C_Garrison.GetBuildingSizes]]()
: [[API C_Garrison.GetBuildingSpecInfo|C_Garrison.GetBuildingSpecInfo]]()
: [[API C_Garrison.GetBuildingTimeRemaining|C_Garrison.GetBuildingTimeRemaining]](<span class="apiarg">plotInstanceID</span>)
: [[API C_Garrison.GetBuildingTooltip|C_Garrison.GetBuildingTooltip]](<span class="apiarg">buildingID</span>)
: [[API C_Garrison.GetBuildingUpgradeInfo|C_Garrison.GetBuildingUpgradeInfo]](<span class="apiarg">buildingID</span>)
: [[API C_Garrison.GetBuildingsForPlot|C_Garrison.GetBuildingsForPlot]](<span class="apiarg">plotInstanceID</span>)
: [[API C_Garrison.GetBuildingsForSize|C_Garrison.GetBuildingsForSize]](<span class="apiarg">garrisonType, uiCategoryID</span>)
: [[API C_Garrison.GetBuildings|C_Garrison.GetBuildings]](<span class="apiarg">garrisonType</span>)
: [[API C_Garrison.GetGarrisonPlotsInstancesForMap|C_Garrison.GetGarrisonPlotsInstancesForMap]](<span class="apiarg">uiMapID</span>) : <span class="apiret">garrisonPlotInstances</span>
: [[API C_Garrison.GetLandingPageShipmentInfo|C_Garrison.GetLandingPageShipmentInfo]](<span class="apiarg">buildingID</span>)
: [[API C_Garrison.GetOwnedBuildingInfoAbbrev|C_Garrison.GetOwnedBuildingInfoAbbrev]](<span class="apiarg">plotInstanceID</span>)
: [[API C_Garrison.GetOwnedBuildingInfo|C_Garrison.GetOwnedBuildingInfo]](<span class="apiarg">plotInstanceID</span>)
: [[API C_Garrison.GetPlotsForBuilding|C_Garrison.GetPlotsForBuilding]](<span class="apiarg">buildingID</span>)
: [[API C_Garrison.GetPlots|C_Garrison.GetPlots]](<span class="apiarg">followerType</span>)
: [[API C_Garrison.GetShipDeathAnimInfo|C_Garrison.GetShipDeathAnimInfo]]()
: [[API C_Garrison.GetTabForPlot|C_Garrison.GetTabForPlot]](<span class="apiarg">plotInstanceID</span>)
: [[API C_Garrison.HasShipyard|C_Garrison.HasShipyard]]()
: [[API C_Garrison.IsOnShipyardMap|C_Garrison.IsOnShipyardMap]]()
: [[API C_Garrison.PlaceBuilding|C_Garrison.PlaceBuilding]](<span class="apiarg">plotInstanceID, buildingID</span>)
: [[API C_Garrison.SetBuildingActive|C_Garrison.SetBuildingActive]](<span class="apiarg">plotInstanceID</span>)
: [[API C_Garrison.SetBuildingSpecialization|C_Garrison.SetBuildingSpecialization]]()
: [[API C_Garrison.SwapBuildings|C_Garrison.SwapBuildings]](<span class="apiarg">plotInstanceID1, plotInstanceID2</span>)
: [[API C_Garrison.UpgradeBuilding|C_Garrison.UpgradeBuilding]](<span class="apiarg">plotInstanceID</span>)
Trophies
: [[API C_Trophy.MonumentChangeAppearanceToTrophyID|C_Trophy.MonumentChangeAppearanceToTrophyID]](<span class="apiarg">trophyID</span>)
: [[API C_Trophy.MonumentCloseMonumentUI|C_Trophy.MonumentCloseMonumentUI]]()
: [[API C_Trophy.MonumentGetCount|C_Trophy.MonumentGetCount]]()
: [[API C_Trophy.MonumentGetSelectedTrophyID|C_Trophy.MonumentGetSelectedTrophyID]]()
: [[API C_Trophy.MonumentGetTrophyInfoByIndex|C_Trophy.MonumentGetTrophyInfoByIndex]](<span class="apiarg">index</span>)
: [[API C_Trophy.MonumentLoadList|C_Trophy.MonumentLoadList]]()
: [[API C_Trophy.MonumentLoadSelectedTrophyID|C_Trophy.MonumentLoadSelectedTrophyID]]()
: [[API C_Trophy.MonumentRevertAppearanceToSaved|C_Trophy.MonumentRevertAppearanceToSaved]]()
: [[API C_Trophy.MonumentSaveSelection|C_Trophy.MonumentSaveSelection]](<span class="apiarg">trophyID</span>)

==== Missions ====
Relates to [[Follower]]s and [[Mission]]s.
: [[API C_Garrison.AddFollowerToMission|C_Garrison.AddFollowerToMission]](<span class="apiarg">missionID, followerID [, boardIndex]</span>) : <span class="apiret">followerAdded</span>
: [[API C_Garrison.AllowMissionStartAboveSoftCap|C_Garrison.AllowMissionStartAboveSoftCap]](<span class="apiarg">garrFollowerTypeID</span>)
: [[API C_Garrison.AreMissionFollowerRequirementsMet|C_Garrison.AreMissionFollowerRequirementsMet]](<span class="apiarg">missionRecID</span>)
: [[API C_Garrison.AssignFollowerToBuilding|C_Garrison.AssignFollowerToBuilding]](<span class="apiarg">plotInstanceID, followerID</span>)
: [[API C_Garrison.CanGenerateRecruits|C_Garrison.CanGenerateRecruits]]()
: [[API C_Garrison.CanOpenMissionChest|C_Garrison.CanOpenMissionChest]](<span class="apiarg">missionID</span>)
: [[API C_Garrison.CanSetRecruitmentPreference|C_Garrison.CanSetRecruitmentPreference]]()
: [[API C_Garrison.CanSpellTargetFollowerIDWithAddAbility|C_Garrison.CanSpellTargetFollowerIDWithAddAbility]](<span class="apiarg">followerID</span>)
: [[API C_Garrison.CastItemSpellOnFollowerAbility|C_Garrison.CastItemSpellOnFollowerAbility]](<span class="apiarg">followerID, abilityID</span>)
: [[API C_Garrison.CastSpellOnFollower|C_Garrison.CastSpellOnFollower]](<span class="apiarg">followerID</span>)
: [[API C_Garrison.CastSpellOnFollowerAbility|C_Garrison.CastSpellOnFollowerAbility]](<span class="apiarg">followerID, abilityID</span>)
: [[API C_Garrison.CastSpellOnMission|C_Garrison.CastSpellOnMission]](<span class="apiarg">missionID</span>)
: [[API C_Garrison.CloseMissionNPC|C_Garrison.CloseMissionNPC]]()
: [[API C_Garrison.CloseRecruitmentNPC|C_Garrison.CloseRecruitmentNPC]]()
: [[API C_Garrison.GenerateRecruits|C_Garrison.GenerateRecruits]](<span class="apiarg">mechanicTypeID, traitID</span>)
: [[API C_Garrison.GetAllEncounterThreats|C_Garrison.GetAllEncounterThreats]](<span class="apiarg">garrFollowerTypeID</span>)
: [[API C_Garrison.GetAvailableMissions|C_Garrison.GetAvailableMissions]](<span class="apiarg">[missionList,] garrFollowerTypeID</span>)
: [[API C_Garrison.GetAvailableRecruits|C_Garrison.GetAvailableRecruits]]()
: [[API C_Garrison.GetBasicMissionInfo|C_Garrison.GetBasicMissionInfo]](<span class="apiarg">missionID</span>)
: [[API C_Garrison.GetBuffedFollowersForMission|C_Garrison.GetBuffedFollowersForMission]](<span class="apiarg">missionID, displayingAbilities</span>)
: [[API C_Garrison.GetClassSpecCategoryInfo|C_Garrison.GetClassSpecCategoryInfo]](<span class="apiarg">garrFollowerType</span>)
: [[API C_Garrison.GetCombatAllyMission|C_Garrison.GetCombatAllyMission]](<span class="apiarg">garrFollowerTypeID</span>)
: [[API C_Garrison.GetCompleteMissions|C_Garrison.GetCompleteMissions]](<span class="apiarg">[missionList,] garrFollowerTypeID</span>)
: [[API C_Garrison.GetFollowerAbilities|C_Garrison.GetFollowerAbilities]](<span class="apiarg">guid|id</span>)
: [[API C_Garrison.GetFollowerAbilityAtIndex|C_Garrison.GetFollowerAbilityAtIndex]](<span class="apiarg">followerID, index</span>)
: [[API C_Garrison.GetFollowerAbilityAtIndexByID|C_Garrison.GetFollowerAbilityAtIndexByID]](<span class="apiarg">garrFollowerID, index</span>)
: [[API C_Garrison.GetFollowerAbilityCounterMechanicInfo|C_Garrison.GetFollowerAbilityCounterMechanicInfo]](<span class="apiarg">garrAbilityID</span>)
: [[API C_Garrison.GetFollowerAbilityCountersForMechanicTypes|C_Garrison.GetFollowerAbilityCountersForMechanicTypes]](<span class="apiarg">garrFollowerTypeID</span>)
: [[API C_Garrison.GetFollowerAbilityDescription|C_Garrison.GetFollowerAbilityDescription]](<span class="apiarg">garrAbilityID</span>)
: [[API C_Garrison.GetFollowerAbilityIcon|C_Garrison.GetFollowerAbilityIcon]](<span class="apiarg">garrAbilityID</span>)
: [[API C_Garrison.GetFollowerAbilityInfo|C_Garrison.GetFollowerAbilityInfo]](<span class="apiarg">garrAbilityID</span>)
: [[API C_Garrison.GetFollowerAbilityIsTrait|C_Garrison.GetFollowerAbilityIsTrait]](<span class="apiarg">garrAbilityID</span>)
: [[API C_Garrison.GetFollowerAbilityLink|C_Garrison.GetFollowerAbilityLink]](<span class="apiarg">abilityID</span>)
: [[API C_Garrison.GetFollowerAbilityName|C_Garrison.GetFollowerAbilityName]](<span class="apiarg">garrAbilityID</span>)
: [[API C_Garrison.GetFollowerActivationCost|C_Garrison.GetFollowerActivationCost]]()
: [[API C_Garrison.GetFollowerBiasForMission|C_Garrison.GetFollowerBiasForMission]](<span class="apiarg">missionID, followerID</span>)
: [[API C_Garrison.GetFollowerClassSpec|C_Garrison.GetFollowerClassSpec]](<span class="apiarg">followerID</span>)
: [[API C_Garrison.GetFollowerClassSpecAtlas|C_Garrison.GetFollowerClassSpecAtlas]](<span class="apiarg">garrSpecID</span>)
: [[API C_Garrison.GetFollowerClassSpecByID|C_Garrison.GetFollowerClassSpecByID]](<span class="apiarg">garrFollowerID</span>)
: [[API C_Garrison.GetFollowerClassSpecName|C_Garrison.GetFollowerClassSpecName]](<span class="apiarg">garrFollowerID</span>)
: [[API C_Garrison.GetFollowerDisplayID|C_Garrison.GetFollowerDisplayID]](<span class="apiarg">followerID</span>)
: [[API C_Garrison.GetFollowerInfo|C_Garrison.GetFollowerInfo]](<span class="apiarg">guid|id</span>)
: [[API C_Garrison.GetFollowerInfoForBuilding|C_Garrison.GetFollowerInfoForBuilding]]()
: [[API C_Garrison.GetFollowerIsTroop|C_Garrison.GetFollowerIsTroop]](<span class="apiarg">guid|id</span>)
: [[API C_Garrison.GetFollowerItemLevelAverage|C_Garrison.GetFollowerItemLevelAverage]](<span class="apiarg">followerID</span>)
: [[API C_Garrison.GetFollowerItems|C_Garrison.GetFollowerItems]](<span class="apiarg">followerID</span>)
: [[API C_Garrison.GetFollowerLevel|C_Garrison.GetFollowerLevel]](<span class="apiarg">followerID</span>)
: [[API C_Garrison.GetFollowerLevelXP|C_Garrison.GetFollowerLevelXP]](<span class="apiarg">followerID</span>)
: [[API C_Garrison.GetFollowerLink|C_Garrison.GetFollowerLink]](<span class="apiarg">followerID</span>)
: [[API C_Garrison.GetFollowerLinkByID|C_Garrison.GetFollowerLinkByID]](<span class="apiarg">garrFollowerID</span>)
: [[API C_Garrison.GetFollowerMissionCompleteInfo|C_Garrison.GetFollowerMissionCompleteInfo]](<span class="apiarg">followerID</span>) : <span class="apiret">followerMissionCompleteInfo</span>
: [[API C_Garrison.GetFollowerMissionTimeLeft|C_Garrison.GetFollowerMissionTimeLeft]](<span class="apiarg">followerID</span>)
: [[API C_Garrison.GetFollowerMissionTimeLeftSeconds|C_Garrison.GetFollowerMissionTimeLeftSeconds]](<span class="apiarg">followerID</span>)
: [[API C_Garrison.GetFollowerModelItems|C_Garrison.GetFollowerModelItems]](<span class="apiarg">followerID</span>)
: [[API C_Garrison.GetFollowerName|C_Garrison.GetFollowerName]](<span class="apiarg">followerID</span>)
: [[API C_Garrison.GetFollowerNameByID|C_Garrison.GetFollowerNameByID]](<span class="apiarg">garrFollowerID</span>)
: [[API C_Garrison.GetFollowerPortraitIconID|C_Garrison.GetFollowerPortraitIconID]](<span class="apiarg">followerID</span>)
: [[API C_Garrison.GetFollowerPortraitIconIDByID|C_Garrison.GetFollowerPortraitIconIDByID]](<span class="apiarg">garrFollowerID</span>)
: [[API C_Garrison.GetFollowerQuality|C_Garrison.GetFollowerQuality]](<span class="apiarg">followerID</span>)
: [[API C_Garrison.GetFollowerQualityTable|C_Garrison.GetFollowerQualityTable]](<span class="apiarg">garrFollowerTypeID</span>)
: [[API C_Garrison.GetFollowerRecentlyGainedAbilityIDs|C_Garrison.GetFollowerRecentlyGainedAbilityIDs]](<span class="apiarg">followerID</span>)
: [[API C_Garrison.GetFollowerRecentlyGainedTraitIDs|C_Garrison.GetFollowerRecentlyGainedTraitIDs]](<span class="apiarg">followerID</span>)
: [[API C_Garrison.GetFollowers|C_Garrison.GetFollowers]]() - Returns a table of followers and their attributes.
: [[API C_Garrison.GetFollowerShipments|C_Garrison.GetFollowerShipments]](<span class="apiarg">garrTypeID</span>)
: [[API C_Garrison.GetFollowerSoftCap|C_Garrison.GetFollowerSoftCap]](<span class="apiarg">garrFollowerTypeID</span>)
: [[API C_Garrison.GetFollowerSourceTextByID|C_Garrison.GetFollowerSourceTextByID]](<span class="apiarg">garrFollowerID</span>)
: [[API C_Garrison.GetFollowerSpecializationAtIndex|C_Garrison.GetFollowerSpecializationAtIndex]](<span class="apiarg">followerID, index</span>)
: [[API C_Garrison.GetFollowersSpellsForMission|C_Garrison.GetFollowersSpellsForMission]](<span class="apiarg">missionID</span>)
: [[API C_Garrison.GetFollowerStatus|C_Garrison.GetFollowerStatus]](<span class="apiarg">followerID</span>)
: [[API C_Garrison.GetFollowersTraitsForMission|C_Garrison.GetFollowersTraitsForMission]](<span class="apiarg">missionID</span>)
: [[API C_Garrison.GetFollowerTraitAtIndex|C_Garrison.GetFollowerTraitAtIndex]](<span class="apiarg">followerID, index</span>)
: [[API C_Garrison.GetFollowerTraitAtIndexByID|C_Garrison.GetFollowerTraitAtIndexByID]](<span class="apiarg">garrFollowerID, index</span>)
: [[API C_Garrison.GetFollowerTypeByID|C_Garrison.GetFollowerTypeByID]](<span class="apiarg">garrFollowerID</span>)
: [[API C_Garrison.GetFollowerTypeByMissionID|C_Garrison.GetFollowerTypeByMissionID]](<span class="apiarg">missionID</span>)
: [[API C_Garrison.GetFollowerUnderBiasReason|C_Garrison.GetFollowerUnderBiasReason]](<span class="apiarg">missionID, followerID</span>)
: [[API C_Garrison.GetFollowerXP|C_Garrison.GetFollowerXP]](<span class="apiarg">followerID</span>)
: [[API C_Garrison.GetFollowerXPTable|C_Garrison.GetFollowerXPTable]](<span class="apiarg">garrFollowerTypeID</span>)
: [[API C_Garrison.GetFollowerZoneSupportAbilities|C_Garrison.GetFollowerZoneSupportAbilities]](<span class="apiarg">guid|id</span>)
: [[API C_Garrison.GetInProgressMissions|C_Garrison.GetInProgressMissions]](<span class="apiarg">[missionList,] garrFollowerTypeID</span>)
: [[API C_Garrison.GetMissionBonusAbilityEffects|C_Garrison.GetMissionBonusAbilityEffects]](<span class="apiarg">missionID</span>)
: [[API C_Garrison.GetMissionCompleteEncounters|C_Garrison.GetMissionCompleteEncounters]](<span class="apiarg">missionID</span>) : <span class="apiret">encounters</span>
: [[API C_Garrison.GetMissionCost|C_Garrison.GetMissionCost]](<span class="apiarg">missionID</span>)
: [[API C_Garrison.GetMissionDeploymentInfo|C_Garrison.GetMissionDeploymentInfo]](<span class="apiarg">missionID</span>) : <span class="apiret">missionDeploymentInfo</span>
: [[API C_Garrison.GetMissionDisplayIDs|C_Garrison.GetMissionDisplayIDs]](<span class="apiarg">missionID</span>)
: [[API C_Garrison.GetMissionEncounterIconInfo|C_Garrison.GetMissionEncounterIconInfo]](<span class="apiarg">missionID</span>) : <span class="apiret">missionEncounterIconInfo</span>
: [[API C_Garrison.GetMissionLink|C_Garrison.GetMissionLink]](<span class="apiarg">missionID</span>)
: [[API C_Garrison.GetMissionMaxFollowers|C_Garrison.GetMissionMaxFollowers]](<span class="apiarg">garrMissionID</span>)
: [[API C_Garrison.GetMissionName|C_Garrison.GetMissionName]](<span class="apiarg">garrMissionID</span>)
: [[API C_Garrison.GetMissionRewardInfo|C_Garrison.GetMissionRewardInfo]](<span class="apiarg">garrMissionID [, missionDBID]</span>)
: [[API C_Garrison.GetMissionSuccessChance|C_Garrison.GetMissionSuccessChance]](<span class="apiarg">missionID</span>)
: [[API C_Garrison.GetMissionTexture|C_Garrison.GetMissionTexture]](<span class="apiarg">offeredGarrMissionTextureID</span>)
: [[API C_Garrison.GetMissionTimes|C_Garrison.GetMissionTimes]](<span class="apiarg">missionID</span>)
: [[API C_Garrison.GetMissionUncounteredMechanics|C_Garrison.GetMissionUncounteredMechanics]](<span class="apiarg">missionID</span>)
: [[API C_Garrison.GetNumActiveFollowers|C_Garrison.GetNumActiveFollowers]]()
: [[API C_Garrison.GetNumFollowerActivationsRemaining|C_Garrison.GetNumFollowerActivationsRemaining]](<span class="apiarg">garrTypeID</span>)
: [[API C_Garrison.GetNumFollowerDailyActivations|C_Garrison.GetNumFollowerDailyActivations]]()
: [[API C_Garrison.GetNumFollowers|C_Garrison.GetNumFollowers]]()
: [[API C_Garrison.GetNumFollowersForMechanic|C_Garrison.GetNumFollowersForMechanic]](<span class="apiarg">followerType, mechanicID</span>)
: [[API C_Garrison.GetNumFollowersOnMission|C_Garrison.GetNumFollowersOnMission]](<span class="apiarg">missionID</span>)
: [[API C_Garrison.GetPartyBuffs|C_Garrison.GetPartyBuffs]](<span class="apiarg">missionID</span>)
: [[API C_Garrison.GetPartyMentorLevels|C_Garrison.GetPartyMentorLevels]](<span class="apiarg">missionID</span>)
: [[API C_Garrison.GetPartyMissionInfo|C_Garrison.GetPartyMissionInfo]](<span class="apiarg">missionID</span>)
: [[API C_Garrison.GetPossibleFollowersForBuilding|C_Garrison.GetPossibleFollowersForBuilding]](<span class="apiarg">followerType, plotInstanceID</span>)
: [[API C_Garrison.GetRecruitAbilities|C_Garrison.GetRecruitAbilities]](<span class="apiarg">index</span>)
: [[API C_Garrison.GetRecruiterAbilityCategories|C_Garrison.GetRecruiterAbilityCategories]]()
: [[API C_Garrison.GetRecruiterAbilityList|C_Garrison.GetRecruiterAbilityList]](<span class="apiarg">traits</span>)
: [[API C_Garrison.GetRecruitmentPreferences|C_Garrison.GetRecruitmentPreferences]]()
: [[API C_Garrison.IsAboveFollowerSoftCap|C_Garrison.IsAboveFollowerSoftCap]](<span class="apiarg">garrFollowerTypeID</span>)
: [[API C_Garrison.IsAtGarrisonMissionNPC|C_Garrison.IsAtGarrisonMissionNPC]]() : <span class="apiret">atGarrisonMissionNPC</span>
: [[API C_Garrison.IsEnvironmentCountered|C_Garrison.IsEnvironmentCountered]](<span class="apiarg">missionID</span>) : <span class="apiret">environmentCountered</span>
: [[API C_Garrison.IsFollowerCollected|C_Garrison.IsFollowerCollected]](<span class="apiarg">garrFollowerID</span>)
: [[API C_Garrison.IsMechanicFullyCountered|C_Garrison.IsMechanicFullyCountered]](<span class="apiarg">missionID, followerID, mechanicID</span>)
: [[API C_Garrison.MarkMissionComplete|C_Garrison.MarkMissionComplete]](<span class="apiarg">missionID</span>)
: [[API C_Garrison.MissionBonusRoll|C_Garrison.MissionBonusRoll]](<span class="apiarg">missionID</span>)
: [[API C_Garrison.RecruitFollower|C_Garrison.RecruitFollower]](<span class="apiarg">followerIndex</span>)
: [[API C_Garrison.RemoveFollower|C_Garrison.RemoveFollower]](<span class="apiarg">dbID</span>)
: [[API C_Garrison.RemoveFollowerFromBuilding|C_Garrison.RemoveFollowerFromBuilding]]()
: [[API C_Garrison.RemoveFollowerFromMission|C_Garrison.RemoveFollowerFromMission]](<span class="apiarg">missionID, followerID [, boardIndex]</span>)
: [[API C_Garrison.RenameFollower|C_Garrison.RenameFollower]](<span class="apiarg">followerID, name</span>)
: [[API C_Garrison.RequestClassSpecCategoryInfo|C_Garrison.RequestClassSpecCategoryInfo]](<span class="apiarg">garrFollowerTypeID</span>)
: [[API C_Garrison.RushHealAllFollowers|C_Garrison.RushHealAllFollowers]](<span class="apiarg">followerType</span>)
: [[API C_Garrison.RushHealFollower|C_Garrison.RushHealFollower]](<span class="apiarg">garrFollowerID</span>)
: [[API C_Garrison.SearchForFollower|C_Garrison.SearchForFollower]](<span class="apiarg">guid|id, searchString</span>)
: [[API C_Garrison.SetFollowerFavorite|C_Garrison.SetFollowerFavorite]]()
: [[API C_Garrison.SetFollowerInactive|C_Garrison.SetFollowerInactive]](<span class="apiarg">followerID, inactive</span>)
: [[API C_Garrison.SetRecruitmentPreferences|C_Garrison.SetRecruitmentPreferences]](<span class="apiarg">mechanicTypeID, traitID</span>)
: [[API C_Garrison.ShowFollowerNameInErrorMessage|C_Garrison.ShowFollowerNameInErrorMessage]](<span class="apiarg">missionRecID</span>)
: [[API C_Garrison.StartMission|C_Garrison.StartMission]](<span class="apiarg">missionID</span>)
: [[API C_Garrison.TargetSpellHasFollowerItemLevelUpgrade|C_Garrison.TargetSpellHasFollowerItemLevelUpgrade]]()
: [[API C_Garrison.TargetSpellHasFollowerReroll|C_Garrison.TargetSpellHasFollowerReroll]]()
: [[API C_Garrison.TargetSpellHasFollowerTemporaryAbility|C_Garrison.TargetSpellHasFollowerTemporaryAbility]]()
: [[API ItemCanTargetGarrisonFollowerAbility|ItemCanTargetGarrisonFollowerAbility]]()
: [[API SpellCanTargetGarrisonFollowerAbility|SpellCanTargetGarrisonFollowerAbility]]()
: [[API SpellCanTargetGarrisonFollower|SpellCanTargetGarrisonFollower]]()
: [[API SpellCanTargetGarrisonMission|SpellCanTargetGarrisonMission]]()

==== Auto Missions ====
: [[API C_Garrison.GetAutoCombatDamageClassValues|C_Garrison.GetAutoCombatDamageClassValues]]() : <span class="apiret">damageClassStrings</span>
: [[API C_Garrison.GetAutoMissionBoardState|C_Garrison.GetAutoMissionBoardState]](<span class="apiarg">missionID</span>) : <span class="apiret">targetInfo</span>
: [[API C_Garrison.GetAutoMissionEnvironmentEffect|C_Garrison.GetAutoMissionEnvironmentEffect]](<span class="apiarg">missionID</span>) : <span class="apiret">autoMissionEnvEffect</span>
: [[API C_Garrison.GetAutoMissionTargetingInfo|C_Garrison.GetAutoMissionTargetingInfo]](<span class="apiarg">missionID, followerID, casterBoardIndex</span>) : <span class="apiret">targetInfo</span>
: [[API C_Garrison.GetAutoMissionTargetingInfoForSpell|C_Garrison.GetAutoMissionTargetingInfoForSpell]](<span class="apiarg">missionID, autoCombatSpellID, casterBoardIndex</span>) : <span class="apiret">targetInfo</span>
: [[API C_Garrison.GetAutoTroops|C_Garrison.GetAutoTroops]](<span class="apiarg">followerType</span>) : <span class="apiret">autoTroopInfo</span>
: [[API C_Garrison.GetCombatLogSpellInfo|C_Garrison.GetCombatLogSpellInfo]](<span class="apiarg">autoCombatSpellID</span>) : <span class="apiret">spellInfo</span>
: [[API C_Garrison.GetFollowerAutoCombatSpells|C_Garrison.GetFollowerAutoCombatSpells]](<span class="apiarg">garrFollowerID, followerLevel</span>) : <span class="apiret">autoCombatSpells, autoCombatAutoAttack</span>
: [[API C_Garrison.GetFollowerAutoCombatStats|C_Garrison.GetFollowerAutoCombatStats]](<span class="apiarg">garrFollowerID</span>) : <span class="apiret">autoCombatInfo</span>
: [[API C_Garrison.RegenerateCombatLog|C_Garrison.RegenerateCombatLog]](<span class="apiarg">missionID</span>) : <span class="apiret">success</span>
: [[API C_Garrison.SetAutoCombatSpellFastForward|C_Garrison.SetAutoCombatSpellFastForward]](<span class="apiarg">state</span>)

=== Legion ===
==== Artifacts ====
[[Artifact]]s were added in [[Patch 7.0.3]]
: [[API C_ArtifactUI.AddPower|C_ArtifactUI.AddPower]](<span class="apiarg">powerID</span>) : <span class="apiret">success</span>
: [[API C_ArtifactUI.ApplyCursorRelicToSlot|C_ArtifactUI.ApplyCursorRelicToSlot]](<span class="apiarg">relicSlotIndex</span>)
: [[API C_ArtifactUI.CanApplyArtifactRelic|C_ArtifactUI.CanApplyArtifactRelic]](<span class="apiarg">relicItemID, onlyUnlocked</span>) : <span class="apiret">canApply</span>
: [[API C_ArtifactUI.CanApplyCursorRelicToSlot|C_ArtifactUI.CanApplyCursorRelicToSlot]](<span class="apiarg">relicSlotIndex</span>) : <span class="apiret">canApply</span>
: [[API C_ArtifactUI.CanApplyRelicItemIDToEquippedArtifactSlot|C_ArtifactUI.CanApplyRelicItemIDToEquippedArtifactSlot]](<span class="apiarg">relicItemID, relicSlotIndex</span>) : <span class="apiret">canApply</span>
: [[API C_ArtifactUI.CanApplyRelicItemIDToSlot|C_ArtifactUI.CanApplyRelicItemIDToSlot]](<span class="apiarg">relicItemID, relicSlotIndex</span>) : <span class="apiret">canApply</span>
: [[API C_ArtifactUI.CheckRespecNPC|C_ArtifactUI.CheckRespecNPC]]() : <span class="apiret">canRespec</span>
: [[API C_ArtifactUI.Clear|C_ArtifactUI.Clear]]() - Clear artifact data of last opened artifact weapon.
: [[API C_ArtifactUI.ClearForgeCamera|C_ArtifactUI.ClearForgeCamera]]()
: [[API C_ArtifactUI.ConfirmRespec|C_ArtifactUI.ConfirmRespec]]()
: [[API C_ArtifactUI.DoesEquippedArtifactHaveAnyRelicsSlotted|C_ArtifactUI.DoesEquippedArtifactHaveAnyRelicsSlotted]]() : <span class="apiret">hasAnyRelicsSlotted</span>
: [[API C_ArtifactUI.GetAppearanceInfo|C_ArtifactUI.GetAppearanceInfo]](<span class="apiarg">appearanceSetIndex, appearanceIndex</span>) : <span class="apiret">artifactAppearanceID, appearanceName, displayIndex, unlocked, ...</span> - Returns information about a selected artifact appearance.
: [[API C_ArtifactUI.GetAppearanceInfoByID|C_ArtifactUI.GetAppearanceInfoByID]](<span class="apiarg">artifactAppearanceID</span>) : <span class="apiret">artifactAppearanceSetID, artifactAppearanceID, appearanceName, ...</span> - Returns information about a selected artifact appearance.
: [[API C_ArtifactUI.GetAppearanceSetInfo|C_ArtifactUI.GetAppearanceSetInfo]](<span class="apiarg">appearanceSetIndex</span>) : <span class="apiret">artifactAppearanceSetID, appearanceSetName, appearanceSetDescription, ...</span>
: [[API C_ArtifactUI.GetArtifactArtInfo|C_ArtifactUI.GetArtifactArtInfo]]() : <span class="apiret">artifactArtInfo</span> - Returns information about the currently equipped artifact weapon.
: [[API C_ArtifactUI.GetArtifactInfo|C_ArtifactUI.GetArtifactInfo]]() : <span class="apiret">itemID, altItemID, name, icon, xp, pointsSpent, quality, artifactAppearanceID, ...</span>
: [[API C_ArtifactUI.GetArtifactItemID|C_ArtifactUI.GetArtifactItemID]]() : <span class="apiret">itemID</span>
: [[API C_ArtifactUI.GetArtifactTier|C_ArtifactUI.GetArtifactTier]]() : <span class="apiret">tier</span>
: [[API C_ArtifactUI.GetArtifactXPRewardTargetInfo|C_ArtifactUI.GetArtifactXPRewardTargetInfo]](<span class="apiarg">artifactCategoryID</span>) : <span class="apiret">name, icon</span>
: [[API C_ArtifactUI.GetCostForPointAtRank|C_ArtifactUI.GetCostForPointAtRank]](<span class="apiarg">rank, tier</span>) : <span class="apiret">cost</span>
: [[API C_ArtifactUI.GetEquippedArtifactArtInfo|C_ArtifactUI.GetEquippedArtifactArtInfo]]() : <span class="apiret">artifactArtInfo</span>
: [[API C_ArtifactUI.GetEquippedArtifactInfo|C_ArtifactUI.GetEquippedArtifactInfo]]() : <span class="apiret">itemID, altItemID, name, icon, xp, pointsSpent, quality, artifactAppearanceID, ...</span>
: [[API C_ArtifactUI.GetEquippedArtifactItemID|C_ArtifactUI.GetEquippedArtifactItemID]]() : <span class="apiret">itemID</span>
: [[API C_ArtifactUI.GetEquippedArtifactNumRelicSlots|C_ArtifactUI.GetEquippedArtifactNumRelicSlots]](<span class="apiarg">[onlyUnlocked]</span>) : <span class="apiret">numRelicSlots</span>
: [[API C_ArtifactUI.GetEquippedArtifactRelicInfo|C_ArtifactUI.GetEquippedArtifactRelicInfo]](<span class="apiarg">relicSlotIndex</span>) : <span class="apiret">name, icon, slotTypeName, link</span>
: [[API C_ArtifactUI.GetEquippedRelicLockedReason|C_ArtifactUI.GetEquippedRelicLockedReason]](<span class="apiarg">relicSlotIndex</span>) : <span class="apiret">lockedReason</span>
: [[API C_ArtifactUI.GetForgeRotation|C_ArtifactUI.GetForgeRotation]]() : <span class="apiret">forgeRotationX, forgeRotationY, forgeRotationZ</span>
: [[API C_ArtifactUI.GetItemLevelIncreaseProvidedByRelic|C_ArtifactUI.GetItemLevelIncreaseProvidedByRelic]](<span class="apiarg">itemLinkOrID</span>) : <span class="apiret">itemIevelIncrease</span>
: [[API C_ArtifactUI.GetMetaPowerInfo|C_ArtifactUI.GetMetaPowerInfo]]() : <span class="apiret">spellID, powerCost, currentRank</span>
: [[API C_ArtifactUI.GetNumAppearanceSets|C_ArtifactUI.GetNumAppearanceSets]]() : <span class="apiret">numAppearanceSets</span>
: [[API C_ArtifactUI.GetNumObtainedArtifacts|C_ArtifactUI.GetNumObtainedArtifacts]]() : <span class="apiret">numObtainedArtifacts</span>
: [[API C_ArtifactUI.GetNumRelicSlots|C_ArtifactUI.GetNumRelicSlots]](<span class="apiarg">[onlyUnlocked]</span>) : <span class="apiret">numRelicSlots</span>
: [[API C_ArtifactUI.GetPointsRemaining|C_ArtifactUI.GetPointsRemaining]]() : <span class="apiret">pointsRemaining</span>
: [[API C_ArtifactUI.GetPowerHyperlink|C_ArtifactUI.GetPowerHyperlink]](<span class="apiarg">powerID</span>) : <span class="apiret">link</span>
: [[API C_ArtifactUI.GetPowerInfo|C_ArtifactUI.GetPowerInfo]](<span class="apiarg">powerID</span>) : <span class="apiret">powerInfo</span>
: [[API C_ArtifactUI.GetPowerLinks|C_ArtifactUI.GetPowerLinks]](<span class="apiarg">powerID</span>) : <span class="apiret">linkingPowerID</span>
: [[API C_ArtifactUI.GetPowers|C_ArtifactUI.GetPowers]]() : <span class="apiret">powerID</span>
: [[API C_ArtifactUI.GetPowersAffectedByRelic|C_ArtifactUI.GetPowersAffectedByRelic]](<span class="apiarg">relicSlotIndex</span>) : <span class="apiret">powerIDs</span>
: [[API C_ArtifactUI.GetPowersAffectedByRelicItemLink|C_ArtifactUI.GetPowersAffectedByRelicItemLink]](<span class="apiarg">relicItemInfo</span>) : <span class="apiret">powerIDs</span>
: [[API C_ArtifactUI.GetPreviewAppearance|C_ArtifactUI.GetPreviewAppearance]]() : <span class="apiret">artifactAppearanceID</span>
: [[API C_ArtifactUI.GetRelicInfo|C_ArtifactUI.GetRelicInfo]](<span class="apiarg">relicSlotIndex</span>) : <span class="apiret">name, icon, slotTypeName, link</span>
: [[API C_ArtifactUI.GetRelicInfoByItemID|C_ArtifactUI.GetRelicInfoByItemID]](<span class="apiarg">itemID</span>) : <span class="apiret">name, icon, slotTypeName, link</span>
: [[API C_ArtifactUI.GetRelicLockedReason|C_ArtifactUI.GetRelicLockedReason]](<span class="apiarg">relicSlotIndex</span>) : <span class="apiret">lockedReason</span>
: [[API C_ArtifactUI.GetRelicSlotType|C_ArtifactUI.GetRelicSlotType]](<span class="apiarg">relicSlotIndex</span>) : <span class="apiret">slotTypeName</span>
: [[API C_ArtifactUI.GetRespecArtifactArtInfo|C_ArtifactUI.GetRespecArtifactArtInfo]]() : <span class="apiret">artifactArtInfo</span>
: [[API C_ArtifactUI.GetRespecArtifactInfo|C_ArtifactUI.GetRespecArtifactInfo]]() : <span class="apiret">itemID, altItemID, name, icon, xp, pointsSpent, quality, artifactAppearanceID, ...</span>
: [[API C_ArtifactUI.GetRespecCost|C_ArtifactUI.GetRespecCost]]() : <span class="apiret">cost</span>
: [[API C_ArtifactUI.GetTotalPowerCost|C_ArtifactUI.GetTotalPowerCost]](<span class="apiarg">startingTrait, numTraits, artifactTier</span>) : <span class="apiret">totalArtifactPowerCost</span>
: [[API C_ArtifactUI.GetTotalPurchasedRanks|C_ArtifactUI.GetTotalPurchasedRanks]]() : <span class="apiret">totalPurchasedRanks</span>
: [[API C_ArtifactUI.IsArtifactDisabled|C_ArtifactUI.IsArtifactDisabled]]() : <span class="apiret">artifactDisabled</span>
: [[API C_ArtifactUI.IsAtForge|C_ArtifactUI.IsAtForge]]() : <span class="apiret">isAtForge</span>
: [[API C_ArtifactUI.IsEquippedArtifactDisabled|C_ArtifactUI.IsEquippedArtifactDisabled]]() : <span class="apiret">artifactDisabled</span>
: [[API C_ArtifactUI.IsEquippedArtifactMaxed|C_ArtifactUI.IsEquippedArtifactMaxed]]() : <span class="apiret">artifactMaxed</span>
: [[API C_ArtifactUI.IsMaxedByRulesOrEffect|C_ArtifactUI.IsMaxedByRulesOrEffect]]() : <span class="apiret">isEffectivelyMaxed</span>
: [[API C_ArtifactUI.IsPowerKnown|C_ArtifactUI.IsPowerKnown]](<span class="apiarg">powerID</span>) : <span class="apiret">known</span>
: [[API C_ArtifactUI.IsViewedArtifactEquipped|C_ArtifactUI.IsViewedArtifactEquipped]]() : <span class="apiret">isViewedArtifactEquipped</span>
: [[API C_ArtifactUI.SetAppearance|C_ArtifactUI.SetAppearance]](<span class="apiarg">artifactAppearanceID</span>)
: [[API C_ArtifactUI.SetForgeCamera|C_ArtifactUI.SetForgeCamera]]()
: [[API C_ArtifactUI.SetForgeRotation|C_ArtifactUI.SetForgeRotation]](<span class="apiarg">forgeRotationX, forgeRotationY, forgeRotationZ</span>)
: [[API C_ArtifactUI.SetPreviewAppearance|C_ArtifactUI.SetPreviewAppearance]](<span class="apiarg">[artifactAppearanceID]</span>)
: [[API C_ArtifactUI.ShouldSuppressForgeRotation|C_ArtifactUI.ShouldSuppressForgeRotation]]() : <span class="apiret">shouldSuppressForgeRotation</span>
: [[API HasArtifactEquipped|HasArtifactEquipped]]()
: [[API IsArtifactPowerItem|IsArtifactPowerItem]]()
: [[API IsArtifactRelicItem|IsArtifactRelicItem]](<span class="apiarg">item</span>)

==== Invasions ====
[[Legion Invasions|Invasions]] were added in [[Patch 7.0.3]]
: [[API C_InvasionInfo.AreInvasionsAvailable|C_InvasionInfo.AreInvasionsAvailable]]() : <span class="apiret">areInvasionsAvailable</span> - Returns true if invasions are active in the same physical area as the player.
: [[API C_InvasionInfo.GetInvasionForUiMapID|C_InvasionInfo.GetInvasionForUiMapID]](<span class="apiarg">uiMapID</span>) : <span class="apiret">invasionID</span> - Returns any invasion for a map.
: [[API C_InvasionInfo.GetInvasionInfo|C_InvasionInfo.GetInvasionInfo]](<span class="apiarg">invasionID</span>) : <span class="apiret">invasionInfo</span> - Returns invasion info.
: [[API C_InvasionInfo.GetInvasionTimeLeft|C_InvasionInfo.GetInvasionTimeLeft]](<span class="apiarg">invasionID</span>) : <span class="apiret">timeLeftMinutes</span> - Returns the time left for an invasion.

==== Contribution ====
Relates to buildings on the [[Broken Shore]] or [[Warfront|Warfronts]]; added in [[Patch 7.2.0]].
: [[API C_ContributionCollector.Close|C_ContributionCollector.Close]]() - Closes the contribution collector API state.
: [[API C_ContributionCollector.Contribute|C_ContributionCollector.Contribute]](<span class="apiarg">contributionID</span>) - Contributes resources to a building.
: [[API C_ContributionCollector.GetActive|C_ContributionCollector.GetActive]]() : <span class="apiret">contributionID</span> - Returns the currently active buildings.
: [[API C_ContributionCollector.GetAtlases|C_ContributionCollector.GetAtlases]](<span class="apiarg">contributionID</span>) : <span class="apiret">atlasName</span> - Returns a table listing the possible states for a building.
: [[API C_ContributionCollector.GetBuffs|C_ContributionCollector.GetBuffs]](<span class="apiarg">contributionID</span>) : <span class="apiret">spellID</span> - Returns the buffs provided when a building is active.
: [[API C_ContributionCollector.GetContributionAppearance|C_ContributionCollector.GetContributionAppearance]](<span class="apiarg">contributionID, contributionState</span>) : <span class="apiret">appearance</span> - Returns contribution appearance info.
: [[API C_ContributionCollector.GetContributionCollectorsForMap|C_ContributionCollector.GetContributionCollectorsForMap]](<span class="apiarg">uiMapID</span>) : <span class="apiret">contributionCollectors</span> - Returns contribution buildings on a map.
: [[API C_ContributionCollector.GetContributionResult|C_ContributionCollector.GetContributionResult]](<span class="apiarg">contributionID</span>) : <span class="apiret">result</span> - Returns a value indicating the result of a contribution.
: [[API C_ContributionCollector.GetDescription|C_ContributionCollector.GetDescription]](<span class="apiarg">contributionID</span>) : <span class="apiret">description</span> - Returns the description of a building.
: [[API C_ContributionCollector.GetManagedContributionsForCreatureID|C_ContributionCollector.GetManagedContributionsForCreatureID]](<span class="apiarg">creatureID</span>) : <span class="apiret">contributionID</span> - Returns contributions for a creature.
: [[API C_ContributionCollector.GetName|C_ContributionCollector.GetName]](<span class="apiarg">contributionID</span>) : <span class="apiret">name</span> - Returns the name of a building.
: [[API C_ContributionCollector.GetOrderIndex|C_ContributionCollector.GetOrderIndex]](<span class="apiarg">contributionID</span>) : <span class="apiret">orderIndex</span> - Returns the order in which buildings are displayed.
: [[API C_ContributionCollector.GetRequiredContributionCurrency|C_ContributionCollector.GetRequiredContributionCurrency]](<span class="apiarg">contributionID</span>) : <span class="apiret">currencyID, currencyAmount</span> - Returns the currencyID and amount needed to contribute to a building.
: [[API C_ContributionCollector.GetRequiredContributionItem|C_ContributionCollector.GetRequiredContributionItem]](<span class="apiarg">contributionID</span>) : <span class="apiret">itemID, itemCount</span> - Returns the itemID and amount needed to contribute to a building.
: [[API C_ContributionCollector.GetRewardQuestID|C_ContributionCollector.GetRewardQuestID]](<span class="apiarg">contributionID</span>) : <span class="apiret">questID</span> - Returns the hidden quest that is flagged completed when a contribution is made.
: [[API C_ContributionCollector.GetState|C_ContributionCollector.GetState]](<span class="apiarg">contributionID</span>) : <span class="apiret">contributionState, contributionPercentageComplete, timeOfNextStateChange, ...</span> - Returns the current state of a building, its completion percentage, and time until next state change.
: [[API C_ContributionCollector.HasPendingContribution|C_ContributionCollector.HasPendingContribution]](<span class="apiarg">contributionID</span>) : <span class="apiret">hasPending</span> - Returns whether there is a pending contribution.
: [[API C_ContributionCollector.IsAwaitingRewardQuestData|C_ContributionCollector.IsAwaitingRewardQuestData]](<span class="apiarg">contributionID</span>) : <span class="apiret">awaitingData</span> - Returns whether the contribution API is waiting for quest data.

=== Battle for Azeroth ===
==== Azerite ====
[[:Azerite]] was added in [[Patch 8.0.1]]
: [[API C_AzeriteItem.FindActiveAzeriteItem|C_AzeriteItem.FindActiveAzeriteItem]]() : <span class="apiret">activeAzeriteItemLocation</span>
: [[API C_AzeriteItem.GetAzeriteItemXPInfo|C_AzeriteItem.GetAzeriteItemXPInfo]](<span class="apiarg">azeriteItemLocation</span>) : <span class="apiret">xp, totalLevelXP</span>
: [[API C_AzeriteItem.GetPowerLevel|C_AzeriteItem.GetPowerLevel]](<span class="apiarg">azeriteItemLocation</span>) : <span class="apiret">powerLevel</span>
: [[API C_AzeriteItem.GetUnlimitedPowerLevel|C_AzeriteItem.GetUnlimitedPowerLevel]](<span class="apiarg">azeriteItemLocation</span>) : <span class="apiret">powerLevel</span>
: [[API C_AzeriteItem.HasActiveAzeriteItem|C_AzeriteItem.HasActiveAzeriteItem]]() : <span class="apiret">hasActiveAzeriteItem</span>
: [[API C_AzeriteItem.IsAzeriteItem|C_AzeriteItem.IsAzeriteItem]](<span class="apiarg">itemLocation</span>) : <span class="apiret">isAzeriteItem</span>
: [[API C_AzeriteItem.IsAzeriteItemAtMaxLevel|C_AzeriteItem.IsAzeriteItemAtMaxLevel]]() : <span class="apiret">isAtMax</span>
: [[API C_AzeriteItem.IsAzeriteItemByID|C_AzeriteItem.IsAzeriteItemByID]](<span class="apiarg">itemInfo</span>) : <span class="apiret">isAzeriteItem</span>
: [[API C_AzeriteItem.IsAzeriteItemEnabled|C_AzeriteItem.IsAzeriteItemEnabled]](<span class="apiarg">azeriteItemLocation</span>) : <span class="apiret">isEnabled</span>
: [[API C_AzeriteEmpoweredItem.CanSelectPower|C_AzeriteEmpoweredItem.CanSelectPower]](<span class="apiarg">azeriteEmpoweredItemLocation, powerID</span>) : <span class="apiret">canSelect</span>
: [[API C_AzeriteEmpoweredItem.CloseAzeriteEmpoweredItemRespec|C_AzeriteEmpoweredItem.CloseAzeriteEmpoweredItemRespec]]()
: [[API C_AzeriteEmpoweredItem.ConfirmAzeriteEmpoweredItemRespec|C_AzeriteEmpoweredItem.ConfirmAzeriteEmpoweredItemRespec]](<span class="apiarg">azeriteEmpoweredItemLocation</span>)
: [[API C_AzeriteEmpoweredItem.GetAllTierInfo|C_AzeriteEmpoweredItem.GetAllTierInfo]](<span class="apiarg">azeriteEmpoweredItemLocation</span>) : <span class="apiret">tierInfo</span>
: [[API C_AzeriteEmpoweredItem.GetAllTierInfoByItemID|C_AzeriteEmpoweredItem.GetAllTierInfoByItemID]](<span class="apiarg">itemInfo [, classID]</span>) : <span class="apiret">tierInfo</span>
: [[API C_AzeriteEmpoweredItem.GetAzeriteEmpoweredItemRespecCost|C_AzeriteEmpoweredItem.GetAzeriteEmpoweredItemRespecCost]]() : <span class="apiret">cost</span>
: [[API C_AzeriteEmpoweredItem.GetPowerInfo|C_AzeriteEmpoweredItem.GetPowerInfo]](<span class="apiarg">powerID</span>) : <span class="apiret">powerInfo</span>
: [[API C_AzeriteEmpoweredItem.GetPowerText|C_AzeriteEmpoweredItem.GetPowerText]](<span class="apiarg">azeriteEmpoweredItemLocation, powerID, level</span>) : <span class="apiret">powerText</span>
: [[API C_AzeriteEmpoweredItem.GetSpecsForPower|C_AzeriteEmpoweredItem.GetSpecsForPower]](<span class="apiarg">powerID</span>) : <span class="apiret">specInfo</span>
: [[API C_AzeriteEmpoweredItem.HasAnyUnselectedPowers|C_AzeriteEmpoweredItem.HasAnyUnselectedPowers]](<span class="apiarg">azeriteEmpoweredItemLocation</span>) : <span class="apiret">hasAnyUnselectedPowers</span>
: [[API C_AzeriteEmpoweredItem.HasBeenViewed|C_AzeriteEmpoweredItem.HasBeenViewed]](<span class="apiarg">azeriteEmpoweredItemLocation</span>) : <span class="apiret">hasBeenViewed</span>
: [[API C_AzeriteEmpoweredItem.IsAzeriteEmpoweredItem|C_AzeriteEmpoweredItem.IsAzeriteEmpoweredItem]](<span class="apiarg">itemLocation</span>) : <span class="apiret">isAzeriteEmpoweredItem</span>
: [[API C_AzeriteEmpoweredItem.IsAzeriteEmpoweredItemByID|C_AzeriteEmpoweredItem.IsAzeriteEmpoweredItemByID]](<span class="apiarg">itemInfo</span>) : <span class="apiret">isAzeriteEmpoweredItem</span>
: [[API C_AzeriteEmpoweredItem.IsAzeritePreviewSourceDisplayable|C_AzeriteEmpoweredItem.IsAzeritePreviewSourceDisplayable]](<span class="apiarg">itemInfo [, classID]</span>) : <span class="apiret">isAzeritePreviewSourceDisplayable</span>
: [[API C_AzeriteEmpoweredItem.IsHeartOfAzerothEquipped|C_AzeriteEmpoweredItem.IsHeartOfAzerothEquipped]]() : <span class="apiret">isHeartOfAzerothEquipped</span>
: [[API C_AzeriteEmpoweredItem.IsPowerAvailableForSpec|C_AzeriteEmpoweredItem.IsPowerAvailableForSpec]](<span class="apiarg">powerID, specID</span>) : <span class="apiret">isPowerAvailableForSpec</span>
: [[API C_AzeriteEmpoweredItem.IsPowerSelected|C_AzeriteEmpoweredItem.IsPowerSelected]](<span class="apiarg">azeriteEmpoweredItemLocation, powerID</span>) : <span class="apiret">isSelected</span>
: [[API C_AzeriteEmpoweredItem.SelectPower|C_AzeriteEmpoweredItem.SelectPower]](<span class="apiarg">azeriteEmpoweredItemLocation, powerID</span>) : <span class="apiret">success</span>
: [[API C_AzeriteEmpoweredItem.SetHasBeenViewed|C_AzeriteEmpoweredItem.SetHasBeenViewed]](<span class="apiarg">azeriteEmpoweredItemLocation</span>)
: [[API C_PaperDollInfo.GetInspectAzeriteItemEmpoweredChoices|C_PaperDollInfo.GetInspectAzeriteItemEmpoweredChoices]](<span class="apiarg">unit, equipmentSlotIndex</span>) : <span class="apiret">azeritePowerIDs</span>
Azerite Essences were added in [[Patch 8.2.0]]
: [[API C_AzeriteEssence.ActivateEssence|C_AzeriteEssence.ActivateEssence]](<span class="apiarg">essenceID, milestoneID</span>)
: [[API C_AzeriteEssence.CanActivateEssence|C_AzeriteEssence.CanActivateEssence]](<span class="apiarg">essenceID, milestoneID</span>) : <span class="apiret">canActivate</span>
: [[API C_AzeriteEssence.CanDeactivateEssence|C_AzeriteEssence.CanDeactivateEssence]](<span class="apiarg">milestoneID</span>) : <span class="apiret">canDeactivate</span>
: [[API C_AzeriteEssence.CanOpenUI|C_AzeriteEssence.CanOpenUI]]() : <span class="apiret">canOpen</span>
: [[API C_AzeriteEssence.ClearPendingActivationEssence|C_AzeriteEssence.ClearPendingActivationEssence]]()
: [[API C_AzeriteEssence.CloseForge|C_AzeriteEssence.CloseForge]]()
: [[API C_AzeriteEssence.GetEssenceHyperlink|C_AzeriteEssence.GetEssenceHyperlink]](<span class="apiarg">essenceID, rank</span>) : <span class="apiret">link</span>
: [[API C_AzeriteEssence.GetEssenceInfo|C_AzeriteEssence.GetEssenceInfo]](<span class="apiarg">essenceID</span>) : <span class="apiret">info</span>
: [[API C_AzeriteEssence.GetEssences|C_AzeriteEssence.GetEssences]]() : <span class="apiret">essences</span>
: [[API C_AzeriteEssence.GetMilestoneEssence|C_AzeriteEssence.GetMilestoneEssence]](<span class="apiarg">milestoneID</span>) : <span class="apiret">essenceID</span>
: [[API C_AzeriteEssence.GetMilestoneInfo|C_AzeriteEssence.GetMilestoneInfo]](<span class="apiarg">milestoneID</span>) : <span class="apiret">info</span>
: [[API C_AzeriteEssence.GetMilestones|C_AzeriteEssence.GetMilestones]]() : <span class="apiret">milestones</span>
: [[API C_AzeriteEssence.GetMilestoneSpell|C_AzeriteEssence.GetMilestoneSpell]](<span class="apiarg">milestoneID</span>) : <span class="apiret">spellID</span>
: [[API C_AzeriteEssence.GetNumUnlockedEssences|C_AzeriteEssence.GetNumUnlockedEssences]]() : <span class="apiret">numUnlockedEssences</span>
: [[API C_AzeriteEssence.GetNumUsableEssences|C_AzeriteEssence.GetNumUsableEssences]]() : <span class="apiret">numUsableEssences</span>
: [[API C_AzeriteEssence.GetPendingActivationEssence|C_AzeriteEssence.GetPendingActivationEssence]]() : <span class="apiret">essenceID</span>
: [[API C_AzeriteEssence.HasNeverActivatedAnyEssences|C_AzeriteEssence.HasNeverActivatedAnyEssences]]() : <span class="apiret">hasNeverActivatedAnyEssences</span>
: [[API C_AzeriteEssence.HasPendingActivationEssence|C_AzeriteEssence.HasPendingActivationEssence]]() : <span class="apiret">hasEssence</span>
: [[API C_AzeriteEssence.IsAtForge|C_AzeriteEssence.IsAtForge]]() : <span class="apiret">isAtForge</span>
: [[API C_AzeriteEssence.SetPendingActivationEssence|C_AzeriteEssence.SetPendingActivationEssence]](<span class="apiarg">essenceID</span>)
: [[API C_AzeriteEssence.UnlockMilestone|C_AzeriteEssence.UnlockMilestone]](<span class="apiarg">milestoneID</span>)

==== Corruption ====
[[Corrupted item]]s were added in [[Patch 8.3.0]]
: [[API C_Item.IsItemCorrupted|C_Item.IsItemCorrupted]](<span class="apiarg">itemLoc</span>) : <span class="apiret">isCorrupted</span>
: [[API C_Item.IsItemCorruptionRelated|C_Item.IsItemCorruptionRelated]](<span class="apiarg">itemLoc</span>) : <span class="apiret">isCorruptionRelated</span>
: [[API C_Item.IsItemCorruptionResistant|C_Item.IsItemCorruptionResistant]](<span class="apiarg">itemLoc</span>) : <span class="apiret">isCorruptionResistant</span>
: [[API C_ItemInteraction.SetCorruptionReforgerItemTooltip|C_ItemInteraction.SetCorruptionReforgerItemTooltip]]()
: [[API GetCorruption|GetCorruption]]()
: [[API GetCorruptionResistance|GetCorruptionResistance]]()
: [[API GetNegativeCorruptionEffectInfo|GetNegativeCorruptionEffectInfo]]() : <span class="apiret">corruptionEffects</span>
: [[API IsCorruptedItem|IsCorruptedItem]](<span class="apiarg">item</span>)

==== Island Expeditions ====
[[Island Expeditions]] were added in [[Patch 8.0.1]]
: [[API C_IslandsQueue.CloseIslandsQueueScreen|C_IslandsQueue.CloseIslandsQueueScreen]]() - Closes the islands queue screen.
: [[API C_IslandsQueue.GetIslandDifficultyInfo|C_IslandsQueue.GetIslandDifficultyInfo]]() : <span class="apiret">islandDifficultyInfo</span> - Returns the island expedition modes.
: [[API C_IslandsQueue.GetIslandsMaxGroupSize|C_IslandsQueue.GetIslandsMaxGroupSize]]() : <span class="apiret">maxGroupSize</span> - Returns the max group size for expeditions.
: [[API C_IslandsQueue.GetIslandsWeeklyQuestID|C_IslandsQueue.GetIslandsWeeklyQuestID]]() : <span class="apiret">questID</span> - Returns the weekly island quest.
: [[API C_IslandsQueue.QueueForIsland|C_IslandsQueue.QueueForIsland]](<span class="apiarg">difficultyID</span>) - Queues for an island expedition.
: [[API C_IslandsQueue.RequestPreloadRewardData|C_IslandsQueue.RequestPreloadRewardData]](<span class="apiarg">questId</span>) - Preloads reward data for a quest id.
: [[API C_PartyPose.GetPartyPoseInfoByMapID|C_PartyPose.GetPartyPoseInfoByMapID]](<span class="apiarg">mapID</span>) : <span class="apiret">info</span> - Returns party pose info for a map.
: [[API ShouldShowIslandsWeeklyPOI|ShouldShowIslandsWeeklyPOI]]()

==== Scrapping Machine ====
The [[Scrapper]] was added in [[Patch 8.0.1]]
: [[API C_Item.CanScrapItem|C_Item.CanScrapItem]](<span class="apiarg">itemLoc</span>) : <span class="apiret">canBeScrapped</span>
: [[API C_ScrappingMachineUI.CloseScrappingMachine|C_ScrappingMachineUI.CloseScrappingMachine]]()
: [[API C_ScrappingMachineUI.DropPendingScrapItemFromCursor|C_ScrappingMachineUI.DropPendingScrapItemFromCursor]](<span class="apiarg">index</span>)
: [[API C_ScrappingMachineUI.GetCurrentPendingScrapItemLocationByIndex|C_ScrappingMachineUI.GetCurrentPendingScrapItemLocationByIndex]](<span class="apiarg">index</span>) : <span class="apiret">itemLoc</span>
: [[API C_ScrappingMachineUI.GetScrapSpellID|C_ScrappingMachineUI.GetScrapSpellID]]() : <span class="apiret">spellID</span>
: [[API C_ScrappingMachineUI.GetScrappingMachineName|C_ScrappingMachineUI.GetScrappingMachineName]]() : <span class="apiret">name</span>
: [[API C_ScrappingMachineUI.HasScrappableItems|C_ScrappingMachineUI.HasScrappableItems]]() : <span class="apiret">hasScrappableItems</span>
: [[API C_ScrappingMachineUI.RemoveAllScrapItems|C_ScrappingMachineUI.RemoveAllScrapItems]]()
: [[API C_ScrappingMachineUI.RemoveCurrentScrappingItem|C_ScrappingMachineUI.RemoveCurrentScrappingItem]]()
: [[API C_ScrappingMachineUI.RemoveItemToScrap|C_ScrappingMachineUI.RemoveItemToScrap]](<span class="apiarg">index</span>)
: [[API C_ScrappingMachineUI.ScrapItems|C_ScrappingMachineUI.ScrapItems]]()
: [[API C_ScrappingMachineUI.SetScrappingMachine|C_ScrappingMachineUI.SetScrappingMachine]](<span class="apiarg">gameObject</span>)
: [[API C_ScrappingMachineUI.ValidateScrappingList|C_ScrappingMachineUI.ValidateScrappingList]]()

=== Shadowlands ===
Ardenweald
: [[API C_ArdenwealdGardening.GetGardenData|C_ArdenwealdGardening.GetGardenData]]() : <span class="apiret">data</span>
: [[API C_ArdenwealdGardening.IsGardenAccessible|C_ArdenwealdGardening.IsGardenAccessible]]() : <span class="apiret">accessible</span>
The Maw
: [[API C_Spell.GetMawPowerBorderAtlasBySpellID|C_Spell.GetMawPowerBorderAtlasBySpellID]](<span class="apiarg">spellID</span>) : <span class="apiret">rarityBorderAtlas</span>
: [[API GetMawPowerLinkBySpellID|GetMawPowerLinkBySpellID]](<span class="apiarg">spellID</span>)
Torghast
: [[API C_PartyInfo.IsPartyInJailersTower|C_PartyInfo.IsPartyInJailersTower]]() : <span class="apiret">isPartyInJailersTower</span>
: [[API C_ScenarioInfo.GetJailersTowerTypeString|C_ScenarioInfo.GetJailersTowerTypeString]](<span class="apiarg">runType</span>) : <span class="apiret">typeString</span>
: [[API GetJailersTowerLevel|GetJailersTowerLevel]]()
: [[API IsInJailersTower|IsInJailersTower]]()
: [[API IsJailersTowerLayerTimeLocked|IsJailersTowerLayerTimeLocked]]()
: [[API IsOnGroundFloorInJailersTower|IsOnGroundFloorInJailersTower]]()

==== Anima ====
[[:Anima]] was added in [[Patch 9.0.1]]
: [[API C_AnimaDiversion.CloseUI|C_AnimaDiversion.CloseUI]]()
: [[API C_AnimaDiversion.GetAnimaDiversionNodes|C_AnimaDiversion.GetAnimaDiversionNodes]]() : <span class="apiret">animaNodes</span>
: [[API C_AnimaDiversion.GetOriginPosition|C_AnimaDiversion.GetOriginPosition]]() : <span class="apiret">normalizedPosition</span>
: [[API C_AnimaDiversion.GetReinforceProgress|C_AnimaDiversion.GetReinforceProgress]]() : <span class="apiret">progress</span>
: [[API C_AnimaDiversion.GetTextureKit|C_AnimaDiversion.GetTextureKit]]() : <span class="apiret">textureKit</span>
: [[API C_AnimaDiversion.OpenAnimaDiversionUI|C_AnimaDiversion.OpenAnimaDiversionUI]]()
: [[API C_AnimaDiversion.SelectAnimaNode|C_AnimaDiversion.SelectAnimaNode]](<span class="apiarg">talentID, temporary</span>)
: [[API C_Item.IsAnimaItemByID|C_Item.IsAnimaItemByID]](<span class="apiarg">itemInfo</span>) : <span class="apiret">isAnimaItem</span>

==== Covenants ====
[[Covenant]]s were added in [[Patch 9.0.1]]
: [[API C_Covenants.GetActiveCovenantID|C_Covenants.GetActiveCovenantID]]() : <span class="apiret">covenantID</span>
: [[API C_Covenants.GetCovenantData|C_Covenants.GetCovenantData]](<span class="apiarg">covenantID</span>) : <span class="apiret">data</span>
: [[API C_Covenants.GetCovenantIDs|C_Covenants.GetCovenantIDs]]() : <span class="apiret">covenantID</span>
: [[API C_CovenantCallings.AreCallingsUnlocked|C_CovenantCallings.AreCallingsUnlocked]]() : <span class="apiret">unlocked</span>
: [[API C_CovenantCallings.RequestCallings|C_CovenantCallings.RequestCallings]]()
: [[API C_CovenantPreview.CloseFromUI|C_CovenantPreview.CloseFromUI]]()
: [[API C_CovenantPreview.GetCovenantInfoForPlayerChoiceResponseID|C_CovenantPreview.GetCovenantInfoForPlayerChoiceResponseID]](<span class="apiarg">playerChoiceResponseID</span>) : <span class="apiret">previewInfo</span>
: [[API C_CovenantSanctumUI.CanAccessReservoir|C_CovenantSanctumUI.CanAccessReservoir]]() : <span class="apiret">canAccess</span>
: [[API C_CovenantSanctumUI.CanDepositAnima|C_CovenantSanctumUI.CanDepositAnima]]() : <span class="apiret">canDeposit</span>
: [[API C_CovenantSanctumUI.DepositAnima|C_CovenantSanctumUI.DepositAnima]]()
: [[API C_CovenantSanctumUI.EndInteraction|C_CovenantSanctumUI.EndInteraction]]()
: [[API C_CovenantSanctumUI.GetAnimaInfo|C_CovenantSanctumUI.GetAnimaInfo]]() : <span class="apiret">currencyID, maxDisplayableValue</span>
: [[API C_CovenantSanctumUI.GetCurrentTalentTreeID|C_CovenantSanctumUI.GetCurrentTalentTreeID]]() : <span class="apiret">currentTalentTreeID</span>
: [[API C_CovenantSanctumUI.GetFeatures|C_CovenantSanctumUI.GetFeatures]]() : <span class="apiret">features</span>
: [[API C_CovenantSanctumUI.GetRenownLevel|C_CovenantSanctumUI.GetRenownLevel]]() : <span class="apiret">level</span>
: [[API C_CovenantSanctumUI.GetRenownLevels|C_CovenantSanctumUI.GetRenownLevels]](<span class="apiarg">covenantID</span>) : <span class="apiret">levels</span>
: [[API C_CovenantSanctumUI.GetRenownRewardsForLevel|C_CovenantSanctumUI.GetRenownRewardsForLevel]](<span class="apiarg">covenantID, renownLevel</span>) : <span class="apiret">rewards</span>
: [[API C_CovenantSanctumUI.GetSanctumType|C_CovenantSanctumUI.GetSanctumType]]() : <span class="apiret">sanctumType</span>
: [[API C_CovenantSanctumUI.GetSoulCurrencies|C_CovenantSanctumUI.GetSoulCurrencies]]() : <span class="apiret">currencyIDs</span>
: [[API C_CovenantSanctumUI.HasMaximumRenown|C_CovenantSanctumUI.HasMaximumRenown]]() : <span class="apiret">hasMaxRenown</span>
: [[API C_CovenantSanctumUI.IsPlayerInRenownCatchUpMode|C_CovenantSanctumUI.IsPlayerInRenownCatchUpMode]]() : <span class="apiret">isInCatchUpMode</span>
: [[API C_CovenantSanctumUI.IsWeeklyRenownCapped|C_CovenantSanctumUI.IsWeeklyRenownCapped]]() : <span class="apiret">isWeeklyCapped</span>
: [[API C_CovenantSanctumUI.RequestCatchUpState|C_CovenantSanctumUI.RequestCatchUpState]]()

==== Legendary Crafting ====
Shadowlands legendaries can be crafted in the [[Forge of Domination]].
: [[API C_LegendaryCrafting.CloseRuneforgeInteraction|C_LegendaryCrafting.CloseRuneforgeInteraction]]()
: [[API C_LegendaryCrafting.CraftRuneforgeLegendary|C_LegendaryCrafting.CraftRuneforgeLegendary]](<span class="apiarg">description</span>)
: [[API C_LegendaryCrafting.GetRuneforgeItemPreviewInfo|C_LegendaryCrafting.GetRuneforgeItemPreviewInfo]](<span class="apiarg">baseItem [, runeforgePowerID, modifiers]</span>) : <span class="apiret">info</span>
: [[API C_LegendaryCrafting.GetRuneforgeLegendaryComponentInfo|C_LegendaryCrafting.GetRuneforgeLegendaryComponentInfo]](<span class="apiarg">runeforgeLegendary</span>) : <span class="apiret">componentInfo</span>
: [[API C_LegendaryCrafting.GetRuneforgeLegendaryCost|C_LegendaryCrafting.GetRuneforgeLegendaryCost]](<span class="apiarg">baseItem</span>) : <span class="apiret">cost</span>
: [[API C_LegendaryCrafting.GetRuneforgeLegendaryCraftSpellID|C_LegendaryCrafting.GetRuneforgeLegendaryCraftSpellID]]() : <span class="apiret">spellID</span>
: [[API C_LegendaryCrafting.GetRuneforgeLegendaryCurrencies|C_LegendaryCrafting.GetRuneforgeLegendaryCurrencies]]() : <span class="apiret">currencies</span>
: [[API C_LegendaryCrafting.GetRuneforgeLegendaryUpgradeCost|C_LegendaryCrafting.GetRuneforgeLegendaryUpgradeCost]](<span class="apiarg">runeforgeLegendary, upgradeItem</span>) : <span class="apiret">cost</span>
: [[API C_LegendaryCrafting.GetRuneforgeModifierInfo|C_LegendaryCrafting.GetRuneforgeModifierInfo]](<span class="apiarg">baseItem, [powerID], addedModifierIndex, modifiers</span>) : <span class="apiret">name, description</span>
: [[API C_LegendaryCrafting.GetRuneforgeModifiers|C_LegendaryCrafting.GetRuneforgeModifiers]]() : <span class="apiret">modifiedReagentItemIDs</span>
: [[API C_LegendaryCrafting.GetRuneforgePowerInfo|C_LegendaryCrafting.GetRuneforgePowerInfo]](<span class="apiarg">runeforgePowerID</span>) : <span class="apiret">power</span>
: [[API C_LegendaryCrafting.GetRuneforgePowers|C_LegendaryCrafting.GetRuneforgePowers]](<span class="apiarg">[baseItem, filter]</span>) : <span class="apiret">primaryRuneforgePowerIDs, otherRuneforgePowerIDs</span>
: [[API C_LegendaryCrafting.GetRuneforgePowersByClassSpecAndCovenant|C_LegendaryCrafting.GetRuneforgePowersByClassSpecAndCovenant]](<span class="apiarg">[classID, specID, covenantID, filter]</span>) : <span class="apiret">runeforgePowerIDs</span>
: [[API C_LegendaryCrafting.GetRuneforgePowerSlots|C_LegendaryCrafting.GetRuneforgePowerSlots]](<span class="apiarg">runeforgePowerID</span>) : <span class="apiret">slotNames</span>
: [[API C_LegendaryCrafting.IsRuneforgeLegendary|C_LegendaryCrafting.IsRuneforgeLegendary]](<span class="apiarg">item</span>) : <span class="apiret">isRuneforgeLegendary</span>
: [[API C_LegendaryCrafting.IsRuneforgeLegendaryMaxLevel|C_LegendaryCrafting.IsRuneforgeLegendaryMaxLevel]](<span class="apiarg">runeforgeLegendary</span>) : <span class="apiret">isMaxLevel</span>
: [[API C_LegendaryCrafting.IsUpgradeItemValidForRuneforgeLegendary|C_LegendaryCrafting.IsUpgradeItemValidForRuneforgeLegendary]](<span class="apiarg">runeforgeLegendary, upgradeItem</span>) : <span class="apiret">isValid</span>
: [[API C_LegendaryCrafting.IsValidRuneforgeBaseItem|C_LegendaryCrafting.IsValidRuneforgeBaseItem]](<span class="apiarg">baseItem</span>) : <span class="apiret">isValid</span>
: [[API C_LegendaryCrafting.MakeRuneforgeCraftDescription|C_LegendaryCrafting.MakeRuneforgeCraftDescription]](<span class="apiarg">baseItem, runeforgePowerID, modifiers</span>) : <span class="apiret">description</span>
: [[API C_LegendaryCrafting.UpgradeRuneforgeLegendary|C_LegendaryCrafting.UpgradeRuneforgeLegendary]](<span class="apiarg">runeforgeLegendary, upgradeItem</span>)
: <small>DEPRECATED</small> [[API C_LegendaryCrafting.GetRuneforgePowersByClassAndSpec|C_LegendaryCrafting.GetRuneforgePowersByClassAndSpec]](<span class="apiarg">[classID, specID, filter]</span>) : <span class="apiret">runeforgePowerIDs</span>

==== Soulbinds ====
Relates to [[Soulbinding]] and [[Conduit]]s.
: [[API C_Soulbinds.ActivateSoulbind|C_Soulbinds.ActivateSoulbind]](<span class="apiarg">soulbindID</span>)
: [[API C_Soulbinds.CanActivateSoulbind|C_Soulbinds.CanActivateSoulbind]](<span class="apiarg">soulbindID</span>) : <span class="apiret">result, errorDescription</span>
: [[API C_Soulbinds.CanModifySoulbind|C_Soulbinds.CanModifySoulbind]]() : <span class="apiret">result</span>
: [[API C_Soulbinds.CanResetConduitsInSoulbind|C_Soulbinds.CanResetConduitsInSoulbind]](<span class="apiarg">soulbindID</span>) : <span class="apiret">result, errorDescription</span>
: [[API C_Soulbinds.CanSwitchActiveSoulbindTreeBranch|C_Soulbinds.CanSwitchActiveSoulbindTreeBranch]]() : <span class="apiret">result</span>
: [[API C_Soulbinds.CloseUI|C_Soulbinds.CloseUI]]()
: [[API C_Soulbinds.CommitPendingConduitsInSoulbind|C_Soulbinds.CommitPendingConduitsInSoulbind]](<span class="apiarg">soulbindID</span>)
: [[API C_Soulbinds.FindNodeIDActuallyInstalled|C_Soulbinds.FindNodeIDActuallyInstalled]](<span class="apiarg">soulbindID, conduitID</span>) : <span class="apiret">nodeID</span>
: [[API C_Soulbinds.FindNodeIDAppearingInstalled|C_Soulbinds.FindNodeIDAppearingInstalled]](<span class="apiarg">soulbindID, conduitID</span>) : <span class="apiret">nodeID</span>
: [[API C_Soulbinds.FindNodeIDPendingInstall|C_Soulbinds.FindNodeIDPendingInstall]](<span class="apiarg">soulbindID, conduitID</span>) : <span class="apiret">nodeID</span>
: [[API C_Soulbinds.FindNodeIDPendingUninstall|C_Soulbinds.FindNodeIDPendingUninstall]](<span class="apiarg">soulbindID, conduitID</span>) : <span class="apiret">nodeID</span>
: [[API C_Soulbinds.GetActiveSoulbindID|C_Soulbinds.GetActiveSoulbindID]]() : <span class="apiret">soulbindID</span>
: [[API C_Soulbinds.GetConduitCollection|C_Soulbinds.GetConduitCollection]](<span class="apiarg">conduitType</span>) : <span class="apiret">collectionData</span>
: [[API C_Soulbinds.GetConduitCollectionCount|C_Soulbinds.GetConduitCollectionCount]]() : <span class="apiret">count</span>
: [[API C_Soulbinds.GetConduitCollectionData|C_Soulbinds.GetConduitCollectionData]](<span class="apiarg">conduitID</span>) : <span class="apiret">collectionData</span>
: [[API C_Soulbinds.GetConduitCollectionDataAtCursor|C_Soulbinds.GetConduitCollectionDataAtCursor]]() : <span class="apiret">collectionData</span>
: [[API C_Soulbinds.GetConduitCollectionDataByVirtualID|C_Soulbinds.GetConduitCollectionDataByVirtualID]](<span class="apiarg">virtualID</span>) : <span class="apiret">collectionData</span>
: [[API C_Soulbinds.GetConduitDisplayed|C_Soulbinds.GetConduitDisplayed]](<span class="apiarg">nodeID</span>) : <span class="apiret">conduitID</span>
: [[API C_Soulbinds.GetConduitHyperlink|C_Soulbinds.GetConduitHyperlink]](<span class="apiarg">conduitID, rank</span>) : <span class="apiret">link</span>
: [[API C_Soulbinds.GetConduitIDPendingInstall|C_Soulbinds.GetConduitIDPendingInstall]](<span class="apiarg">nodeID</span>) : <span class="apiret">conduitID</span>
: [[API C_Soulbinds.GetConduitQuality|C_Soulbinds.GetConduitQuality]](<span class="apiarg">conduitID, rank</span>) : <span class="apiret">quality</span>
: [[API C_Soulbinds.GetConduitRank|C_Soulbinds.GetConduitRank]](<span class="apiarg">conduitID</span>) : <span class="apiret">conduitRank</span>
: [[API C_Soulbinds.GetConduitSpellID|C_Soulbinds.GetConduitSpellID]](<span class="apiarg">conduitID, conduitRank</span>) : <span class="apiret">spellID</span>
: [[API C_Soulbinds.GetInstalledConduitID|C_Soulbinds.GetInstalledConduitID]](<span class="apiarg">nodeID</span>) : <span class="apiret">conduitID</span>
: [[API C_Soulbinds.GetNode|C_Soulbinds.GetNode]](<span class="apiarg">nodeID</span>) : <span class="apiret">node</span>
: [[API C_Soulbinds.GetSoulbindData|C_Soulbinds.GetSoulbindData]](<span class="apiarg">soulbindID</span>) : <span class="apiret">data</span>
: [[API C_Soulbinds.GetSpecsAssignedToSoulbind|C_Soulbinds.GetSpecsAssignedToSoulbind]](<span class="apiarg">soulbindID</span>) : <span class="apiret">specIDs</span>
: [[API C_Soulbinds.GetTree|C_Soulbinds.GetTree]](<span class="apiarg">treeID</span>) : <span class="apiret">tree</span>
: [[API C_Soulbinds.HasAnyInstalledConduitInSoulbind|C_Soulbinds.HasAnyInstalledConduitInSoulbind]](<span class="apiarg">soulbindID</span>) : <span class="apiret">result</span>
: [[API C_Soulbinds.HasAnyPendingConduits|C_Soulbinds.HasAnyPendingConduits]]() : <span class="apiret">result</span>
: [[API C_Soulbinds.HasPendingConduitsInSoulbind|C_Soulbinds.HasPendingConduitsInSoulbind]](<span class="apiarg">soulbindID</span>) : <span class="apiret">result</span>
: [[API C_Soulbinds.IsConduitInstalled|C_Soulbinds.IsConduitInstalled]](<span class="apiarg">nodeID</span>) : <span class="apiret">result</span>
: [[API C_Soulbinds.IsConduitInstalledInSoulbind|C_Soulbinds.IsConduitInstalledInSoulbind]](<span class="apiarg">soulbindID, conduitID</span>) : <span class="apiret">result</span>
: [[API C_Soulbinds.IsItemConduitByItemInfo|C_Soulbinds.IsItemConduitByItemInfo]](<span class="apiarg">itemInfo</span>) : <span class="apiret">result</span>
: [[API C_Soulbinds.IsNodePendingModify|C_Soulbinds.IsNodePendingModify]](<span class="apiarg">nodeID</span>) : <span class="apiret">result</span>
: [[API C_Soulbinds.IsUnselectedConduitPendingInSoulbind|C_Soulbinds.IsUnselectedConduitPendingInSoulbind]](<span class="apiarg">soulbindID</span>) : <span class="apiret">result</span>
: [[API C_Soulbinds.ModifyNode|C_Soulbinds.ModifyNode]](<span class="apiarg">nodeID, conduitID, type</span>)
: [[API C_Soulbinds.SelectNode|C_Soulbinds.SelectNode]](<span class="apiarg">nodeID</span>)
: [[API C_Soulbinds.UnmodifyNode|C_Soulbinds.UnmodifyNode]](<span class="apiarg">nodeID</span>)
: [[API C_Item.IsItemConduit|C_Item.IsItemConduit]](<span class="apiarg">itemLoc</span>) : <span class="apiret">isConduit</span>
: [[API SetCursorVirtualItem|SetCursorVirtualItem]]()
: <small>DEPRECATED</small> [[API C_Soulbinds.GetConduitItemLevel|C_Soulbinds.GetConduitItemLevel]](<span class="apiarg">conduitID, rank</span>) : <span class="apiret">itemLevel</span>
